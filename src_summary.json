{
    "src/provide/foundation/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation",
            "provide.foundation.console",
            "provide.foundation.context",
            "provide.foundation.errors",
            "provide.foundation.eventsets.display",
            "provide.foundation.eventsets.types",
            "provide.foundation.hub.components",
            "provide.foundation.hub.manager",
            "provide.foundation.hub.registry",
            "provide.foundation.logger",
            "provide.foundation.logger.types",
            "provide.foundation.resilience",
            "provide.foundation.setup",
            "provide.foundation.utils",
            "provide.foundation._version",
            "provide.foundation.utils.importer"
        ],
        "functions": [
            "__getattr__"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "module_name"
        ]
    },
    "src/provide/foundation/_version.py": {
        "imports": [
            "__future__",
            "pathlib",
            "threading",
            "importlib.metadata"
        ],
        "functions": [
            "reset_version_cache",
            "_find_project_root",
            "get_version",
            "__getattr__"
        ],
        "classes": [],
        "variables": [
            "_version_lock",
            "current",
            "_cached_version",
            "version_file",
            "current",
            "project_root",
            "_cached_version",
            "version_file",
            "_cached_version",
            "_cached_version"
        ]
    },
    "src/provide/foundation/state/config.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "contextlib",
            "threading",
            "time",
            "typing",
            "attrs",
            "provide.foundation.config.defaults",
            "provide.foundation.state.base",
            "attrs"
        ],
        "functions": [
            "with_changes",
            "get",
            "set",
            "update",
            "remove",
            "merge",
            "register_config",
            "get_config",
            "update_config",
            "set_config_value",
            "get_config_value",
            "add_change_listener",
            "remove_change_listener",
            "list_configs",
            "get_config_generation",
            "reset_config",
            "clear_all",
            "_notify_listeners"
        ],
        "classes": [
            "VersionedConfig",
            "ConfigManager"
        ],
        "variables": [
            "new_data",
            "new_data",
            "new_data",
            "new_data",
            "config",
            "config",
            "config_name",
            "listeners",
            "manager",
            "manager",
            "manager",
            "current_config",
            "new_config",
            "manager",
            "current_config",
            "new_config",
            "listeners",
            "manager",
            "state",
            "current",
            "initial_config"
        ]
    },
    "src/provide/foundation/state/base.py": {
        "imports": [
            "__future__",
            "abc",
            "collections.abc",
            "contextlib",
            "threading",
            "time",
            "typing",
            "attrs",
            "attrs"
        ],
        "functions": [
            "with_changes",
            "can_transition",
            "execute_action",
            "__init__",
            "current_state",
            "state_history",
            "add_transition",
            "transition",
            "reset",
            "current_state",
            "generation",
            "update_state",
            "replace_state",
            "add_observer",
            "remove_observer"
        ],
        "classes": [
            "ImmutableState",
            "StateTransition",
            "StateMachine",
            "StateManager"
        ],
        "variables": [
            "StateT",
            "EventT",
            "key",
            "key",
            "transition",
            "old_state",
            "old_state",
            "new_state",
            "old_state"
        ]
    },
    "src/provide/foundation/state/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.state.base",
            "provide.foundation.state.config"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/crypto/hashing.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "pathlib",
            "typing",
            "provide.foundation.crypto.algorithms",
            "provide.foundation.errors.resources",
            "provide.foundation.logger"
        ],
        "functions": [
            "hash_file",
            "hash_data",
            "hash_string",
            "hash_stream",
            "hash_file_multiple",
            "hash_chunks"
        ],
        "classes": [],
        "variables": [
            "log",
            "DEFAULT_CHUNK_SIZE",
            "hasher",
            "hasher",
            "hash_value",
            "hasher",
            "bytes_read",
            "hash_value",
            "hashers",
            "hasher",
            "bytes_processed",
            "hash_value",
            "path",
            "hash_value",
            "path",
            "results"
        ]
    },
    "src/provide/foundation/crypto/prefixed.py": {
        "imports": [
            "__future__",
            "provide.foundation.crypto.algorithms",
            "provide.foundation.crypto.hashing",
            "provide.foundation.logger",
            "zlib"
        ],
        "functions": [
            "format_checksum",
            "parse_checksum",
            "verify_checksum",
            "normalize_checksum",
            "is_strong_checksum"
        ],
        "classes": [],
        "variables": [
            "log",
            "digest",
            "result",
            "parts",
            "supported_algorithms",
            "normalized",
            "checksum",
            "result",
            "actual_checksum",
            "actual_value",
            "matches",
            "strong_algorithms",
            "is_strong"
        ]
    },
    "src/provide/foundation/crypto/constants.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.crypto.algorithms",
            "provide.foundation.config"
        ],
        "functions": [
            "_get_config_value",
            "get_default_hash_algorithm",
            "get_default_signature_algorithm"
        ],
        "classes": [],
        "variables": [
            "config"
        ]
    },
    "src/provide/foundation/crypto/keys.py": {
        "imports": [
            "__future__",
            "typing",
            "cryptography.hazmat.primitives.asymmetric",
            "provide.foundation",
            "provide.foundation.crypto.constants",
            "provide.foundation.crypto.signatures"
        ],
        "functions": [
            "generate_rsa_keypair",
            "generate_ec_keypair",
            "generate_keypair",
            "generate_signing_keypair",
            "generate_tls_keypair",
            "public_key"
        ],
        "classes": [
            "KeyPair"
        ],
        "variables": [
            "RSAKeyPair",
            "ECKeyPair",
            "Ed25519KeyPair",
            "KeyPairType",
            "private_key",
            "public_key",
            "curve_obj",
            "private_key",
            "public_key",
            "key_type_lower",
            "key_size",
            "curve"
        ]
    },
    "src/provide/foundation/crypto/defaults.py": {
        "imports": [
            "__future__"
        ],
        "functions": [
            "default_certificate_alt_names",
            "default_supported_ec_curves",
            "default_supported_key_types",
            "default_supported_rsa_sizes"
        ],
        "classes": [],
        "variables": [
            "DEFAULT_CERTIFICATE_KEY_TYPE",
            "DEFAULT_CERTIFICATE_VALIDITY_DAYS",
            "DEFAULT_CERTIFICATE_COMMON_NAME",
            "DEFAULT_CERTIFICATE_GENERATE_KEYPAIR",
            "DEFAULT_CERTIFICATE_ORGANIZATION_NAME",
            "DEFAULT_ECDSA_CURVE",
            "DEFAULT_RSA_KEY_SIZE",
            "DEFAULT_SIGNATURE_ALGORITHM",
            "DEFAULT_ED25519_PRIVATE_KEY_SIZE",
            "DEFAULT_ED25519_PUBLIC_KEY_SIZE",
            "DEFAULT_ED25519_SIGNATURE_SIZE",
            "__all__"
        ]
    },
    "src/provide/foundation/crypto/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.crypto.algorithms",
            "provide.foundation.crypto.checksums",
            "provide.foundation.crypto.prefixed",
            "provide.foundation.crypto.deps",
            "provide.foundation.crypto.hashing",
            "provide.foundation.crypto.utils"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/crypto/rsa.py": {
        "imports": [
            "__future__",
            "functools",
            "typing",
            "attrs",
            "provide.foundation",
            "provide.foundation.crypto.constants",
            "provide.foundation.errors.crypto",
            "cryptography.hazmat.primitives",
            "cryptography.hazmat.primitives.asymmetric",
            "cryptography.hazmat.primitives",
            "cryptography.hazmat.primitives.asymmetric"
        ],
        "functions": [
            "_require_crypto",
            "generate",
            "__attrs_post_init__",
            "public_key_pem",
            "sign",
            "export_private_key_pem",
            "__attrs_post_init__",
            "verify"
        ],
        "classes": [
            "RSASigner",
            "RSAVerifier"
        ],
        "variables": [
            "__all__",
            "_HAS_CRYPTO",
            "_HAS_CRYPTO",
            "private_key_obj",
            "private_key_pem",
            "public_key_bytes",
            "signature"
        ]
    },
    "src/provide/foundation/crypto/algorithms.py": {
        "imports": [
            "__future__",
            "hashlib",
            "typing",
            "provide.foundation.errors.config"
        ],
        "functions": [
            "validate_algorithm",
            "get_hasher",
            "is_secure_algorithm",
            "get_digest_size"
        ],
        "classes": [],
        "variables": [
            "SUPPORTED_ALGORITHMS",
            "DEFAULT_ALGORITHM",
            "SECURE_ALGORITHMS",
            "algorithm_lower",
            "hasher"
        ]
    },
    "src/provide/foundation/crypto/utils.py": {
        "imports": [
            "__future__",
            "hashlib",
            "provide.foundation.crypto.algorithms"
        ],
        "functions": [
            "quick_hash",
            "hash_name",
            "compare_hash",
            "format_hash",
            "truncate_hash",
            "hash_to_int",
            "int_to_hash",
            "is_valid_hash"
        ],
        "classes": [],
        "variables": [
            "hash_bytes",
            "formatted_parts",
            "hex_str",
            "hex_str",
            "expected_length"
        ]
    },
    "src/provide/foundation/crypto/deps.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.crypto.certificates",
            "provide.foundation.crypto.constants",
            "provide.foundation.crypto.ed25519",
            "provide.foundation.crypto.keys",
            "provide.foundation.crypto.rsa",
            "provide.foundation.crypto.signatures",
            "provide.foundation.utils.stubs",
            "provide.foundation.crypto.defaults"
        ],
        "functions": [],
        "classes": [
            "CertificateError"
        ],
        "variables": [
            "__all__",
            "_HAS_CRYPTO",
            "Certificate",
            "CertificateBase",
            "CertificateConfig",
            "CurveType",
            "KeyType",
            "create_ca",
            "create_self_signed",
            "generate_ec_keypair",
            "generate_ed25519_keypair",
            "generate_keypair",
            "generate_rsa_keypair",
            "generate_signing_keypair",
            "generate_tls_keypair",
            "sign_data",
            "verify_signature",
            "Ed25519Signer",
            "Ed25519Verifier",
            "RSASigner",
            "RSAVerifier",
            "SUPPORTED_EC_CURVES",
            "SUPPORTED_KEY_TYPES",
            "SUPPORTED_RSA_SIZES",
            "get_default_hash_algorithm",
            "get_default_signature_algorithm",
            "_HAS_CRYPTO",
            "_HAS_CRYPTO"
        ]
    },
    "src/provide/foundation/crypto/checksums.py": {
        "imports": [
            "__future__",
            "pathlib",
            "provide.foundation.crypto.algorithms",
            "provide.foundation.crypto.hashing",
            "provide.foundation.crypto.utils",
            "provide.foundation.errors.resources",
            "provide.foundation.logger",
            "provide.foundation.crypto.hashing",
            "provide.foundation.file.safe",
            "provide.foundation.file.atomic"
        ],
        "functions": [
            "verify_file",
            "verify_data",
            "calculate_checksums",
            "parse_checksum_file",
            "write_checksum_file",
            "verify_checksum_file"
        ],
        "classes": [],
        "variables": [
            "log",
            "actual_hash",
            "matches",
            "checksums",
            "checksums",
            "checksums",
            "verified",
            "failed",
            "path",
            "actual_hash",
            "matches",
            "algorithms",
            "path",
            "content",
            "path",
            "lines",
            "content",
            "checksum_file",
            "base_dir",
            "file_path",
            "line",
            "parts",
            "base_dir",
            "filename"
        ]
    },
    "src/provide/foundation/crypto/ed25519.py": {
        "imports": [
            "__future__",
            "functools",
            "typing",
            "attrs",
            "provide.foundation",
            "provide.foundation.crypto.constants",
            "provide.foundation.errors.crypto",
            "cryptography.hazmat.primitives",
            "cryptography.hazmat.primitives.asymmetric",
            "cryptography.hazmat.primitives",
            "cryptography.hazmat.primitives.asymmetric"
        ],
        "functions": [
            "_require_crypto",
            "generate",
            "__attrs_post_init__",
            "public_key",
            "sign",
            "export_private_key",
            "__attrs_post_init__",
            "verify"
        ],
        "classes": [
            "Ed25519Signer",
            "Ed25519Verifier"
        ],
        "variables": [
            "__all__",
            "_HAS_CRYPTO",
            "_HAS_CRYPTO",
            "private_key_obj",
            "private_key_bytes",
            "public_key_bytes",
            "signature"
        ]
    },
    "src/provide/foundation/crypto/signatures.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation",
            "provide.foundation.crypto.constants",
            "provide.foundation.errors.crypto",
            "cryptography.exceptions",
            "cryptography.hazmat.primitives",
            "cryptography.hazmat.primitives.asymmetric",
            "cryptography.exceptions",
            "cryptography.hazmat.primitives",
            "cryptography.hazmat.primitives.asymmetric"
        ],
        "functions": [
            "_require_crypto",
            "generate_ed25519_keypair",
            "sign_data",
            "verify_signature",
            "generate_signing_keypair"
        ],
        "classes": [],
        "variables": [
            "_HAS_CRYPTO",
            "private_key",
            "private_key_bytes",
            "public_key_bytes",
            "private_key_obj",
            "signature",
            "_HAS_CRYPTO",
            "public_key_obj"
        ]
    },
    "src/provide/foundation/crypto/certificates/loader.py": {
        "imports": [
            "__future__",
            "datetime",
            "os",
            "pathlib",
            "traceback",
            "typing",
            "provide.foundation",
            "provide.foundation.crypto.certificates.base",
            "cryptography",
            "cryptography.hazmat.primitives.asymmetric",
            "cryptography.hazmat.primitives.serialization",
            "cryptography",
            "cryptography.hazmat.primitives.asymmetric",
            "cryptography.hazmat.primitives.serialization"
        ],
        "functions": [
            "load_from_uri_or_pem",
            "load_certificate_from_pem"
        ],
        "classes": [],
        "variables": [
            "_HAS_CRYPTO",
            "_HAS_CRYPTO",
            "loaded_data",
            "cert_data",
            "x509_cert",
            "private_key",
            "key_data",
            "loaded_not_valid_before",
            "loaded_not_valid_after",
            "cert_public_key",
            "base",
            "path_str",
            "key_data",
            "loaded_priv_key",
            "private_key",
            "loaded_not_valid_before",
            "loaded_not_valid_after",
            "path",
            "path_str",
            "path",
            "loaded_data",
            "path_str"
        ]
    },
    "src/provide/foundation/crypto/certificates/base.py": {
        "imports": [
            "__future__",
            "datetime",
            "enum",
            "traceback",
            "typing",
            "attrs",
            "provide.foundation",
            "provide.foundation.crypto.constants",
            "provide.foundation.errors.config",
            "cryptography",
            "cryptography.hazmat.primitives.asymmetric",
            "cryptography.x509.oid",
            "cryptography",
            "cryptography.hazmat.primitives.asymmetric",
            "cryptography.x509.oid"
        ],
        "functions": [
            "_require_crypto",
            "__init__",
            "create",
            "_create_name"
        ],
        "classes": [
            "CertificateError",
            "KeyType",
            "CurveType",
            "CertificateConfig",
            "CertificateBase"
        ],
        "variables": [
            "_HAS_CRYPTO",
            "RSA",
            "ECDSA",
            "SECP256R1",
            "SECP384R1",
            "SECP521R1",
            "KeyPair",
            "PublicKey",
            "_HAS_CRYPTO",
            "not_valid_before",
            "not_valid_after",
            "subject",
            "issuer",
            "serial_number",
            "base",
            "not_valid_before",
            "not_valid_after",
            "key_size",
            "private_key",
            "curve_choice",
            "curve",
            "private_key"
        ]
    },
    "src/provide/foundation/crypto/certificates/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.crypto.certificates.base",
            "provide.foundation.crypto.certificates.certificate",
            "provide.foundation.crypto.certificates.factory",
            "provide.foundation.crypto.certificates.operations"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/crypto/certificates/certificate.py": {
        "imports": [
            "__future__",
            "datetime",
            "functools",
            "typing",
            "attrs",
            "provide.foundation",
            "provide.foundation.crypto.certificates.base",
            "provide.foundation.crypto.certificates.generator",
            "provide.foundation.crypto.certificates.loader",
            "provide.foundation.crypto.certificates.operations",
            "provide.foundation.crypto.certificates.trust",
            "provide.foundation.crypto.constants",
            "provide.foundation.crypto.defaults",
            "cryptography",
            "cryptography.hazmat.primitives.asymmetric",
            "cryptography.x509",
            "cryptography",
            "cryptography.hazmat.primitives.asymmetric",
            "cryptography.x509",
            "provide.foundation.crypto.certificates.factory",
            "provide.foundation.crypto.certificates.factory",
            "provide.foundation.crypto.certificates.factory",
            "provide.foundation.crypto.certificates.factory",
            "provide.foundation.crypto.certificates.trust"
        ],
        "functions": [
            "trust_chain",
            "trust_chain",
            "is_valid",
            "is_ca",
            "subject",
            "issuer",
            "public_key",
            "serial_number",
            "from_pem",
            "generate",
            "create_ca",
            "create_signed_certificate",
            "create_self_signed_server_cert",
            "create_self_signed_client_cert",
            "verify_trust",
            "_create_x509_certificate",
            "_validate_signature",
            "__eq__",
            "__hash__",
            "__repr__"
        ],
        "classes": [
            "Certificate"
        ],
        "variables": [
            "KeyPair",
            "_HAS_CRYPTO",
            "_HAS_CRYPTO",
            "now",
            "valid",
            "validity_delta",
            "validity_days",
            "alt_names",
            "eq",
            "h",
            "ext",
            "cn_attr",
            "common_name",
            "org_attr",
            "organization_name",
            "key_type",
            "subject_str",
            "issuer_str",
            "valid_str",
            "ca_str",
            "common_name",
            "organization_name",
            "key_type",
            "key_type",
            "subject_str",
            "issuer_str",
            "valid_str",
            "ca_str"
        ]
    },
    "src/provide/foundation/crypto/certificates/operations.py": {
        "imports": [
            "__future__",
            "traceback",
            "typing",
            "provide.foundation",
            "provide.foundation.crypto.certificates.base",
            "cryptography",
            "cryptography.hazmat.primitives",
            "cryptography.hazmat.primitives.asymmetric",
            "cryptography.x509",
            "cryptography.x509.oid",
            "cryptography",
            "cryptography.hazmat.primitives",
            "cryptography.hazmat.primitives.asymmetric",
            "cryptography.x509",
            "cryptography.x509.oid"
        ],
        "functions": [
            "create_x509_certificate",
            "validate_signature"
        ],
        "classes": [],
        "variables": [
            "_HAS_CRYPTO",
            "_HAS_CRYPTO",
            "actual_issuer_name",
            "actual_signing_key",
            "builder",
            "san_list",
            "builder",
            "signed_cert",
            "signature",
            "tbs_certificate_bytes",
            "signature_hash_algorithm",
            "builder",
            "builder",
            "builder",
            "extended_usages",
            "builder"
        ]
    },
    "src/provide/foundation/crypto/certificates/factory.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation",
            "provide.foundation.crypto.certificates.base",
            "provide.foundation.crypto.certificates.operations",
            "provide.foundation.crypto.constants",
            "cryptography.hazmat.primitives",
            "provide.foundation.crypto.certificates.certificate",
            "cryptography.hazmat.primitives",
            "provide.foundation.crypto.certificates.certificate",
            "provide.foundation.crypto.certificates.certificate",
            "provide.foundation.crypto.certificates.certificate",
            "provide.foundation.crypto.certificates.certificate"
        ],
        "functions": [
            "create_ca_certificate",
            "create_signed_certificate",
            "create_self_signed_server_cert",
            "create_self_signed_client_cert",
            "create_self_signed",
            "create_ca"
        ],
        "classes": [],
        "variables": [
            "_HAS_CRYPTO",
            "ca_cert_obj",
            "actual_ca_x509_cert",
            "new_cert_obj",
            "signed_x509_cert",
            "cert_obj",
            "cert_obj",
            "_HAS_CRYPTO"
        ]
    },
    "src/provide/foundation/crypto/certificates/trust.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation",
            "provide.foundation.crypto.certificates.base",
            "provide.foundation.crypto.certificates.operations",
            "provide.foundation.crypto.certificates.certificate",
            "cryptography"
        ],
        "functions": [
            "verify_trust",
            "validate_signature_wrapper"
        ],
        "classes": [],
        "variables": [
            "_HAS_CRYPTO",
            "_HAS_CRYPTO"
        ]
    },
    "src/provide/foundation/crypto/certificates/generator.py": {
        "imports": [
            "__future__",
            "datetime",
            "traceback",
            "typing",
            "provide.foundation",
            "provide.foundation.crypto.certificates.base",
            "provide.foundation.crypto.certificates.operations",
            "provide.foundation.crypto.constants",
            "cryptography",
            "cryptography.hazmat.primitives",
            "cryptography",
            "cryptography.hazmat.primitives"
        ],
        "functions": [
            "_parse_key_type_and_params",
            "_build_certificate_config",
            "_serialize_to_pem",
            "generate_certificate"
        ],
        "classes": [],
        "variables": [
            "normalized_key_type_str",
            "cert_pem",
            "key_pem",
            "_HAS_CRYPTO",
            "_HAS_CRYPTO",
            "now",
            "not_valid_before",
            "not_valid_after",
            "conf",
            "x509_cert",
            "curve"
        ]
    },
    "src/provide/foundation/console/output.py": {
        "imports": [
            "__future__",
            "sys",
            "typing",
            "provide.foundation.context",
            "provide.foundation.errors.decorators",
            "provide.foundation.serialization",
            "provide.foundation.utils.caching",
            "provide.foundation.utils.environment",
            "click"
        ],
        "functions": [
            "_get_context",
            "_should_use_json",
            "_get_color_env_settings",
            "_should_use_color",
            "_output_json",
            "pout",
            "perr"
        ],
        "classes": [],
        "variables": [
            "_HAS_CLICK",
            "ctx",
            "force_color",
            "force",
            "no_color",
            "json_str",
            "ctx",
            "nl",
            "ctx",
            "nl",
            "_HAS_CLICK",
            "ctx",
            "ctx",
            "output",
            "color",
            "bold",
            "dim",
            "output",
            "color",
            "bold",
            "dim",
            "output",
            "output"
        ]
    },
    "src/provide/foundation/console/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.console.input",
            "provide.foundation.console.output",
            "click"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__",
            "_HAS_CLICK",
            "_HAS_CLICK"
        ]
    },
    "src/provide/foundation/console/input.py": {
        "imports": [
            "__future__",
            "asyncio",
            "collections.abc",
            "contextlib",
            "sys",
            "typing",
            "provide.foundation.context",
            "provide.foundation.errors",
            "provide.foundation.logger",
            "provide.foundation.serialization",
            "click",
            "functools",
            "getpass",
            "click"
        ],
        "functions": [
            "_get_context",
            "_should_use_json",
            "_should_use_color",
            "_handle_json_input",
            "_build_click_prompt_kwargs",
            "_apply_prompt_styling",
            "_handle_click_input",
            "_build_fallback_prompt",
            "_get_fallback_input",
            "_apply_type_conversion",
            "_handle_fallback_input",
            "_handle_interactive_input",
            "pin",
            "pin_stream",
            "pin_lines",
            "read_json"
        ],
        "classes": [],
        "variables": [
            "log",
            "T",
            "_HAS_CLICK",
            "ctx",
            "prompt_kwargs",
            "color",
            "bold",
            "prompt_kwargs",
            "styled_prompt",
            "display_prompt",
            "user_input",
            "ctx",
            "ctx",
            "loop",
            "func",
            "ctx",
            "lines",
            "lines",
            "i",
            "_HAS_CLICK",
            "ctx",
            "ctx",
            "line",
            "user_input",
            "stdin_content",
            "line_count",
            "loop",
            "lines",
            "line_count",
            "loop",
            "reader",
            "protocol",
            "data",
            "data",
            "data",
            "line",
            "stdin_content",
            "data",
            "line_bytes",
            "line"
        ]
    },
    "src/provide/foundation/archive/defaults.py": {
        "imports": [
            "__future__",
            "zipfile"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "DEFAULT_ARCHIVE_DETERMINISTIC",
            "DEFAULT_ARCHIVE_PRESERVE_METADATA",
            "DEFAULT_ARCHIVE_PRESERVE_PERMISSIONS",
            "DEFAULT_BZIP2_COMPRESSION_LEVEL",
            "DEFAULT_GZIP_COMPRESSION_LEVEL",
            "DEFAULT_XZ_COMPRESSION_LEVEL",
            "DEFAULT_ZSTD_COMPRESSION_LEVEL",
            "DEFAULT_ZIP_COMPRESSION_LEVEL",
            "DEFAULT_ZIP_COMPRESSION_TYPE",
            "DEFAULT_ZIP_PASSWORD",
            "DEFAULT_ARCHIVE_MAX_TOTAL_SIZE",
            "DEFAULT_ARCHIVE_MAX_FILE_COUNT",
            "DEFAULT_ARCHIVE_MAX_COMPRESSION_RATIO",
            "DEFAULT_ARCHIVE_MAX_SINGLE_FILE_SIZE",
            "DEFAULT_ARCHIVE_LIMITS_ENABLED",
            "__all__"
        ]
    },
    "src/provide/foundation/archive/zstd.py": {
        "imports": [
            "__future__",
            "shutil",
            "typing",
            "attrs",
            "provide.foundation.archive.base",
            "provide.foundation.archive.defaults",
            "provide.foundation.config.base",
            "zstandard",
            "zstandard",
            "zstandard",
            "zstandard"
        ],
        "functions": [
            "_validate_zstd_level",
            "format_name",
            "_compress_stream",
            "_decompress_stream",
            "_compress_bytes_impl",
            "_decompress_bytes_impl"
        ],
        "classes": [
            "ZstdCompressor"
        ],
        "variables": [
            "cctx",
            "dctx",
            "cctx",
            "dctx"
        ]
    },
    "src/provide/foundation/archive/base.py": {
        "imports": [
            "__future__",
            "abc",
            "pathlib",
            "typing",
            "attrs",
            "provide.foundation.config.base",
            "provide.foundation.errors",
            "provide.foundation.file",
            "provide.foundation.logger"
        ],
        "functions": [
            "_validate_compression_level",
            "create",
            "extract",
            "validate",
            "format_name",
            "_compress_stream",
            "_decompress_stream",
            "_compress_bytes_impl",
            "_decompress_bytes_impl",
            "compress",
            "decompress",
            "compress_file",
            "decompress_file",
            "compress_bytes",
            "decompress_bytes"
        ],
        "classes": [
            "ArchiveError",
            "BaseArchive",
            "BaseCompressor"
        ],
        "variables": [
            "log"
        ]
    },
    "src/provide/foundation/archive/zip.py": {
        "imports": [
            "__future__",
            "pathlib",
            "typing",
            "zipfile",
            "attrs",
            "provide.foundation.archive.base",
            "provide.foundation.archive.defaults",
            "provide.foundation.archive.security",
            "provide.foundation.config.base",
            "provide.foundation.file",
            "provide.foundation.logger",
            "provide.foundation.archive.limits",
            "provide.foundation.archive.limits"
        ],
        "functions": [
            "_validate_compression_level",
            "create",
            "extract",
            "_validate_zip_members",
            "_validate_member_path",
            "_validate_symlink_if_present",
            "validate",
            "list_contents",
            "add_file",
            "extract_file"
        ],
        "classes": [
            "ZipArchive"
        ],
        "variables": [
            "log",
            "mode",
            "is_symlink",
            "limits",
            "tracker",
            "link_target",
            "result",
            "extract_base",
            "info",
            "arcname"
        ]
    },
    "src/provide/foundation/archive/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.archive.base",
            "provide.foundation.archive.bzip2",
            "provide.foundation.archive.gzip",
            "provide.foundation.archive.limits",
            "provide.foundation.archive.operations",
            "provide.foundation.archive.tar",
            "provide.foundation.archive.types",
            "provide.foundation.archive.xz",
            "provide.foundation.archive.zip",
            "provide.foundation.archive.zstd"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/archive/limits.py": {
        "imports": [
            "__future__",
            "pathlib",
            "attrs",
            "provide.foundation.archive.base",
            "provide.foundation.archive.defaults"
        ],
        "functions": [
            "get_archive_size",
            "__init__",
            "check_file_count",
            "check_file_size",
            "add_extracted_size",
            "set_compressed_size",
            "check_compression_ratio",
            "validate_member_size"
        ],
        "classes": [
            "ArchiveLimits",
            "ExtractionTracker"
        ],
        "variables": [
            "DEFAULT_LIMITS",
            "__all__",
            "ratio",
            "member_ratio"
        ]
    },
    "src/provide/foundation/archive/tar.py": {
        "imports": [
            "__future__",
            "pathlib",
            "tarfile",
            "typing",
            "attrs",
            "provide.foundation.archive.base",
            "provide.foundation.archive.defaults",
            "provide.foundation.archive.security",
            "provide.foundation.config.base",
            "provide.foundation.file",
            "provide.foundation.logger",
            "provide.foundation.archive.limits",
            "provide.foundation.archive.limits"
        ],
        "functions": [
            "deterministic_filter",
            "create",
            "extract",
            "validate",
            "list_contents",
            "_add_file"
        ],
        "classes": [
            "TarArchive"
        ],
        "variables": [
            "log",
            "tarinfo",
            "limits",
            "tracker",
            "contents",
            "safe_members",
            "arcname"
        ]
    },
    "src/provide/foundation/archive/types.py": {
        "imports": [
            "__future__",
            "enum"
        ],
        "functions": [
            "get_operation_from_string",
            "from_string",
            "to_string"
        ],
        "classes": [
            "ArchiveOperation"
        ],
        "variables": [
            "__all__",
            "NONE",
            "TAR",
            "GZIP",
            "BZIP2",
            "XZ",
            "ZSTD",
            "ZIP",
            "op_lower",
            "name_upper"
        ]
    },
    "src/provide/foundation/archive/bzip2.py": {
        "imports": [
            "__future__",
            "bz2",
            "shutil",
            "typing",
            "attrs",
            "provide.foundation.archive.base",
            "provide.foundation.archive.defaults",
            "provide.foundation.config.base"
        ],
        "functions": [
            "format_name",
            "_compress_stream",
            "_decompress_stream",
            "_compress_bytes_impl",
            "_decompress_bytes_impl"
        ],
        "classes": [
            "Bzip2Compressor"
        ],
        "variables": []
    },
    "src/provide/foundation/archive/operations.py": {
        "imports": [
            "__future__",
            "pathlib",
            "attrs",
            "provide.foundation.archive.base",
            "provide.foundation.archive.bzip2",
            "provide.foundation.archive.gzip",
            "provide.foundation.archive.tar",
            "provide.foundation.archive.types",
            "provide.foundation.archive.xz",
            "provide.foundation.archive.zip",
            "provide.foundation.archive.zstd",
            "provide.foundation.file",
            "provide.foundation.file.safe",
            "provide.foundation.logger"
        ],
        "functions": [
            "execute",
            "reverse",
            "_execute_operation",
            "_get_suffix_for_operation",
            "create_tar_gz",
            "extract_tar_gz",
            "create_tar_bz2",
            "extract_tar_bz2",
            "_detect_format_by_extension",
            "_detect_format_by_magic",
            "detect_format"
        ],
        "classes": [
            "OperationChain",
            "ArchiveOperations"
        ],
        "variables": [
            "log",
            "current",
            "temp_files",
            "reversed_chain",
            "config",
            "suffixes",
            "chain",
            "chain",
            "chain",
            "chain",
            "name",
            "operations",
            "operations",
            "current",
            "tar",
            "gzip",
            "bz2",
            "xz",
            "zstd",
            "zip_archive",
            "magic",
            "ustar_magic",
            "next_output",
            "suffix",
            "next_output"
        ]
    },
    "src/provide/foundation/archive/security.py": {
        "imports": [
            "__future__",
            "os",
            "pathlib"
        ],
        "functions": [
            "is_safe_path"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "full_path",
            "base_resolved"
        ]
    },
    "src/provide/foundation/archive/xz.py": {
        "imports": [
            "__future__",
            "lzma",
            "shutil",
            "typing",
            "attrs",
            "provide.foundation.archive.base",
            "provide.foundation.archive.defaults",
            "provide.foundation.config.base"
        ],
        "functions": [
            "format_name",
            "_compress_stream",
            "_decompress_stream",
            "_compress_bytes_impl",
            "_decompress_bytes_impl"
        ],
        "classes": [
            "XzCompressor"
        ],
        "variables": []
    },
    "src/provide/foundation/archive/gzip.py": {
        "imports": [
            "__future__",
            "gzip",
            "shutil",
            "typing",
            "attrs",
            "provide.foundation.archive.base",
            "provide.foundation.archive.defaults",
            "provide.foundation.config.base"
        ],
        "functions": [
            "format_name",
            "_compress_stream",
            "_decompress_stream",
            "_compress_bytes_impl",
            "_decompress_bytes_impl"
        ],
        "classes": [
            "GzipCompressor"
        ],
        "variables": []
    },
    "src/provide/foundation/security/defaults.py": {
        "imports": [
            "__future__"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "DEFAULT_SENSITIVE_HEADERS",
            "DEFAULT_SENSITIVE_PARAMS",
            "REDACTED_VALUE",
            "DEFAULT_SECRET_PATTERNS",
            "MASKED_VALUE",
            "__all__"
        ]
    },
    "src/provide/foundation/security/masking.py": {
        "imports": [
            "__future__",
            "re",
            "provide.foundation.security.defaults"
        ],
        "functions": [
            "mask_secrets",
            "mask_command",
            "should_mask"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "result",
            "cmd_str",
            "secret_patterns",
            "result",
            "secret_patterns"
        ]
    },
    "src/provide/foundation/security/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.security.masking",
            "provide.foundation.security.sanitization"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/security/sanitization.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "typing",
            "urllib.parse",
            "provide.foundation.security.defaults"
        ],
        "functions": [
            "sanitize_headers",
            "sanitize_uri",
            "sanitize_dict",
            "should_sanitize_body"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "sensitive_lower",
            "sanitized",
            "parsed",
            "params",
            "sensitive_lower",
            "sanitized_params",
            "new_query",
            "sensitive_lower",
            "sanitized",
            "content_type_lower",
            "sensitive_headers",
            "sensitive_params",
            "sensitive_keys"
        ]
    },
    "src/provide/foundation/streams/console.py": {
        "imports": [
            "__future__",
            "sys",
            "typing",
            "provide.foundation.streams.config",
            "provide.foundation.streams.core",
            "provide.foundation.hub.foundation"
        ],
        "functions": [
            "get_console_stream",
            "is_tty",
            "supports_color",
            "write_to_console"
        ],
        "classes": [],
        "variables": [
            "stream",
            "config",
            "target_stream"
        ]
    },
    "src/provide/foundation/streams/config.py": {
        "imports": [
            "__future__",
            "attrs",
            "provide.foundation.config.base",
            "provide.foundation.config.converters",
            "provide.foundation.config.env"
        ],
        "functions": [
            "get_stream_config",
            "reset_stream_config",
            "supports_color"
        ],
        "classes": [
            "StreamConfig"
        ],
        "variables": [
            "_stream_config",
            "_stream_config"
        ]
    },
    "src/provide/foundation/streams/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.streams.console",
            "provide.foundation.streams.core",
            "provide.foundation.streams.file"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/streams/core.py": {
        "imports": [
            "__future__",
            "sys",
            "threading",
            "typing",
            "provide.foundation.concurrency.locks",
            "provide.foundation.testmode.detection",
            "structlog",
            "provide.foundation.streams.config",
            "io",
            "provide.foundation.console.output",
            "io"
        ],
        "functions": [
            "_get_stream_lock",
            "get_log_stream",
            "_reconfigure_structlog_stream",
            "set_log_stream_for_testing",
            "ensure_stderr_default"
        ],
        "classes": [],
        "variables": [
            "current_config",
            "_PROVIDE_LOG_STREAM",
            "stream_config",
            "cache_loggers",
            "new_config",
            "_PROVIDE_LOG_STREAM",
            "_PROVIDE_LOG_STREAM",
            "_PROVIDE_LOG_STREAM",
            "_PROVIDE_LOG_STREAM",
            "_PROVIDE_LOG_STREAM"
        ]
    },
    "src/provide/foundation/streams/file.py": {
        "imports": [
            "__future__",
            "contextlib",
            "io",
            "pathlib",
            "sys",
            "provide.foundation.streams.core",
            "provide.foundation.utils.streams",
            "provide.foundation.streams.core",
            "provide.foundation.testmode.detection",
            "provide.foundation.streams.core",
            "provide.foundation.streams.core",
            "provide.foundation.testmode.detection",
            "provide.foundation.testmode.detection"
        ],
        "functions": [
            "_safe_error_output",
            "configure_file_logging",
            "flush_log_streams",
            "close_log_streams",
            "reset_streams"
        ],
        "classes": [],
        "variables": [
            "is_test_stream"
        ]
    },
    "src/provide/foundation/integrations/__init__.py": {
        "imports": [
            "__future__"
        ],
        "functions": [],
        "classes": [],
        "variables": []
    },
    "src/provide/foundation/integrations/openobserve/auth.py": {
        "imports": [
            "__future__",
            "base64",
            "provide.foundation.integrations.openobserve.exceptions"
        ],
        "functions": [
            "encode_basic_auth",
            "get_auth_headers",
            "validate_credentials"
        ],
        "classes": [],
        "variables": [
            "credentials",
            "encoded",
            "auth_token"
        ]
    },
    "src/provide/foundation/integrations/openobserve/config.py": {
        "imports": [
            "__future__",
            "attrs",
            "provide.foundation.config.base",
            "provide.foundation.config.env",
            "provide.foundation.integrations.openobserve.client"
        ],
        "functions": [
            "is_configured",
            "get_otlp_endpoint",
            "is_available"
        ],
        "classes": [
            "OpenObserveConfig"
        ],
        "variables": [
            "base_url",
            "org",
            "base_url",
            "client"
        ]
    },
    "src/provide/foundation/integrations/openobserve/streaming.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "re",
            "time",
            "typing",
            "provide.foundation.console.output",
            "provide.foundation.errors",
            "provide.foundation.integrations.openobserve.client",
            "provide.foundation.integrations.openobserve.exceptions",
            "provide.foundation.integrations.openobserve.models",
            "provide.foundation.serialization",
            "provide.foundation.utils.async_helpers"
        ],
        "functions": [
            "stream_logs",
            "_parse_time_param",
            "_process_stream_line",
            "stream_search_http2",
            "_build_where_clause_from_filters",
            "tail_logs"
        ],
        "classes": [],
        "variables": [
            "seen_ids",
            "start_ts",
            "end_ts",
            "uri",
            "params",
            "data",
            "results",
            "conditions",
            "where_clause",
            "sql",
            "response",
            "client",
            "last_timestamp",
            "parsed_data",
            "client",
            "results",
            "escaped_value",
            "client",
            "stream_sql",
            "last_timestamp",
            "last_timestamp",
            "response",
            "cutoff_time",
            "seen_ids",
            "lines",
            "last_timestamp",
            "last_timestamp",
            "timestamp",
            "log_id",
            "last_timestamp"
        ]
    },
    "src/provide/foundation/integrations/openobserve/client.py": {
        "imports": [
            "__future__",
            "datetime",
            "typing",
            "urllib.parse",
            "provide.foundation.errors.decorators",
            "provide.foundation.integrations.openobserve.auth",
            "provide.foundation.integrations.openobserve.exceptions",
            "provide.foundation.integrations.openobserve.models",
            "provide.foundation.logger",
            "provide.foundation.transport",
            "provide.foundation.transport.errors",
            "provide.foundation.integrations.openobserve.config"
        ],
        "functions": [
            "__init__",
            "from_config",
            "_extract_error_message",
            "_check_response_errors"
        ],
        "classes": [
            "OpenObserveClient"
        ],
        "variables": [
            "log",
            "config",
            "uri",
            "now",
            "start_ts",
            "end_ts",
            "query",
            "response",
            "result",
            "response",
            "streams",
            "response",
            "error_data",
            "error_msg",
            "response",
            "start_time",
            "end_time",
            "stream_info"
        ]
    },
    "src/provide/foundation/integrations/openobserve/commands.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.console.output",
            "provide.foundation.logger",
            "provide.foundation.utils.async_helpers",
            "click",
            "re",
            "provide.foundation.integrations.openobserve",
            "provide.foundation.integrations.openobserve",
            "provide.foundation.integrations.openobserve"
        ],
        "functions": [
            "_parse_filter_to_dict",
            "openobserve_group",
            "query_command",
            "tail_command",
            "errors_command",
            "trace_command",
            "streams_command",
            "history_command",
            "test_command",
            "openobserve_group"
        ],
        "classes": [],
        "variables": [
            "log",
            "_HAS_CLICK",
            "filters",
            "parts",
            "__all__",
            "__all__",
            "_HAS_CLICK",
            "part",
            "match",
            "client",
            "response",
            "output",
            "filters",
            "response",
            "response",
            "streams",
            "response",
            "filters",
            "message",
            "context",
            "output",
            "output",
            "sql",
            "took",
            "records"
        ]
    },
    "src/provide/foundation/integrations/openobserve/defaults.py": {
        "imports": [
            "__future__"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "DEFAULT_OPENOBSERVE_TIMEOUT",
            "DEFAULT_OPENOBSERVE_MAX_RETRIES",
            "__all__"
        ]
    },
    "src/provide/foundation/integrations/openobserve/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.integrations.openobserve.client",
            "provide.foundation.integrations.openobserve.config",
            "provide.foundation.integrations.openobserve.exceptions",
            "provide.foundation.integrations.openobserve.formatters",
            "provide.foundation.integrations.openobserve.models",
            "provide.foundation.integrations.openobserve.search",
            "provide.foundation.integrations.openobserve.streaming",
            "provide.foundation.integrations.openobserve.otlp"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__",
            "send_log"
        ]
    },
    "src/provide/foundation/integrations/openobserve/exceptions.py": {
        "imports": [
            "__future__",
            "provide.foundation.errors"
        ],
        "functions": [],
        "classes": [
            "OpenObserveError",
            "OpenObserveConnectionError",
            "OpenObserveAuthenticationError",
            "OpenObserveQueryError",
            "OpenObserveStreamingError",
            "OpenObserveConfigError"
        ],
        "variables": []
    },
    "src/provide/foundation/integrations/openobserve/models.py": {
        "imports": [
            "__future__",
            "datetime",
            "typing",
            "attrs",
            "datetime"
        ],
        "functions": [
            "parse_relative_time",
            "to_dict",
            "from_dict",
            "from_dict"
        ],
        "classes": [
            "SearchQuery",
            "SearchResponse",
            "StreamInfo"
        ],
        "variables": [
            "now",
            "value",
            "target_time",
            "timestamp",
            "delta",
            "dt",
            "delta",
            "delta",
            "delta",
            "delta"
        ]
    },
    "src/provide/foundation/integrations/openobserve/formatters.py": {
        "imports": [
            "__future__",
            "csv",
            "datetime",
            "io",
            "typing",
            "provide.foundation.integrations.openobserve.models",
            "provide.foundation.serialization",
            "tabulate"
        ],
        "functions": [
            "format_json",
            "format_log_line",
            "_determine_columns",
            "_filter_internal_columns",
            "_format_cell_value",
            "_format_with_tabulate",
            "_format_simple_table",
            "format_table",
            "format_csv",
            "format_summary",
            "_format_as_log",
            "_format_as_table",
            "_format_as_csv",
            "_format_as_summary",
            "format_output"
        ],
        "classes": [],
        "variables": [
            "timestamp",
            "level",
            "message",
            "service",
            "parts",
            "exclude_fields",
            "extra_fields",
            "priority_cols",
            "columns",
            "value_str",
            "rows",
            "lines",
            "output",
            "writer",
            "lines",
            "single_response",
            "single_response",
            "data",
            "data",
            "dt",
            "time_str",
            "time_str",
            "dt",
            "row",
            "row_values",
            "columns",
            "columns",
            "columns",
            "level",
            "value",
            "formatted_value",
            "value",
            "formatted_value",
            "hit",
            "timestamp",
            "dt"
        ]
    },
    "src/provide/foundation/integrations/openobserve/otlp.py": {
        "imports": [
            "__future__",
            "datetime",
            "typing",
            "provide.foundation.hub",
            "provide.foundation.integrations.openobserve.client",
            "provide.foundation.logger",
            "provide.foundation.serialization",
            "opentelemetry",
            "opentelemetry.exporter.otlp.proto.http._log_exporter",
            "opentelemetry.sdk._logs",
            "opentelemetry.sdk._logs.export",
            "opentelemetry.sdk.resources",
            "opentelemetry.semconv.resource",
            "provide.foundation.integrations.openobserve.config",
            "provide.foundation.logger.config.telemetry",
            "opentelemetry",
            "provide.foundation.tracer.context",
            "provide.foundation.integrations.openobserve.config",
            "provide.foundation.logger.config.telemetry",
            "provide.foundation.utils.async_helpers",
            "provide.foundation.integrations.openobserve.config",
            "provide.foundation.logger.config.telemetry"
        ],
        "functions": [
            "send_log_otlp",
            "_add_trace_context_to_log_entry",
            "_build_log_entry",
            "_build_bulk_url",
            "send_log_bulk",
            "send_log",
            "create_otlp_logger_provider"
        ],
        "classes": [],
        "variables": [
            "log",
            "_HAS_OTEL_LOGS",
            "log_entry",
            "_HAS_OTEL_LOGS",
            "Resource",
            "ResourceAttributes",
            "OTLPLogExporter",
            "LoggerProvider",
            "BatchLogRecordProcessor",
            "trace",
            "hub",
            "config",
            "oo_config",
            "actual_service_name",
            "resource_attrs",
            "resource",
            "headers",
            "exporter",
            "logger_provider",
            "otel_logger",
            "log_attrs",
            "current_span",
            "severity_map",
            "severity",
            "current_span",
            "span",
            "hub",
            "config",
            "oo_config",
            "log_entry",
            "stream",
            "bulk_data",
            "url",
            "hub",
            "config",
            "oo_config",
            "resource_attrs",
            "resource",
            "headers",
            "logs_endpoint",
            "exporter",
            "logger_provider",
            "config",
            "logs_endpoint",
            "logs_endpoint",
            "span_context",
            "span_context",
            "client",
            "config",
            "response",
            "config",
            "logs_endpoint"
        ]
    },
    "src/provide/foundation/integrations/openobserve/search.py": {
        "imports": [
            "__future__",
            "re",
            "provide.foundation.integrations.openobserve.client",
            "provide.foundation.integrations.openobserve.models",
            "provide.foundation.logger",
            "provide.foundation.parsers.errors",
            "opentelemetry",
            "provide.foundation.tracer.context"
        ],
        "functions": [
            "_sanitize_stream_name",
            "_sanitize_trace_id",
            "_sanitize_log_level",
            "_sanitize_service_name"
        ],
        "classes": [],
        "variables": [
            "log",
            "safe_stream",
            "safe_trace_id",
            "sql",
            "safe_stream",
            "safe_level",
            "sql",
            "safe_stream",
            "safe_service",
            "sql",
            "safe_stream",
            "sql",
            "response",
            "result",
            "client",
            "level",
            "count",
            "current_span",
            "trace_id",
            "span_context",
            "trace_id"
        ]
    },
    "src/provide/foundation/config/loader.py": {
        "imports": [
            "__future__",
            "abc",
            "os",
            "pathlib",
            "typing",
            "provide.foundation.config.base",
            "provide.foundation.config.env",
            "provide.foundation.config.types",
            "provide.foundation.errors.config",
            "provide.foundation.errors.decorators",
            "provide.foundation.errors.resources",
            "provide.foundation.file.safe",
            "provide.foundation.serialization",
            "provide.foundation.logger.setup.coordinator",
            "provide.foundation.utils.timing"
        ],
        "functions": [
            "load",
            "exists",
            "__init__",
            "exists",
            "load",
            "_read_file",
            "__init__",
            "exists",
            "load",
            "__init__",
            "exists",
            "load",
            "__init__",
            "exists",
            "load",
            "__init__",
            "exists",
            "load"
        ],
        "classes": [
            "ConfigLoader",
            "FileConfigLoader",
            "RuntimeConfigLoader",
            "DictConfigLoader",
            "MultiSourceLoader",
            "ChainedLoader"
        ],
        "variables": [
            "T",
            "setup_logger",
            "content",
            "config",
            "format",
            "data",
            "data",
            "env_data",
            "prefix_with_delim",
            "config",
            "new_config",
            "new_dict",
            "source"
        ]
    },
    "src/provide/foundation/config/errors.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors.base"
        ],
        "functions": [
            "format_invalid_value_error",
            "format_validation_error",
            "_default_code",
            "__init__",
            "_default_code",
            "__init__",
            "_default_code"
        ],
        "classes": [
            "ConfigError",
            "ParseError",
            "ValidationError"
        ],
        "variables": [
            "__all__",
            "parts",
            "parts"
        ]
    },
    "src/provide/foundation/config/defaults.py": {
        "imports": [
            "__future__",
            "pathlib"
        ],
        "functions": [
            "default_empty_dict",
            "path_converter"
        ],
        "classes": [],
        "variables": [
            "DEFAULT_CONTEXT_LOG_LEVEL",
            "DEFAULT_CONTEXT_PROFILE",
            "DEFAULT_CONTEXT_DEBUG",
            "DEFAULT_CONTEXT_JSON_OUTPUT",
            "DEFAULT_CONTEXT_CONFIG_FILE",
            "DEFAULT_CONTEXT_LOG_FILE",
            "DEFAULT_CONTEXT_LOG_FORMAT",
            "DEFAULT_CONTEXT_NO_COLOR",
            "DEFAULT_CONTEXT_NO_EMOJI",
            "EXIT_SUCCESS",
            "EXIT_ERROR",
            "EXIT_SIGINT",
            "DEFAULT_TEST_WAIT_TIMEOUT",
            "DEFAULT_TEST_PARALLEL_TIMEOUT",
            "DEFAULT_TEST_CHECKPOINT_TIMEOUT",
            "DEFAULT_FILE_LOCK_TIMEOUT",
            "DEFAULT_FILE_OP_IS_ATOMIC",
            "DEFAULT_FILE_OP_IS_SAFE",
            "DEFAULT_FILE_OP_HAS_BACKUP",
            "DEFAULT_TEMP_PREFIX",
            "DEFAULT_TEMP_SUFFIX",
            "DEFAULT_TEMP_CLEANUP",
            "DEFAULT_TEMP_TEXT_MODE",
            "DEFAULT_DIR_MODE",
            "DEFAULT_DIR_PARENTS",
            "DEFAULT_MISSING_OK",
            "DEFAULT_ATOMIC_MODE",
            "DEFAULT_ATOMIC_ENCODING",
            "DEFAULT_EVENT_KEY",
            "DEFAULT_COMPONENT_DIMENSION",
            "DEFAULT_STATE_CONFIG_NAME",
            "DEFAULT_TRACER_OTEL_SPAN",
            "DEFAULT_TRACER_ACTIVE"
        ]
    },
    "src/provide/foundation/config/base.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "copy",
            "typing",
            "attrs",
            "provide.foundation.config.types",
            "attrs"
        ],
        "functions": [
            "field",
            "__attrs_post_init__",
            "validate",
            "to_dict",
            "_convert_dict_values",
            "_convert_list_values",
            "from_dict",
            "update",
            "get_source",
            "reset_to_defaults",
            "clone",
            "diff",
            "__repr__"
        ],
        "classes": [
            "BaseConfig"
        ],
        "variables": [
            "T",
            "config_metadata",
            "result",
            "result",
            "result",
            "field_names",
            "filtered_data",
            "instance",
            "cloned",
            "differences",
            "attr_fields",
            "parts",
            "value",
            "self_value",
            "other_value",
            "value",
            "value",
            "value",
            "value",
            "current_source",
            "value",
            "value",
            "value",
            "value",
            "value",
            "value",
            "value"
        ]
    },
    "src/provide/foundation/config/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.config.base",
            "provide.foundation.config.converters",
            "provide.foundation.config.env",
            "provide.foundation.config.loader",
            "provide.foundation.config.manager",
            "provide.foundation.config.schema",
            "provide.foundation.config.types",
            "provide.foundation.config.validators",
            "provide.foundation.errors.config",
            "provide.foundation.parsers"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/config/schema.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "typing",
            "attrs",
            "provide.foundation.config.base",
            "provide.foundation.config.types",
            "provide.foundation.errors",
            "urllib.parse",
            "re",
            "pathlib",
            "re",
            "re"
        ],
        "functions": [
            "validate_schema",
            "validate_port",
            "validate_url",
            "validate_email",
            "validate_path",
            "validate_version",
            "validate_url_accessible",
            "_validate_required",
            "_validate_type",
            "_validate_choices",
            "_validate_range",
            "_validate_pattern",
            "_validate_custom",
            "validate",
            "__init__",
            "add_field",
            "validate",
            "apply_defaults",
            "filter_extra_fields",
            "from_config_class",
            "_attr_to_schema_field"
        ],
        "classes": [
            "SchemaField",
            "ConfigSchema"
        ],
        "variables": [
            "data",
            "pattern",
            "pattern",
            "result",
            "schema_fields",
            "required",
            "field_type",
            "description",
            "sensitive",
            "result",
            "schema_field",
            "result"
        ]
    },
    "src/provide/foundation/config/converters.py": {
        "imports": [
            "__future__",
            "provide.foundation.config.validators",
            "provide.foundation.parsers"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/config/manager.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.config.base",
            "provide.foundation.config.loader",
            "provide.foundation.config.schema",
            "provide.foundation.config.types"
        ],
        "functions": [
            "get_config",
            "set_config",
            "register_config",
            "load_config",
            "__init__",
            "register",
            "unregister",
            "remove",
            "get",
            "set",
            "load",
            "reload",
            "update",
            "reset",
            "list_configs",
            "get_all",
            "clear",
            "export",
            "export_all",
            "export_to_dict",
            "load_from_dict",
            "add_loader",
            "validate_all",
            "get_or_create"
        ],
        "classes": [
            "ConfigManager"
        ],
        "variables": [
            "T",
            "_manager",
            "config",
            "config",
            "loader",
            "new_config",
            "config",
            "config",
            "result",
            "config",
            "existing",
            "config",
            "loader",
            "defaults_dict",
            "schema",
            "config_dict",
            "defaults_dict",
            "schema",
            "config_dict",
            "schema",
            "schema",
            "config_dict"
        ]
    },
    "src/provide/foundation/config/types.py": {
        "imports": [
            "__future__",
            "enum",
            "typing"
        ],
        "functions": [
            "__lt__",
            "__le__",
            "__gt__",
            "__ge__",
            "__eq__",
            "from_extension"
        ],
        "classes": [
            "ConfigSource",
            "ConfigFormat"
        ],
        "variables": [
            "ConfigValue",
            "ConfigDict",
            "DEFAULT",
            "FILE",
            "ENV",
            "RUNTIME",
            "JSON",
            "YAML",
            "TOML",
            "INI",
            "ENV",
            "ext_map"
        ]
    },
    "src/provide/foundation/config/env.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "os",
            "typing",
            "attrs",
            "provide.foundation.config.base",
            "provide.foundation.config.types",
            "provide.foundation.file.safe",
            "provide.foundation.file.safe",
            "provide.foundation.parsers"
        ],
        "functions": [
            "get_env",
            "env_field",
            "from_env",
            "to_env_dict"
        ],
        "classes": [
            "RuntimeConfig"
        ],
        "variables": [
            "T",
            "value",
            "metadata",
            "file_path",
            "data",
            "env_dict",
            "value",
            "env_var",
            "raw_value",
            "value",
            "env_var",
            "field_prefix",
            "field_name",
            "env_var",
            "value",
            "parser",
            "field_prefix",
            "field_name",
            "env_var",
            "str_value",
            "file_path",
            "value",
            "str_value",
            "value",
            "value",
            "str_value",
            "str_value"
        ]
    },
    "src/provide/foundation/config/validators.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "typing",
            "provide.foundation.parsers.errors",
            "provide.foundation.errors.config",
            "provide.foundation.errors.config",
            "provide.foundation.errors.config",
            "provide.foundation.errors.config",
            "provide.foundation.errors.config",
            "provide.foundation.errors.config",
            "provide.foundation.errors.config",
            "provide.foundation.errors.config"
        ],
        "functions": [
            "validate_log_level",
            "validate_sample_rate",
            "validate_port",
            "validate_positive",
            "validate_non_negative",
            "validate_overflow_policy",
            "validate_choice",
            "validate_range",
            "validator",
            "validator"
        ],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/setup/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.concurrency.locks",
            "provide.foundation.logger.setup",
            "provide.foundation.metrics.otel",
            "provide.foundation.streams.file",
            "provide.foundation.tracer.otel"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "_EXPLICIT_SETUP_DONE",
            "__all__"
        ]
    },
    "src/provide/foundation/concurrency/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.concurrency.async_locks",
            "provide.foundation.concurrency.core",
            "provide.foundation.concurrency.locks"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/concurrency/async_locks.py": {
        "imports": [
            "__future__",
            "asyncio",
            "collections.abc",
            "contextlib",
            "threading",
            "time",
            "typing",
            "attrs",
            "provide.foundation.errors.runtime"
        ],
        "functions": [
            "__init__"
        ],
        "classes": [
            "AsyncLockInfo",
            "AsyncLockManager"
        ],
        "variables": [
            "_async_locks_registered",
            "_async_locks_registration_lock",
            "__all__",
            "manager",
            "current_max_order",
            "lock_infos",
            "start_time",
            "warnings",
            "_async_lock_manager",
            "_async_locks_registered",
            "_async_locks_registration_event",
            "actual_lock",
            "lock_info",
            "current_task",
            "lock_infos",
            "current_max_order",
            "current_task",
            "current_task",
            "current_task",
            "status",
            "event",
            "_async_locks_registration_event",
            "event",
            "current_task",
            "current_task",
            "current_task",
            "remaining_timeout",
            "hold_time"
        ]
    },
    "src/provide/foundation/concurrency/core.py": {
        "imports": [
            "__future__",
            "asyncio",
            "collections.abc",
            "typing",
            "provide.foundation.errors"
        ],
        "functions": [
            "async_run"
        ],
        "classes": [],
        "variables": []
    },
    "src/provide/foundation/concurrency/locks.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "contextlib",
            "threading",
            "time",
            "typing",
            "attrs",
            "provide.foundation.errors.runtime"
        ],
        "functions": [
            "get_lock_manager",
            "register_foundation_locks",
            "__init__",
            "register_lock",
            "get_lock",
            "_prepare_lock_acquisition",
            "_acquire_lock_with_timeout",
            "_release_acquired_locks",
            "acquire",
            "get_lock_status",
            "detect_potential_deadlocks"
        ],
        "classes": [
            "LockInfo",
            "LockManager"
        ],
        "variables": [
            "_lock_manager",
            "_locks_registered",
            "_registration_lock",
            "__all__",
            "manager",
            "current_max_order",
            "acquired",
            "lock_infos",
            "start_time",
            "warnings",
            "actual_lock",
            "lock_info",
            "lock_infos",
            "current_max_order",
            "status",
            "_locks_registered",
            "remaining_timeout",
            "hold_time"
        ]
    },
    "src/provide/foundation/utils/caching.py": {
        "imports": [
            "__future__",
            "collections",
            "collections.abc",
            "functools",
            "threading",
            "typing",
            "provide.foundation.utils.environment"
        ],
        "functions": [
            "cached",
            "register_cache",
            "get_cache",
            "clear_all_caches",
            "get_cache_stats",
            "__init__",
            "get",
            "set",
            "clear",
            "stats",
            "decorator",
            "wrapper"
        ],
        "classes": [
            "LRUCache"
        ],
        "variables": [
            "_CACHE_ENABLED",
            "_DEFAULT_CACHE_SIZE",
            "T",
            "_registry_lock",
            "__all__",
            "cache_enabled",
            "cache",
            "total",
            "hit_rate",
            "key",
            "result",
            "result"
        ]
    },
    "src/provide/foundation/utils/__init__.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.parsers",
            "provide.foundation.utils.deps",
            "provide.foundation.utils.environment",
            "provide.foundation.utils.importer",
            "provide.foundation.utils.rate_limiting",
            "provide.foundation.utils.scoped_cache",
            "provide.foundation.utils.stubs",
            "provide.foundation.utils.timing",
            "provide.foundation.utils"
        ],
        "functions": [
            "__getattr__"
        ],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/utils/formatting.py": {
        "imports": [
            "__future__"
        ],
        "functions": [
            "format_size",
            "_format_duration_components",
            "_format_duration_short",
            "_format_duration_long",
            "format_duration",
            "format_number",
            "format_percentage"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "negative",
            "size_bytes",
            "units",
            "unit_index",
            "parts",
            "parts",
            "days",
            "hours",
            "minutes",
            "secs",
            "percentage",
            "formatted",
            "formatted",
            "formatted",
            "formatted"
        ]
    },
    "src/provide/foundation/utils/stubs.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors"
        ],
        "functions": [
            "create_dependency_stub",
            "create_function_stub",
            "create_module_stub",
            "stub_function",
            "__init__",
            "__new__",
            "__call__",
            "__getattr__",
            "__class_getitem__",
            "__getattr__",
            "__call__"
        ],
        "classes": [
            "DependencyStub",
            "ModuleStub"
        ],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/utils/importer.py": {
        "imports": [
            "__future__",
            "sys",
            "threading"
        ],
        "functions": [
            "lazy_import"
        ],
        "classes": [],
        "variables": [
            "_thread_local",
            "MAX_LAZY_IMPORT_DEPTH",
            "SPECIAL_MODULES",
            "module_name",
            "chain_str",
            "chain_str",
            "existing_module",
            "mod",
            "error_str"
        ]
    },
    "src/provide/foundation/utils/scoped_cache.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "contextlib",
            "contextvars",
            "typing"
        ],
        "functions": [
            "__init__",
            "scope",
            "get",
            "set",
            "contains",
            "clear",
            "size",
            "is_active"
        ],
        "classes": [
            "ContextScopedCache"
        ],
        "variables": [
            "K",
            "V",
            "__all__",
            "cache",
            "cache",
            "cache",
            "cache",
            "cache",
            "token"
        ]
    },
    "src/provide/foundation/utils/rate_limiting.py": {
        "imports": [
            "__future__",
            "asyncio",
            "collections.abc",
            "time",
            "typing",
            "provide.foundation.logger"
        ],
        "functions": [
            "__init__"
        ],
        "classes": [
            "TokenBucketRateLimiter"
        ],
        "variables": [
            "now",
            "elapsed_time",
            "tokens_to_add"
        ]
    },
    "src/provide/foundation/utils/timing.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "contextlib",
            "contextvars",
            "time",
            "typing",
            "provide.foundation.logger.base"
        ],
        "functions": [
            "timed_block"
        ],
        "classes": [],
        "variables": [
            "_PROVIDE_CONTEXT_TRACE_ID",
            "all_kvs",
            "trace_id",
            "start_time",
            "duration",
            "duration"
        ]
    },
    "src/provide/foundation/utils/deps.py": {
        "imports": [
            "__future__",
            "attrs",
            "click",
            "cryptography",
            "opentelemetry",
            "httpx",
            "mkdocs",
            "provide.foundation.hub.foundation",
            "importlib.metadata",
            "importlib.metadata",
            "importlib.metadata"
        ],
        "functions": [
            "_check_click",
            "_check_cryptography",
            "_check_opentelemetry",
            "_check_httpx",
            "_check_mkdocs",
            "get_optional_dependencies",
            "check_optional_deps",
            "has_dependency",
            "require_dependency",
            "get_available_features"
        ],
        "classes": [
            "DependencyStatus"
        ],
        "variables": [
            "deps",
            "deps",
            "deps",
            "version",
            "version",
            "log",
            "available_count",
            "total_count",
            "ver",
            "ver",
            "ver",
            "status_icon",
            "version_info",
            "ver",
            "ver",
            "ver",
            "missing"
        ]
    },
    "src/provide/foundation/utils/async_helpers.py": {
        "imports": [
            "__future__",
            "asyncio",
            "collections.abc",
            "contextlib",
            "typing"
        ],
        "functions": [
            "run_async"
        ],
        "classes": [],
        "variables": [
            "T",
            "__all__",
            "loop",
            "loop",
            "loop",
            "created_loop",
            "created_loop",
            "loop",
            "created_loop"
        ]
    },
    "src/provide/foundation/utils/streams.py": {
        "imports": [
            "__future__",
            "io",
            "sys",
            "typing",
            "provide.foundation.streams",
            "provide.foundation.logger.config.base"
        ],
        "functions": [
            "get_safe_stderr",
            "get_foundation_log_stream"
        ],
        "classes": [],
        "variables": []
    },
    "src/provide/foundation/utils/environment/parsers.py": {
        "imports": [
            "__future__",
            "re",
            "provide.foundation.errors.config",
            "provide.foundation.utils.caching"
        ],
        "functions": [
            "parse_duration",
            "parse_size"
        ],
        "classes": [],
        "variables": [
            "_DURATION_PATTERN",
            "_SIZE_PATTERN",
            "total_seconds",
            "matches",
            "units",
            "match",
            "amount",
            "unit",
            "units"
        ]
    },
    "src/provide/foundation/utils/environment/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.utils.environment.getters",
            "provide.foundation.utils.environment.parsers",
            "provide.foundation.utils.environment.prefix"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/utils/environment/getters.py": {
        "imports": [
            "__future__",
            "os",
            "pathlib",
            "typing",
            "provide.foundation.errors.config",
            "provide.foundation.logger",
            "provide.foundation.parsers",
            "provide.foundation.logger"
        ],
        "functions": [
            "_get_logger",
            "get_bool",
            "get_int",
            "get_float",
            "get_str",
            "get_path",
            "get_list",
            "get_tuple",
            "get_set",
            "get_dict",
            "_parse_simple_type",
            "_parse_complex_type",
            "require"
        ],
        "classes": [],
        "variables": [
            "T",
            "value",
            "value",
            "value",
            "value",
            "expanded",
            "value",
            "items",
            "value",
            "items",
            "value",
            "items",
            "value",
            "origin",
            "logger",
            "result",
            "items",
            "item"
        ]
    },
    "src/provide/foundation/utils/environment/prefix.py": {
        "imports": [
            "__future__",
            "os",
            "pathlib",
            "typing",
            "provide.foundation.utils.caching",
            "provide.foundation.utils.environment.getters"
        ],
        "functions": [
            "__init__",
            "_make_name",
            "get_bool",
            "get_int",
            "get_float",
            "get_str",
            "get_path",
            "get_list",
            "get_dict",
            "require",
            "__getitem__",
            "__contains__",
            "all_with_prefix"
        ],
        "classes": [
            "EnvPrefix"
        ],
        "variables": [
            "T",
            "cached_name",
            "normalized",
            "full_name",
            "result",
            "prefix_with_sep",
            "var_name"
        ]
    },
    "src/provide/foundation/profiling/metrics.py": {
        "imports": [
            "__future__",
            "threading",
            "time",
            "typing"
        ],
        "functions": [
            "__init__",
            "record_message",
            "reset",
            "messages_per_second",
            "avg_latency_ms",
            "emoji_overhead_percent",
            "avg_fields_per_message",
            "to_dict"
        ],
        "classes": [
            "ProfileMetrics"
        ],
        "variables": [
            "elapsed",
            "elapsed",
            "messages_per_second",
            "avg_latency_ms",
            "emoji_overhead_percent",
            "avg_fields_per_message"
        ]
    },
    "src/provide/foundation/profiling/defaults.py": {
        "imports": [
            "__future__"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "DEFAULT_PROFILING_SAMPLE_RATE",
            "DEFAULT_PROFILING_ENABLED",
            "DEFAULT_PROFILING_TRACK_MEMORY",
            "DEFAULT_PROFILING_BUFFER_SIZE",
            "DEFAULT_PROFILING_FLUSH_INTERVAL_SECONDS",
            "DEFAULT_PROFILING_MAX_MEMORY_MB",
            "DEFAULT_PROFILING_ENABLE_FAST_PATH",
            "DEFAULT_PROFILING_BACKGROUND_PROCESSING",
            "DEFAULT_PROFILING_CLI_ENABLED",
            "DEFAULT_PROFILING_BATCH_SIZE",
            "DEFAULT_PROFILING_EXPORT_TIMEOUT_SECONDS",
            "DEFAULT_PROFILING_MAX_RETRIES",
            "__all__"
        ]
    },
    "src/provide/foundation/profiling/cli.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.console.output",
            "provide.foundation.errors.decorators",
            "provide.foundation.hub.decorators",
            "provide.foundation.context",
            "provide.foundation.hub.manager",
            "provide.foundation.hub.manager"
        ],
        "functions": [
            "show_profile_metrics",
            "profile_command",
            "register_profile_command"
        ],
        "classes": [],
        "variables": [
            "hub",
            "profiler",
            "metrics",
            "uptime",
            "sample_rate"
        ]
    },
    "src/provide/foundation/profiling/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.errors.profiling",
            "provide.foundation.profiling.component",
            "provide.foundation.profiling.metrics",
            "provide.foundation.profiling.processor"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/profiling/component.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors.decorators",
            "provide.foundation.hub.categories",
            "provide.foundation.profiling.defaults",
            "provide.foundation.profiling.metrics",
            "provide.foundation.profiling.processor",
            "provide.foundation.hub.manager",
            "provide.foundation.profiling.cli",
            "provide.foundation",
            "provide.foundation",
            "provide.foundation"
        ],
        "functions": [
            "register_profiling",
            "__init__",
            "enable",
            "disable",
            "get_metrics",
            "reset",
            "__repr__"
        ],
        "classes": [
            "ProfilingComponent"
        ],
        "variables": [
            "profiler",
            "status",
            "sample_rate"
        ]
    },
    "src/provide/foundation/profiling/processor.py": {
        "imports": [
            "__future__",
            "random",
            "time",
            "typing",
            "structlog",
            "provide.foundation.errors.profiling",
            "provide.foundation.profiling.defaults",
            "provide.foundation.profiling.metrics"
        ],
        "functions": [
            "__init__",
            "__call__",
            "_detect_emoji_processing",
            "enable",
            "disable",
            "reset",
            "get_metrics"
        ],
        "classes": [
            "ProfilingProcessor"
        ],
        "variables": [
            "start_time",
            "emoji_indicators",
            "has_emoji",
            "field_count",
            "processing_time"
        ]
    },
    "src/provide/foundation/errors/auth.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors.base"
        ],
        "functions": [
            "__init__",
            "_default_code",
            "__init__",
            "_default_code"
        ],
        "classes": [
            "AuthenticationError",
            "AuthorizationError"
        ],
        "variables": []
    },
    "src/provide/foundation/errors/process.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors.base"
        ],
        "functions": [
            "__init__",
            "_default_code",
            "_default_code",
            "__init__",
            "_default_code"
        ],
        "classes": [
            "ProcessError",
            "CommandNotFoundError",
            "ProcessTimeoutError"
        ],
        "variables": [
            "full_message",
            "context",
            "context",
            "cmd_str",
            "stdout_str",
            "stderr_str"
        ]
    },
    "src/provide/foundation/errors/safe_decorators.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "functools",
            "inspect",
            "typing",
            "provide.foundation.hub.foundation"
        ],
        "functions": [
            "_get_func_name",
            "_log_function_entry",
            "_log_function_success",
            "_log_function_error",
            "log_only_error_context",
            "decorator",
            "wrapper"
        ],
        "classes": [],
        "variables": [
            "F",
            "log_method",
            "func_name",
            "func_name",
            "log_method",
            "func_name",
            "context",
            "logger",
            "context",
            "logger",
            "result",
            "result"
        ]
    },
    "src/provide/foundation/errors/config.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors.base"
        ],
        "functions": [
            "__init__",
            "_default_code",
            "__init__",
            "_default_code",
            "__init__",
            "_default_code"
        ],
        "classes": [
            "ConfigurationError",
            "ValidationError",
            "ConfigValidationError"
        ],
        "variables": []
    },
    "src/provide/foundation/errors/decorators.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "functools",
            "inspect",
            "typing",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.errors.base",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation"
        ],
        "functions": [
            "_create_async_wrapper",
            "_create_sync_wrapper",
            "resilient",
            "resilient",
            "resilient",
            "suppress_and_log",
            "fallback_on_error",
            "__init__",
            "build_context",
            "should_suppress",
            "log_suppressed",
            "log_error",
            "map_error",
            "process_error",
            "wrapper",
            "decorator",
            "decorator",
            "decorator",
            "wrapper",
            "wrapper"
        ],
        "classes": [
            "HasName",
            "ResilientErrorHandler"
        ],
        "variables": [
            "F",
            "catch_types",
            "log_context",
            "log_context",
            "mapped_error",
            "handler",
            "mapped",
            "merged_context",
            "log_method",
            "log_method"
        ]
    },
    "src/provide/foundation/errors/handlers.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "contextlib",
            "typing",
            "attrs",
            "provide.foundation.errors.base",
            "provide.foundation.errors.context",
            "provide.foundation.errors",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation"
        ],
        "functions": [
            "error_boundary",
            "transactional",
            "handle_error",
            "create_error_handler",
            "add_policy",
            "handle"
        ],
        "classes": [
            "ErrorHandler"
        ],
        "variables": [
            "T",
            "catch_types",
            "context",
            "default",
            "error_policies",
            "context",
            "log_context",
            "handler",
            "context",
            "error_class",
            "handler",
            "context",
            "log_context",
            "error_context",
            "handler"
        ]
    },
    "src/provide/foundation/errors/dependencies.py": {
        "imports": [
            "typing",
            "provide.foundation.errors.base"
        ],
        "functions": [
            "__init__",
            "_default_code",
            "__init__",
            "_default_code"
        ],
        "classes": [
            "DependencyError",
            "DependencyMismatchError"
        ],
        "variables": [
            "message",
            "context",
            "message",
            "context",
            "cmd",
            "cmd",
            "cmd"
        ]
    },
    "src/provide/foundation/errors/resources.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors.base"
        ],
        "functions": [
            "__init__",
            "_default_code",
            "__init__",
            "_default_code",
            "__init__",
            "_default_code",
            "__init__",
            "_default_code"
        ],
        "classes": [
            "ResourceError",
            "NotFoundError",
            "AlreadyExistsError",
            "LockError"
        ],
        "variables": []
    },
    "src/provide/foundation/errors/integration.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors.base"
        ],
        "functions": [
            "__init__",
            "_default_code",
            "__init__",
            "_default_code",
            "__init__",
            "_default_code"
        ],
        "classes": [
            "IntegrationError",
            "NetworkError",
            "TimeoutError"
        ],
        "variables": []
    },
    "src/provide/foundation/errors/base.py": {
        "imports": [
            "__future__",
            "typing"
        ],
        "functions": [
            "__init__",
            "_default_code",
            "add_context",
            "to_dict"
        ],
        "classes": [
            "FoundationError"
        ],
        "variables": [
            "result"
        ]
    },
    "src/provide/foundation/errors/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.errors.auth",
            "provide.foundation.errors.base",
            "provide.foundation.errors.config",
            "provide.foundation.errors.context",
            "provide.foundation.errors.decorators",
            "provide.foundation.errors.dependencies",
            "provide.foundation.errors.handlers",
            "provide.foundation.errors.integration",
            "provide.foundation.errors.process",
            "provide.foundation.errors.resources",
            "provide.foundation.errors.runtime",
            "provide.foundation.errors.safe_decorators",
            "provide.foundation.errors.types"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/errors/context.py": {
        "imports": [
            "__future__",
            "datetime",
            "enum",
            "typing",
            "attrs",
            "provide.foundation.errors.auth",
            "provide.foundation.errors.config",
            "provide.foundation.errors.integration",
            "provide.foundation.errors.base"
        ],
        "functions": [
            "_determine_error_severity",
            "_determine_error_category",
            "_group_foundation_error_context",
            "capture_error_context",
            "add_namespace",
            "update_namespace",
            "get_namespace",
            "add_tag",
            "add_tags",
            "to_dict",
            "to_logging_context",
            "to_terraform_diagnostic"
        ],
        "classes": [
            "ErrorSeverity",
            "ErrorCategory",
            "ErrorContext"
        ],
        "variables": [
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL",
            "USER",
            "SYSTEM",
            "EXTERNAL",
            "ctx",
            "severity_map",
            "tf_meta",
            "severity",
            "category",
            "grouped"
        ]
    },
    "src/provide/foundation/errors/types.py": {
        "imports": [
            "__future__",
            "datetime",
            "enum",
            "typing",
            "attrs",
            "provide.foundation.serialization"
        ],
        "functions": [
            "to_dict",
            "to_dict",
            "to_json"
        ],
        "classes": [
            "ErrorCode",
            "ErrorMetadata",
            "ErrorResponse"
        ],
        "variables": [
            "CONFIG_INVALID",
            "CONFIG_MISSING",
            "CONFIG_PARSE_ERROR",
            "CONFIG_TYPE_ERROR",
            "VALIDATION_TYPE",
            "VALIDATION_RANGE",
            "VALIDATION_FORMAT",
            "VALIDATION_REQUIRED",
            "VALIDATION_CONSTRAINT",
            "INTEGRATION_TIMEOUT",
            "INTEGRATION_AUTH",
            "INTEGRATION_UNAVAILABLE",
            "INTEGRATION_RATE_LIMIT",
            "INTEGRATION_PROTOCOL",
            "RESOURCE_NOT_FOUND",
            "RESOURCE_LOCKED",
            "RESOURCE_PERMISSION",
            "RESOURCE_EXHAUSTED",
            "RESOURCE_CONFLICT",
            "AUTH_INVALID_CREDENTIALS",
            "AUTH_TOKEN_EXPIRED",
            "AUTH_INSUFFICIENT_PERMISSION",
            "AUTH_SESSION_INVALID",
            "AUTH_MFA_REQUIRED",
            "SYSTEM_UNAVAILABLE",
            "SYSTEM_OVERLOAD",
            "SYSTEM_MAINTENANCE",
            "SYSTEM_INTERNAL",
            "SYSTEM_PANIC",
            "result",
            "value"
        ]
    },
    "src/provide/foundation/errors/crypto.py": {
        "imports": [
            "__future__",
            "provide.foundation.errors.base"
        ],
        "functions": [
            "_default_code",
            "_default_code",
            "_default_code",
            "_default_code"
        ],
        "classes": [
            "CryptoError",
            "CryptoValidationError",
            "CryptoKeyError",
            "CryptoSignatureError"
        ],
        "variables": []
    },
    "src/provide/foundation/errors/runtime.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors.base"
        ],
        "functions": [
            "__init__",
            "_default_code",
            "__init__",
            "_default_code",
            "__init__",
            "_default_code",
            "__init__",
            "_default_code"
        ],
        "classes": [
            "RuntimeError",
            "StateError",
            "ConcurrencyError",
            "RateLimitExceededError"
        ],
        "variables": []
    },
    "src/provide/foundation/errors/profiling.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors.base"
        ],
        "functions": [
            "__init__",
            "_default_code",
            "__init__",
            "_default_code",
            "__init__",
            "_default_code",
            "__init__",
            "_default_code"
        ],
        "classes": [
            "ProfilingError",
            "SamplingError",
            "ExporterError",
            "MetricsError"
        ],
        "variables": []
    },
    "src/provide/foundation/errors/platform.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors.base"
        ],
        "functions": [
            "__init__",
            "_default_code"
        ],
        "classes": [
            "PlatformError"
        ],
        "variables": []
    },
    "src/provide/foundation/telemetry/defaults.py": {
        "imports": [
            "__future__"
        ],
        "functions": [
            "default_otlp_headers"
        ],
        "classes": [],
        "variables": [
            "DEFAULT_TELEMETRY_GLOBALLY_DISABLED",
            "DEFAULT_TRACING_ENABLED",
            "DEFAULT_METRICS_ENABLED",
            "DEFAULT_OTLP_PROTOCOL",
            "DEFAULT_TRACE_SAMPLE_RATE",
            "__all__"
        ]
    },
    "src/provide/foundation/resilience/decorators.py": {
        "imports": [
            "__future__",
            "asyncio",
            "collections.abc",
            "functools",
            "inspect",
            "threading",
            "typing",
            "provide.foundation.errors.config",
            "provide.foundation.resilience.circuit_async",
            "provide.foundation.resilience.circuit_sync",
            "provide.foundation.resilience.defaults",
            "provide.foundation.resilience.retry",
            "provide.foundation.hub.registry",
            "provide.foundation.hub.manager",
            "provide.foundation.resilience.fallback"
        ],
        "functions": [
            "_get_circuit_breaker_registry",
            "_should_register_for_global_reset",
            "_handle_no_parentheses_retry",
            "_validate_retry_parameters",
            "_build_retry_policy",
            "_create_retry_wrapper",
            "retry",
            "circuit_breaker",
            "fallback",
            "sync_wrapper",
            "sync_wrapper",
            "decorator",
            "decorator",
            "decorator",
            "sync_wrapper",
            "sync_wrapper"
        ],
        "classes": [],
        "variables": [
            "CIRCUIT_BREAKER_DIMENSION",
            "CIRCUIT_BREAKER_TEST_DIMENSION",
            "_circuit_breaker_counter",
            "_circuit_breaker_counter_lock",
            "F",
            "executor",
            "executor",
            "registry",
            "registry",
            "frame",
            "func",
            "policy",
            "expected_exception_tuple",
            "expected_exception_tuple",
            "breaker",
            "breaker",
            "chain",
            "frame",
            "filename",
            "breaker",
            "registry",
            "breaker",
            "registry",
            "breaker_name",
            "breaker_name"
        ]
    },
    "src/provide/foundation/resilience/bulkhead_sync.py": {
        "imports": [
            "__future__",
            "collections",
            "contextlib",
            "threading",
            "typing",
            "attrs",
            "provide.foundation.resilience.defaults"
        ],
        "functions": [
            "__attrs_post_init__",
            "active_count",
            "available_capacity",
            "queue_size",
            "acquire",
            "release",
            "get_stats"
        ],
        "classes": [
            "SyncResourcePool"
        ],
        "variables": [
            "__all__",
            "actual_timeout",
            "waiter",
            "waiter_event"
        ]
    },
    "src/provide/foundation/resilience/retry.py": {
        "imports": [
            "__future__",
            "asyncio",
            "collections.abc",
            "random",
            "time",
            "typing",
            "attrs",
            "provide.foundation.resilience.defaults",
            "provide.foundation.resilience.types",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation"
        ],
        "functions": [
            "_validate_max_attempts",
            "_validate_base_delay",
            "_validate_max_delay",
            "calculate_delay",
            "should_retry",
            "should_retry_response",
            "__str__",
            "__init__",
            "execute_sync"
        ],
        "classes": [
            "RetryPolicy",
            "RetryExecutor"
        ],
        "variables": [
            "T",
            "delay",
            "last_exception",
            "last_exception",
            "delay",
            "jitter_factor",
            "delay",
            "delay",
            "last_exception",
            "delay",
            "last_exception",
            "delay",
            "delay",
            "delay"
        ]
    },
    "src/provide/foundation/resilience/defaults.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.resilience.types",
            "provide.foundation.resilience.types"
        ],
        "functions": [
            "default_retry_backoff_strategy"
        ],
        "classes": [],
        "variables": [
            "DEFAULT_CIRCUIT_BREAKER_RECOVERY_TIMEOUT",
            "DEFAULT_CIRCUIT_BREAKER_STATE",
            "DEFAULT_CIRCUIT_BREAKER_FAILURE_COUNT",
            "DEFAULT_CIRCUIT_BREAKER_LAST_FAILURE_TIME",
            "DEFAULT_CIRCUIT_BREAKER_NEXT_ATTEMPT_TIME",
            "DEFAULT_CIRCUIT_BREAKER_FAILURE_THRESHOLD",
            "DEFAULT_RETRY_MAX_ATTEMPTS",
            "DEFAULT_RETRY_BASE_DELAY",
            "DEFAULT_RETRY_MAX_DELAY",
            "DEFAULT_RETRY_JITTER",
            "DEFAULT_RETRY_RETRYABLE_ERRORS",
            "DEFAULT_RETRY_RETRYABLE_STATUS_CODES",
            "DEFAULT_BULKHEAD_MAX_CONCURRENT",
            "DEFAULT_BULKHEAD_MAX_QUEUE_SIZE",
            "DEFAULT_BULKHEAD_TIMEOUT",
            "__all__"
        ]
    },
    "src/provide/foundation/resilience/bulkhead.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "threading",
            "time",
            "typing",
            "attrs",
            "provide.foundation.resilience.bulkhead_async",
            "provide.foundation.resilience.bulkhead_sync",
            "provide.foundation.hub.events",
            "provide.foundation.hub.events"
        ],
        "functions": [
            "get_bulkhead_manager",
            "execute",
            "_emit_event",
            "get_status",
            "__init__",
            "create_bulkhead",
            "get_bulkhead",
            "list_bulkheads",
            "get_all_status",
            "remove_bulkhead"
        ],
        "classes": [
            "Bulkhead",
            "BulkheadManager"
        ],
        "variables": [
            "T",
            "_bulkhead_manager",
            "__all__",
            "start_time",
            "result",
            "execution_time",
            "start_time",
            "result",
            "execution_time",
            "pool_stats",
            "pool_stats",
            "execution_time",
            "execution_time",
            "pool",
            "pool"
        ]
    },
    "src/provide/foundation/resilience/circuit_sync.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "enum",
            "threading",
            "time",
            "typing"
        ],
        "functions": [
            "__init__",
            "state",
            "failure_count",
            "_can_attempt_recovery",
            "call",
            "_on_success",
            "_on_failure",
            "reset"
        ],
        "classes": [
            "CircuitState",
            "SyncCircuitBreaker"
        ],
        "variables": [
            "CLOSED",
            "OPEN",
            "HALF_OPEN",
            "current_state",
            "result"
        ]
    },
    "src/provide/foundation/resilience/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.resilience.bulkhead",
            "provide.foundation.resilience.circuit_async",
            "provide.foundation.resilience.circuit_sync",
            "provide.foundation.resilience.decorators",
            "provide.foundation.resilience.fallback",
            "provide.foundation.resilience.retry"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/resilience/bulkhead_async.py": {
        "imports": [
            "__future__",
            "asyncio",
            "collections",
            "contextlib",
            "typing",
            "attrs",
            "provide.foundation.resilience.defaults"
        ],
        "functions": [
            "__attrs_post_init__"
        ],
        "classes": [
            "AsyncResourcePool"
        ],
        "variables": [
            "__all__",
            "actual_timeout",
            "waiter",
            "waiter_event"
        ]
    },
    "src/provide/foundation/resilience/types.py": {
        "imports": [
            "__future__",
            "enum"
        ],
        "functions": [],
        "classes": [
            "CircuitState",
            "BackoffStrategy"
        ],
        "variables": [
            "__all__",
            "CLOSED",
            "OPEN",
            "HALF_OPEN",
            "FIXED",
            "LINEAR",
            "EXPONENTIAL",
            "FIBONACCI"
        ]
    },
    "src/provide/foundation/resilience/fallback.py": {
        "imports": [
            "__future__",
            "asyncio",
            "collections.abc",
            "functools",
            "typing",
            "attrs",
            "provide.foundation.logger"
        ],
        "functions": [
            "fallback",
            "add_fallback",
            "execute",
            "decorator",
            "sync_wrapper"
        ],
        "classes": [
            "FallbackChain"
        ],
        "variables": [
            "T",
            "primary_exception",
            "last_exception",
            "primary_exception",
            "last_exception",
            "chain",
            "result",
            "primary_exception",
            "result",
            "result",
            "result",
            "primary_exception",
            "last_exception",
            "result",
            "result",
            "last_exception"
        ]
    },
    "src/provide/foundation/resilience/circuit_async.py": {
        "imports": [
            "__future__",
            "asyncio",
            "collections.abc",
            "time",
            "typing",
            "provide.foundation.resilience.circuit_sync"
        ],
        "functions": [
            "__init__",
            "_can_attempt_recovery"
        ],
        "classes": [
            "AsyncCircuitBreaker"
        ],
        "variables": [
            "result"
        ]
    },
    "src/provide/foundation/docs/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.docs.generator"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/docs/generator.py": {
        "imports": [
            "__future__",
            "pathlib",
            "typing",
            "provide.foundation.errors",
            "provide.foundation.logger",
            "mkdocs_gen_files"
        ],
        "functions": [
            "generate_api_docs",
            "__init__",
            "should_skip",
            "get_module_identifier",
            "generate_module_doc",
            "process_python_file",
            "generate_navigation",
            "generate_index",
            "_generate_default_index_content",
            "generate"
        ],
        "classes": [
            "APIDocGenerator"
        ],
        "variables": [
            "log",
            "_HAS_MKDOCS",
            "generator",
            "mkdocs_gen_files",
            "_HAS_MKDOCS",
            "path_str",
            "parts",
            "module_path",
            "doc_path",
            "parts",
            "identifier",
            "title",
            "nav_path",
            "index_path",
            "content",
            "title",
            "stats",
            "python_files",
            "parts",
            "doc_path"
        ]
    },
    "src/provide/foundation/platform/info.py": {
        "imports": [
            "__future__",
            "contextlib",
            "os",
            "pathlib",
            "platform",
            "shutil",
            "sys",
            "attrs",
            "provide.foundation.logger",
            "provide.foundation.platform.detection",
            "provide.foundation.utils.caching",
            "provide.foundation.file.temp",
            "psutil"
        ],
        "functions": [
            "get_system_info",
            "is_windows",
            "is_macos",
            "is_linux",
            "is_arm",
            "is_64bit"
        ],
        "classes": [
            "SystemInfo"
        ],
        "variables": [
            "log",
            "os_name",
            "arch",
            "platform_str",
            "os_version",
            "cpu_type",
            "python_version",
            "hostname",
            "username",
            "home_dir",
            "temp_dir",
            "num_cpus",
            "total_memory",
            "available_memory",
            "disk_usage",
            "info",
            "machine",
            "hostname",
            "num_cpus",
            "mem",
            "total_memory",
            "available_memory",
            "disk_usage",
            "usage"
        ]
    },
    "src/provide/foundation/platform/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.platform.detection",
            "provide.foundation.platform.info"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/platform/detection.py": {
        "imports": [
            "__future__",
            "platform",
            "re",
            "provide.foundation.errors.platform",
            "provide.foundation.logger",
            "provide.foundation.utils.caching"
        ],
        "functions": [
            "get_os_name",
            "get_arch_name",
            "get_platform_string",
            "get_os_version",
            "_detect_intel_cpu",
            "_detect_amd_cpu",
            "_detect_apple_cpu",
            "get_cpu_type",
            "normalize_platform_components"
        ],
        "classes": [],
        "variables": [
            "log",
            "os_name",
            "arch",
            "platform_str",
            "match",
            "os_map",
            "arch_map",
            "normalized_os",
            "normalized_arch",
            "os_name",
            "arch",
            "system",
            "release",
            "match",
            "match",
            "processor",
            "mac_ver",
            "result",
            "release",
            "parts",
            "version"
        ]
    },
    "src/provide/foundation/context/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.context.core"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/context/core.py": {
        "imports": [
            "__future__",
            "copy",
            "pathlib",
            "typing",
            "attrs",
            "provide.foundation.config",
            "provide.foundation.config.base",
            "provide.foundation.config.converters",
            "provide.foundation.config.defaults",
            "provide.foundation.config.env",
            "provide.foundation.errors.config",
            "provide.foundation.errors.runtime",
            "provide.foundation.file.formats",
            "provide.foundation.logger",
            "attrs"
        ],
        "functions": [
            "__attrs_post_init__",
            "update_from_env",
            "to_dict",
            "from_dict",
            "_load_config_data",
            "_update_from_config_data",
            "load_config",
            "save_config",
            "_merge_with_override",
            "_get_field_defaults",
            "_merge_without_override",
            "merge",
            "freeze",
            "copy",
            "logger",
            "_validate"
        ],
        "classes": [
            "CLIContext"
        ],
        "variables": [
            "VALID_LOG_LEVELS",
            "default_ctx",
            "env_ctx",
            "kwargs",
            "field_mappings",
            "path",
            "data",
            "path",
            "data",
            "data",
            "defaults",
            "defaults",
            "merged_data",
            "other_data",
            "default_value",
            "env_value"
        ]
    },
    "src/provide/foundation/process/shared.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "pathlib",
            "typing",
            "attrs",
            "provide.foundation.errors.config",
            "provide.foundation.errors.process",
            "provide.foundation.process.env"
        ],
        "functions": [
            "prepare_environment",
            "create_completed_process",
            "check_process_success",
            "check_process_exit_code",
            "filter_subprocess_kwargs",
            "normalize_cwd",
            "prepare_input",
            "validate_command_type"
        ],
        "classes": [
            "CompletedProcess"
        ],
        "variables": [
            "args",
            "valid_subprocess_kwargs"
        ]
    },
    "src/provide/foundation/process/defaults.py": {
        "imports": [
            "__future__"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "DEFAULT_PROCESS_READLINE_TIMEOUT",
            "DEFAULT_PROCESS_READCHAR_TIMEOUT",
            "DEFAULT_PROCESS_TERMINATE_TIMEOUT",
            "DEFAULT_PROCESS_WAIT_TIMEOUT",
            "DEFAULT_SHELL_ALLOW_FEATURES",
            "DEFAULT_ENV_SCRUBBING_ENABLED",
            "__all__"
        ]
    },
    "src/provide/foundation/process/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.errors.process",
            "provide.foundation.process.aio",
            "provide.foundation.process.exit",
            "provide.foundation.process.lifecycle",
            "provide.foundation.process.shared",
            "provide.foundation.process.sync"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "run_command",
            "stream_command",
            "__all__"
        ]
    },
    "src/provide/foundation/process/env.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "os",
            "provide.foundation.process.defaults"
        ],
        "functions": [
            "is_sensitive_env_var",
            "scrub_environment",
            "mask_sensitive_env_vars",
            "prepare_subprocess_environment"
        ],
        "classes": [],
        "variables": [
            "SAFE_ENV_ALLOWLIST",
            "SENSITIVE_ENV_PATTERNS",
            "__all__",
            "name_upper",
            "masked",
            "run_env",
            "allowlist"
        ]
    },
    "src/provide/foundation/process/validation.py": {
        "imports": [
            "__future__",
            "provide.foundation.errors.process"
        ],
        "functions": [
            "validate_shell_safety",
            "__init__"
        ],
        "classes": [
            "ShellFeatureError"
        ],
        "variables": [
            "DANGEROUS_SHELL_PATTERNS",
            "__all__",
            "truncated_command"
        ]
    },
    "src/provide/foundation/process/exit.py": {
        "imports": [
            "__future__",
            "sys",
            "provide.foundation.config.defaults",
            "provide.foundation.hub.foundation"
        ],
        "functions": [
            "exit_success",
            "exit_error",
            "exit_interrupted"
        ],
        "classes": [],
        "variables": [
            "logger",
            "logger",
            "logger"
        ]
    },
    "src/provide/foundation/process/sync/streaming.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "pathlib",
            "subprocess",
            "typing",
            "provide.foundation.errors.process",
            "provide.foundation.logger",
            "provide.foundation.process.shared",
            "fcntl",
            "os",
            "time",
            "select",
            "time"
        ],
        "functions": [
            "_make_stdout_nonblocking",
            "_check_timeout_expired",
            "_read_chunk_from_stdout",
            "_yield_complete_lines",
            "_yield_remaining_lines",
            "_finalize_remaining_data",
            "_stream_with_timeout",
            "_stream_without_timeout",
            "_cleanup_process",
            "stream"
        ],
        "classes": [],
        "variables": [
            "log",
            "fd",
            "fl",
            "elapsed",
            "remaining_data",
            "start_time",
            "buffer",
            "cmd_str",
            "run_env",
            "cwd",
            "chunk",
            "elapsed",
            "remaining",
            "process",
            "buffer",
            "returncode",
            "returncode"
        ]
    },
    "src/provide/foundation/process/sync/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.process.sync.execution",
            "provide.foundation.process.sync.shell",
            "provide.foundation.process.sync.streaming"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/process/sync/shell.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "pathlib",
            "typing",
            "provide.foundation.errors.config",
            "provide.foundation.logger",
            "provide.foundation.process.defaults",
            "provide.foundation.process.shared",
            "provide.foundation.process.sync.execution",
            "provide.foundation.process.validation"
        ],
        "functions": [
            "shell"
        ],
        "classes": [],
        "variables": [
            "log"
        ]
    },
    "src/provide/foundation/process/sync/execution.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "pathlib",
            "subprocess",
            "typing",
            "provide.foundation.errors.process",
            "provide.foundation.logger",
            "provide.foundation.process.shared",
            "provide.foundation.security"
        ],
        "functions": [
            "run",
            "run_simple"
        ],
        "classes": [],
        "variables": [
            "log",
            "cmd_str",
            "masked_cmd",
            "run_env",
            "cwd",
            "subprocess_input",
            "result",
            "subprocess_cmd",
            "result",
            "completed"
        ]
    },
    "src/provide/foundation/process/aio/streaming.py": {
        "imports": [
            "__future__",
            "asyncio",
            "builtins",
            "collections.abc",
            "pathlib",
            "typing",
            "provide.foundation.errors.process",
            "provide.foundation.logger",
            "provide.foundation.process.shared"
        ],
        "functions": [
            "check_stream_exit_code"
        ],
        "classes": [],
        "variables": [
            "log",
            "stderr_handling",
            "cmd_str",
            "run_env",
            "cwd_str",
            "process",
            "remaining_timeout",
            "start_time",
            "process",
            "elapsed",
            "remaining_timeout",
            "line",
            "lines"
        ]
    },
    "src/provide/foundation/process/aio/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.process.aio.execution",
            "provide.foundation.process.aio.shell",
            "provide.foundation.process.aio.streaming"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/process/aio/shell.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "pathlib",
            "typing",
            "provide.foundation.errors.config",
            "provide.foundation.process.aio.execution",
            "provide.foundation.process.defaults",
            "provide.foundation.process.shared",
            "provide.foundation.process.validation"
        ],
        "functions": [],
        "classes": [],
        "variables": []
    },
    "src/provide/foundation/process/aio/execution.py": {
        "imports": [
            "__future__",
            "asyncio",
            "builtins",
            "collections.abc",
            "contextlib",
            "pathlib",
            "typing",
            "provide.foundation.errors.config",
            "provide.foundation.errors.process",
            "provide.foundation.logger",
            "provide.foundation.process.shared",
            "provide.foundation.security"
        ],
        "functions": [
            "create_completed_process_result",
            "check_process_success"
        ],
        "classes": [],
        "variables": [
            "log",
            "common_args",
            "stdout_str",
            "stderr_str",
            "cmd_str",
            "masked_cmd",
            "run_env",
            "cwd_str",
            "process",
            "stdout_task",
            "stderr_task",
            "process",
            "chunk",
            "stdout",
            "stderr",
            "completed",
            "partial_stdout",
            "partial_stderr"
        ]
    },
    "src/provide/foundation/process/lifecycle/monitoring.py": {
        "imports": [
            "__future__",
            "asyncio",
            "provide.foundation.errors.process",
            "provide.foundation.logger",
            "provide.foundation.process.defaults",
            "provide.foundation.process.lifecycle.managed"
        ],
        "functions": [
            "_drain_remaining_output",
            "_check_pattern_found",
            "_handle_process_error_exit",
            "_handle_process_clean_exit_without_pattern"
        ],
        "classes": [],
        "variables": [
            "log",
            "buffer",
            "loop",
            "start_time",
            "buffer",
            "last_exit_code",
            "buffer",
            "line",
            "remaining",
            "last_exit_code"
        ]
    },
    "src/provide/foundation/process/lifecycle/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.process.lifecycle.managed",
            "provide.foundation.process.lifecycle.monitoring"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/process/lifecycle/managed.py": {
        "imports": [
            "__future__",
            "asyncio",
            "collections.abc",
            "functools",
            "os",
            "pathlib",
            "subprocess",
            "sys",
            "threading",
            "traceback",
            "typing",
            "provide.foundation.errors.decorators",
            "provide.foundation.errors.process",
            "provide.foundation.errors.runtime",
            "provide.foundation.logger",
            "provide.foundation.process.defaults"
        ],
        "functions": [
            "__init__",
            "process",
            "pid",
            "returncode",
            "is_running",
            "launch",
            "_start_stderr_relay",
            "terminate_gracefully",
            "cleanup",
            "__enter__",
            "__exit__",
            "relay_stderr"
        ],
        "classes": [
            "ManagedProcess"
        ],
        "variables": [
            "log",
            "loop",
            "read_func",
            "loop",
            "read_func",
            "process",
            "line_data",
            "char_data",
            "line"
        ]
    },
    "src/provide/foundation/time/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.time.core"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/time/core.py": {
        "imports": [
            "__future__",
            "datetime",
            "time",
            "zoneinfo",
            "provide.foundation.errors"
        ],
        "functions": [
            "provide_time",
            "provide_sleep",
            "provide_now"
        ],
        "classes": [],
        "variables": [
            "zone"
        ]
    },
    "src/provide/foundation/parsers/attrs_integration.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.parsers.typed"
        ],
        "functions": [
            "_try_converter",
            "_resolve_string_type",
            "_extract_field_type",
            "auto_parse"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "type_map",
            "field_type",
            "field_type",
            "result",
            "field_type",
            "converter"
        ]
    },
    "src/provide/foundation/parsers/primitives.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.parsers.errors",
            "provide.foundation.serialization"
        ],
        "functions": [
            "parse_bool_extended",
            "parse_bool_strict",
            "parse_bool",
            "parse_float_with_validation",
            "parse_sample_rate",
            "parse_json_dict",
            "parse_json_list"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "value_lower",
            "value_lower",
            "result",
            "result",
            "result"
        ]
    },
    "src/provide/foundation/parsers/typed.py": {
        "imports": [
            "__future__",
            "types",
            "typing",
            "typing",
            "provide.foundation.parsers.collections",
            "provide.foundation.parsers.primitives"
        ],
        "functions": [
            "_parse_basic_type",
            "_parse_list_type",
            "_parse_tuple_type",
            "_parse_set_type",
            "_parse_generic_type",
            "extract_concrete_type",
            "parse_typed_value"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "args",
            "args",
            "args",
            "origin",
            "origin",
            "args",
            "result",
            "result",
            "item_type",
            "str_list",
            "item_type",
            "str_tuple",
            "item_type",
            "str_set",
            "annotation",
            "type_mapping",
            "non_none_types",
            "parts",
            "non_none_parts",
            "args",
            "annotation"
        ]
    },
    "src/provide/foundation/parsers/errors.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.logger.types"
        ],
        "functions": [
            "_format_invalid_value_error",
            "_format_validation_error"
        ],
        "classes": [],
        "variables": [
            "_VALID_LOG_LEVEL_TUPLE",
            "_VALID_FORMATTER_TUPLE",
            "_VALID_FOUNDATION_LOG_OUTPUT_TUPLE",
            "_VALID_OVERFLOW_POLICY_TUPLE",
            "__all__",
            "LogLevelStr",
            "ConsoleFormatterStr",
            "parts"
        ]
    },
    "src/provide/foundation/parsers/collections.py": {
        "imports": [
            "__future__"
        ],
        "functions": [
            "parse_list",
            "parse_tuple",
            "parse_set",
            "parse_dict",
            "parse_comma_list"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "items",
            "items",
            "items",
            "result",
            "items",
            "items",
            "key",
            "val"
        ]
    },
    "src/provide/foundation/parsers/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.parsers.attrs_integration",
            "provide.foundation.parsers.collections",
            "provide.foundation.parsers.errors",
            "provide.foundation.parsers.primitives",
            "provide.foundation.parsers.structured",
            "provide.foundation.parsers.telemetry",
            "provide.foundation.parsers.typed"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/parsers/telemetry.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.parsers.errors",
            "provide.foundation.logger.types"
        ],
        "functions": [
            "parse_log_level",
            "parse_console_formatter",
            "parse_foundation_log_output"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "LogLevelStr",
            "ConsoleFormatterStr",
            "level",
            "formatter",
            "normalized",
            "valid_options"
        ]
    },
    "src/provide/foundation/parsers/structured.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.logger.types",
            "provide.foundation.parsers.telemetry"
        ],
        "functions": [
            "parse_log_level",
            "parse_module_levels",
            "parse_rate_limits",
            "parse_headers"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "LogLevelStr",
            "result",
            "result",
            "result",
            "result",
            "pair",
            "module",
            "level",
            "triplet",
            "parts",
            "logger_name",
            "pair",
            "key",
            "val",
            "rate",
            "capacity"
        ]
    },
    "src/provide/foundation/hub/protocols.py": {
        "imports": [
            "__future__",
            "abc",
            "contextlib",
            "typing"
        ],
        "functions": [
            "dispose",
            "initialize",
            "health_check",
            "acquire_resource",
            "release_resource",
            "cleanup_all",
            "__init__"
        ],
        "classes": [
            "Disposable",
            "AsyncDisposable",
            "Initializable",
            "AsyncInitializable",
            "HealthCheckable",
            "ResourceManager",
            "AsyncResourceManager",
            "AsyncContextResource"
        ],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/hub/discovery.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors.decorators",
            "provide.foundation.hub.categories",
            "provide.foundation.hub.registry",
            "provide.foundation.hub.components",
            "sys",
            "sys",
            "importlib",
            "importlib_metadata"
        ],
        "functions": [
            "_get_registry_and_lock",
            "resolve_component_dependencies",
            "_load_entry_point",
            "_get_entry_points",
            "discover_components"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "registry",
            "entry",
            "dependencies",
            "dep_names",
            "discovered",
            "group_entries",
            "dep_component",
            "component_class",
            "entry_points",
            "dimension",
            "registry",
            "result",
            "dep_component"
        ]
    },
    "src/provide/foundation/hub/config.py": {
        "imports": [
            "__future__",
            "inspect",
            "typing",
            "provide.foundation.config.base",
            "provide.foundation.errors.decorators",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.registry",
            "provide.foundation.hub.components"
        ],
        "functions": [
            "_get_registry_and_lock",
            "resolve_config_value",
            "get_config_chain",
            "load_config_from_registry"
        ],
        "classes": [],
        "variables": [
            "T",
            "__all__",
            "all_entries",
            "config_sources",
            "all_entries",
            "config_sources",
            "configs",
            "chain",
            "config_data",
            "chain",
            "source",
            "source",
            "source",
            "value",
            "source_data",
            "source_config",
            "source_config"
        ]
    },
    "src/provide/foundation/hub/registry.py": {
        "imports": [
            "__future__",
            "collections",
            "collections.abc",
            "typing",
            "attrs",
            "provide.foundation.errors.resources",
            "provide.foundation.concurrency.locks",
            "provide.foundation.hub.protocols",
            "provide.foundation.hub.events",
            "contextlib",
            "provide.foundation.hub.events",
            "provide.foundation.hub.events"
        ],
        "functions": [
            "get_command_registry",
            "key",
            "__init__",
            "register",
            "get",
            "get_entry",
            "list_dimension",
            "list_all",
            "remove",
            "clear",
            "dispose_all",
            "_dispose_all_resources",
            "_dispose_resources",
            "__contains__",
            "__iter__",
            "__len__"
        ],
        "classes": [
            "RegistryEntry",
            "Registry"
        ],
        "variables": [
            "_command_registry",
            "__all__",
            "entry",
            "value",
            "entry",
            "aliases_to_remove",
            "entry",
            "aliases_to_remove",
            "aliases_to_remove"
        ]
    },
    "src/provide/foundation/hub/decorators.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "typing",
            "provide.foundation.hub.categories",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.info",
            "provide.foundation.hub.registry",
            "provide.foundation.cli.click.hierarchy",
            "provide.foundation.cli.deps"
        ],
        "functions": [
            "_get_click",
            "_get_ensure_parent_groups",
            "register_command",
            "register_command",
            "register_command",
            "_register_command_func",
            "decorator"
        ],
        "classes": [],
        "variables": [
            "F",
            "__all__",
            "reg",
            "click_cmd",
            "cmd_metadata",
            "info",
            "full_name",
            "reg_metadata",
            "_click_module",
            "_HAS_CLICK",
            "func",
            "parts",
            "parent",
            "command_name",
            "click_cmd",
            "actual_func",
            "actual_func",
            "parent",
            "command_name",
            "parent",
            "command_name",
            "ensure_parent_groups_fn"
        ]
    },
    "src/provide/foundation/hub/type_mapping.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.parsers"
        ],
        "functions": [
            "extract_click_type"
        ],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/hub/handlers.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors.decorators",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.registry",
            "provide.foundation.hub.components"
        ],
        "functions": [
            "_get_registry_and_lock",
            "get_handlers_for_exception",
            "execute_error_handlers"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "all_entries",
            "handlers",
            "exception_type_name",
            "matching_handlers",
            "handlers",
            "exception_types",
            "handler",
            "result"
        ]
    },
    "src/provide/foundation/hub/components.py": {
        "imports": [
            "__future__",
            "typing",
            "attrs",
            "provide.foundation.config.defaults",
            "provide.foundation.errors.decorators",
            "provide.foundation.hub.categories",
            "provide.foundation.hub.config",
            "provide.foundation.hub.discovery",
            "provide.foundation.hub.handlers",
            "provide.foundation.hub.lifecycle",
            "provide.foundation.hub.processors",
            "provide.foundation.hub.registry",
            "provide.foundation.hub.foundation",
            "time"
        ],
        "functions": [
            "get_component_registry",
            "check_component_health",
            "get_component_config_schema",
            "bootstrap_foundation",
            "timestamp_processor"
        ],
        "classes": [
            "ComponentInfo",
            "ComponentLifecycle"
        ],
        "variables": [
            "_component_registry",
            "__all__",
            "component",
            "entry",
            "entry",
            "registry"
        ]
    },
    "src/provide/foundation/hub/introspection.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "inspect",
            "typing",
            "attrs",
            "provide.foundation.cli.errors",
            "provide.foundation.parsers",
            "re"
        ],
        "functions": [
            "extract_cli_hint",
            "introspect_parameters"
        ],
        "classes": [
            "ParameterInfo"
        ],
        "variables": [
            "__all__",
            "sig",
            "result",
            "args",
            "base_type",
            "metadata",
            "annotation",
            "concrete",
            "has_default",
            "default_value",
            "param_info",
            "hint_match",
            "base_type",
            "cli_hint",
            "hint"
        ]
    },
    "src/provide/foundation/hub/info.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "typing",
            "attrs",
            "provide.foundation.hub.introspection"
        ],
        "functions": [],
        "classes": [
            "CommandInfo"
        ],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/hub/commands.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.hub.decorators",
            "provide.foundation.hub.info",
            "provide.foundation.hub.registry",
            "provide.foundation.cli.click.commands",
            "provide.foundation.cli.click.builder",
            "click"
        ],
        "functions": [
            "_check_click",
            "build_click_command",
            "create_command_group"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "_HAS_CLICK",
            "_HAS_CLICK"
        ]
    },
    "src/provide/foundation/hub/__init__.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.hub.components",
            "provide.foundation.hub.decorators",
            "provide.foundation.hub.manager",
            "provide.foundation.hub.protocols",
            "provide.foundation.hub.registry",
            "provide.foundation.cli.click.commands"
        ],
        "functions": [
            "build_click_command"
        ],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/hub/initialization.py": {
        "imports": [
            "__future__",
            "contextlib",
            "enum",
            "threading",
            "typing",
            "attrs",
            "provide.foundation.concurrency.locks",
            "provide.foundation.errors.runtime",
            "provide.foundation.state.base",
            "provide.foundation.concurrency.locks",
            "provide.foundation.logger.config",
            "provide.foundation.logger.core",
            "provide.foundation.hub.event_handlers",
            "provide.foundation.logger.setup.coordinator",
            "provide.foundation.utils.timing"
        ],
        "functions": [
            "get_initialization_coordinator",
            "__init__",
            "state_data",
            "mark_complete",
            "mark_failed",
            "wait_for_completion",
            "reset",
            "__init__",
            "initialize_foundation",
            "update_config_if_default",
            "_initialize_config",
            "_initialize_logger",
            "_register_components",
            "_setup_event_handlers",
            "get_state",
            "is_initialized",
            "reset_state"
        ],
        "classes": [
            "InitState",
            "InitEvent",
            "InitializationState",
            "InitializationStateMachine",
            "InitializationCoordinator"
        ],
        "variables": [
            "_coordinator",
            "__all__",
            "UNINITIALIZED",
            "INITIALIZING",
            "INITIALIZED",
            "FAILED",
            "START",
            "COMPLETE",
            "FAIL",
            "RESET",
            "state_data",
            "state_data",
            "hub_wrapper",
            "logger_instance",
            "state_data",
            "setup_logger",
            "actual_config",
            "logger_instance"
        ]
    },
    "src/provide/foundation/hub/event_handlers.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.hub.events",
            "provide.foundation.logger.setup.coordinator"
        ],
        "functions": [
            "_get_logger_safely",
            "set_reset_in_progress",
            "handle_registry_event",
            "handle_circuit_breaker_event",
            "setup_event_logging"
        ],
        "classes": [],
        "variables": [
            "_foundation_initializing",
            "_reset_in_progress",
            "__all__",
            "_reset_in_progress",
            "logger",
            "logger",
            "event_bus"
        ]
    },
    "src/provide/foundation/hub/manager.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.concurrency.locks",
            "provide.foundation.context",
            "provide.foundation.hub.commands",
            "provide.foundation.hub.components",
            "provide.foundation.hub.core",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.registry",
            "provide.foundation.testmode.detection",
            "provide.foundation.testmode.detection",
            "provide.foundation.hub.components"
        ],
        "functions": [
            "get_hub",
            "clear_hub",
            "__init__",
            "initialize_foundation",
            "get_foundation_logger",
            "is_foundation_initialized",
            "get_foundation_config",
            "clear",
            "dispose_all"
        ],
        "classes": [
            "Hub"
        ],
        "variables": [
            "_global_hub",
            "use_shared",
            "comp_registry",
            "cmd_registry",
            "_global_hub",
            "comp_registry",
            "comp_registry",
            "cmd_registry",
            "cmd_registry"
        ]
    },
    "src/provide/foundation/hub/types.py": {
        "imports": [
            "__future__",
            "typing"
        ],
        "functions": [],
        "classes": [
            "Registrable"
        ],
        "variables": []
    },
    "src/provide/foundation/hub/core.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "typing",
            "provide.foundation.context",
            "provide.foundation.errors.config",
            "provide.foundation.errors.decorators",
            "provide.foundation.errors.resources",
            "provide.foundation.hub.categories",
            "provide.foundation.hub.commands",
            "provide.foundation.hub.components",
            "provide.foundation.hub.registry",
            "click",
            "provide.foundation.cli.deps",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.components",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.commands",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation"
        ],
        "functions": [
            "_get_click",
            "__init__",
            "add_component",
            "get_component",
            "list_components",
            "discover_components",
            "add_command",
            "get_command",
            "list_commands",
            "create_cli",
            "add_cli_group",
            "initialize",
            "cleanup",
            "clear",
            "__enter__",
            "__exit__"
        ],
        "classes": [
            "CoreHub"
        ],
        "variables": [
            "_click_module",
            "_HAS_CLICK",
            "component_name",
            "info",
            "all_items",
            "components",
            "info",
            "cli",
            "command_name",
            "command_func",
            "click_command",
            "command_func",
            "click_command",
            "cli",
            "component_class",
            "component_class",
            "command_name",
            "command_name"
        ]
    },
    "src/provide/foundation/hub/events.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "threading",
            "typing",
            "weakref",
            "attrs",
            "sys",
            "traceback"
        ],
        "functions": [
            "get_event_bus",
            "emit_registry_event",
            "__attrs_post_init__",
            "__init__",
            "subscribe",
            "emit",
            "_handle_handler_error",
            "unsubscribe",
            "_cleanup_dead_references",
            "get_memory_stats",
            "get_error_stats",
            "force_cleanup",
            "clear"
        ],
        "classes": [
            "Event",
            "RegistryEvent",
            "EventBus"
        ],
        "variables": [
            "_event_bus",
            "__all__",
            "event",
            "handler_name",
            "error_record",
            "weak_handler",
            "live_handlers",
            "live_handlers",
            "total_handlers",
            "dead_handlers",
            "handler"
        ]
    },
    "src/provide/foundation/hub/processors.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.hub.registry",
            "provide.foundation.hub.components"
        ],
        "functions": [
            "_get_registry_and_lock",
            "get_processor_pipeline",
            "get_processors_for_stage"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "all_entries",
            "processors",
            "pipeline"
        ]
    },
    "src/provide/foundation/hub/foundation.py": {
        "imports": [
            "__future__",
            "contextlib",
            "threading",
            "typing",
            "provide.foundation.hub.registry",
            "provide.foundation.logger.base",
            "provide.foundation.logger.config",
            "provide.foundation.hub.manager",
            "provide.foundation.logger",
            "provide.foundation.hub.initialization",
            "os",
            "structlog",
            "provide.foundation.testmode.detection",
            "structlog",
            "provide.foundation.logger.setup.coordinator",
            "provide.foundation.testmode.internal",
            "provide.foundation.hub.initialization"
        ],
        "functions": [
            "get_foundation_logger",
            "__init__",
            "initialize_foundation",
            "get_foundation_logger",
            "is_foundation_initialized",
            "get_foundation_config",
            "clear_foundation_state",
            "_get_logger"
        ],
        "classes": [
            "FoundationManager"
        ],
        "variables": [
            "hub",
            "coordinator",
            "logger_instance",
            "otlp_configured",
            "setup_log",
            "logger",
            "force",
            "coordinator"
        ]
    },
    "src/provide/foundation/hub/categories.py": {
        "imports": [
            "__future__",
            "enum"
        ],
        "functions": [],
        "classes": [
            "ComponentCategory"
        ],
        "variables": [
            "__all__",
            "COMMAND",
            "COMPONENT",
            "CONFIG_SOURCE",
            "PROCESSOR",
            "ERROR_HANDLER",
            "FORMATTER",
            "FILTER",
            "TRANSPORT",
            "TRANSPORT_MIDDLEWARE",
            "TRANSPORT_AUTH",
            "TRANSPORT_CACHE",
            "EVENT_SET"
        ]
    },
    "src/provide/foundation/hub/lifecycle.py": {
        "imports": [
            "__future__",
            "asyncio",
            "inspect",
            "typing",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.components"
        ],
        "functions": [
            "_get_registry_and_globals",
            "get_or_initialize_component",
            "cleanup_all_components"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "key",
            "entry",
            "key",
            "entry",
            "factory",
            "entries",
            "async_components",
            "factory",
            "component",
            "component",
            "component",
            "component",
            "cleanup_func",
            "loop",
            "loop",
            "task",
            "loop"
        ]
    },
    "src/provide/foundation/tools/cache.py": {
        "imports": [
            "__future__",
            "datetime",
            "pathlib",
            "provide.foundation.errors",
            "provide.foundation.file.formats",
            "provide.foundation.logger"
        ],
        "functions": [
            "__init__",
            "_load_metadata",
            "_save_metadata",
            "get",
            "store",
            "invalidate",
            "_is_expired",
            "clear",
            "list_cached",
            "get_size",
            "prune_expired"
        ],
        "classes": [
            "CacheError",
            "ToolCache"
        ],
        "variables": [
            "log",
            "key",
            "key",
            "results",
            "total",
            "expired_keys",
            "path",
            "key",
            "keys_to_remove",
            "cached_at",
            "ttl_days",
            "expiry",
            "entry",
            "path",
            "cached_at",
            "ttl_days",
            "expiry",
            "days_left"
        ]
    },
    "src/provide/foundation/tools/registry.py": {
        "imports": [
            "__future__",
            "importlib.metadata",
            "typing",
            "provide.foundation.config",
            "provide.foundation.hub",
            "provide.foundation.logger",
            "provide.foundation.tools.base"
        ],
        "functions": [
            "get_tool_registry",
            "register_tool_manager",
            "get_tool_manager",
            "__init__",
            "_discover_tools",
            "register_tool_manager",
            "get_tool_manager_class",
            "create_tool_manager",
            "list_tools",
            "get_tool_info",
            "is_tool_registered"
        ],
        "classes": [
            "ToolRegistry"
        ],
        "variables": [
            "log",
            "DIMENSION",
            "registry",
            "registry",
            "metadata",
            "manager_class",
            "tools",
            "entry",
            "_tool_registry",
            "eps",
            "group_eps",
            "metadata",
            "manager_class"
        ]
    },
    "src/provide/foundation/tools/base.py": {
        "imports": [
            "__future__",
            "abc",
            "pathlib",
            "typing",
            "attrs",
            "provide.foundation.config",
            "provide.foundation.errors",
            "provide.foundation.logger",
            "provide.foundation.file.temp",
            "platform",
            "provide.foundation.tools.cache",
            "provide.foundation.tools.downloader",
            "provide.foundation.transport",
            "provide.foundation.tools.verifier",
            "provide.foundation.tools.installer",
            "provide.foundation.tools.resolver",
            "shutil"
        ],
        "functions": [
            "__init__",
            "cache",
            "downloader",
            "verifier",
            "installer",
            "resolver",
            "get_metadata",
            "get_available_versions",
            "resolve_version",
            "uninstall",
            "get_install_path",
            "is_installed",
            "get_platform_info"
        ],
        "classes": [
            "ToolError",
            "ToolNotFoundError",
            "ToolInstallError",
            "ToolVerificationError",
            "ToolMetadata",
            "BaseToolManager"
        ],
        "variables": [
            "log",
            "available",
            "resolved",
            "metadata",
            "download_path",
            "artifact_path",
            "install_path",
            "install_path",
            "base_path",
            "install_path",
            "executable",
            "system",
            "machine",
            "version",
            "system",
            "arch",
            "system",
            "arch",
            "arch",
            "system"
        ]
    },
    "src/provide/foundation/tools/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.tools.base",
            "provide.foundation.tools.cache",
            "provide.foundation.tools.downloader",
            "provide.foundation.tools.installer",
            "provide.foundation.tools.registry",
            "provide.foundation.tools.resolver",
            "provide.foundation.tools.verifier"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/tools/resolver.py": {
        "imports": [
            "__future__",
            "re",
            "provide.foundation.errors",
            "provide.foundation.logger"
        ],
        "functions": [
            "__init__",
            "resolve",
            "get_latest_stable",
            "get_latest_prerelease",
            "get_latest_any",
            "is_prerelease",
            "resolve_tilde",
            "resolve_caret",
            "resolve_wildcard",
            "parse_version",
            "compare_versions",
            "sort_versions"
        ],
        "classes": [
            "ResolutionError",
            "VersionResolver"
        ],
        "variables": [
            "log",
            "spec",
            "stable",
            "prerelease",
            "prerelease_patterns",
            "version_lower",
            "regex_pattern",
            "regex_pattern",
            "regex_pattern",
            "match",
            "version_str",
            "parts",
            "parts1",
            "parts2",
            "max_len",
            "parts",
            "matches",
            "parts",
            "major",
            "matches",
            "regex",
            "matches",
            "v_parts",
            "v_parts"
        ]
    },
    "src/provide/foundation/tools/downloader.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "pathlib",
            "provide.foundation.crypto.hashing",
            "provide.foundation.errors",
            "provide.foundation.logger",
            "provide.foundation.resilience",
            "provide.foundation.transport",
            "asyncio"
        ],
        "functions": [
            "__init__",
            "add_progress_callback",
            "_report_progress",
            "verify_checksum"
        ],
        "classes": [
            "DownloadError",
            "ToolDownloader"
        ],
        "variables": [
            "log",
            "actual",
            "errors",
            "tasks",
            "results",
            "task_results",
            "last_error",
            "total_size",
            "downloaded",
            "response",
            "total_size",
            "last_error"
        ]
    },
    "src/provide/foundation/tools/installer.py": {
        "imports": [
            "__future__",
            "pathlib",
            "shutil",
            "tarfile",
            "zipfile",
            "provide.foundation.errors",
            "provide.foundation.logger",
            "provide.foundation.tools.base",
            "platform",
            "platform"
        ],
        "functions": [
            "install",
            "get_install_dir",
            "extract_zip",
            "extract_tar",
            "is_binary",
            "install_binary",
            "set_permissions",
            "create_symlinks"
        ],
        "classes": [
            "InstallError",
            "ToolInstaller"
        ],
        "variables": [
            "log",
            "install_dir",
            "suffix",
            "base",
            "mode",
            "bin_dir",
            "target_name",
            "target",
            "bin_dir",
            "safe_members",
            "mode",
            "safe_members",
            "exe_path",
            "parent",
            "latest_link",
            "member_path",
            "mode",
            "member_path",
            "mode",
            "link_path",
            "target",
            "header",
            "target"
        ]
    },
    "src/provide/foundation/tools/verifier.py": {
        "imports": [
            "__future__",
            "hashlib",
            "pathlib",
            "typing",
            "provide.foundation.errors",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.crypto",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation"
        ],
        "functions": [
            "verify_checksum",
            "verify_shasums_file",
            "verify_signature",
            "extract_checksum"
        ],
        "classes": [
            "VerificationError",
            "ToolVerifier"
        ],
        "variables": [
            "HashAlgo",
            "CHUNK_SIZE",
            "hasher",
            "actual",
            "matches",
            "checksum_string",
            "checksum",
            "checksum",
            "checksum_string",
            "line",
            "parts",
            "filename"
        ]
    },
    "src/provide/foundation/eventsets/registry.py": {
        "imports": [
            "__future__",
            "importlib",
            "pathlib",
            "pkgutil",
            "provide.foundation.errors.resources",
            "provide.foundation.eventsets.types",
            "provide.foundation.hub.registry",
            "provide.foundation.logger.setup.coordinator"
        ],
        "functions": [
            "get_registry",
            "register_event_set",
            "discover_event_sets",
            "reset_discovery_state",
            "clear_registry",
            "register_event_set",
            "get_event_set",
            "list_event_sets",
            "discover_sets"
        ],
        "classes": [
            "EventSetRegistry"
        ],
        "variables": [
            "logger",
            "_registry",
            "_discovery_completed",
            "_discovery_completed",
            "_discovery_completed",
            "_registry",
            "_discovery_completed",
            "event_set",
            "names",
            "entries",
            "valid_entries",
            "sets_path",
            "module_name",
            "module",
            "event_set"
        ]
    },
    "src/provide/foundation/eventsets/display.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.eventsets.registry",
            "provide.foundation.eventsets.resolver",
            "provide.foundation.logger",
            "provide.foundation.eventsets.resolver",
            "provide.foundation.eventsets.types"
        ],
        "functions": [
            "_format_event_set_config",
            "_format_registered_event_sets",
            "_format_resolver_state",
            "show_event_matrix"
        ],
        "classes": [],
        "variables": [
            "log",
            "registry",
            "resolver",
            "event_sets",
            "marker_count",
            "metadata_count",
            "transform_count",
            "sample_markers"
        ]
    },
    "src/provide/foundation/eventsets/__init__.py": {
        "imports": [
            "__future__"
        ],
        "functions": [],
        "classes": [],
        "variables": []
    },
    "src/provide/foundation/eventsets/resolver.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.eventsets.registry",
            "provide.foundation.eventsets.types"
        ],
        "functions": [
            "get_resolver",
            "enrich_event",
            "__init__",
            "resolve",
            "_process_field_enrichment",
            "_apply_visual_enrichments",
            "enrich_event",
            "_find_event_mapping_for_field",
            "get_visual_markers"
        ],
        "classes": [
            "EventSetResolver"
        ],
        "variables": [
            "_resolver",
            "registry",
            "event_sets",
            "event_mapping",
            "value_str",
            "visual_marker",
            "prefix",
            "event_msg",
            "enrichments",
            "simple_key",
            "markers",
            "field_value",
            "value_str",
            "visual_marker",
            "event_mapping",
            "value_str",
            "marker"
        ]
    },
    "src/provide/foundation/eventsets/types.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "typing",
            "attrs",
            "provide.foundation.config.defaults"
        ],
        "functions": [],
        "classes": [
            "EventMapping",
            "FieldMapping",
            "EventSet"
        ],
        "variables": []
    },
    "src/provide/foundation/eventsets/sets/das.py": {
        "imports": [
            "__future__",
            "provide.foundation.eventsets.types"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "EVENT_SET"
        ]
    },
    "src/provide/foundation/eventsets/sets/task_queue.py": {
        "imports": [
            "__future__",
            "provide.foundation.eventsets.types"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "EVENT_SET"
        ]
    },
    "src/provide/foundation/eventsets/sets/database.py": {
        "imports": [
            "__future__",
            "provide.foundation.eventsets.types"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "EVENT_SET"
        ]
    },
    "src/provide/foundation/eventsets/sets/http.py": {
        "imports": [
            "__future__",
            "provide.foundation.eventsets.types"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "EVENT_SET"
        ]
    },
    "src/provide/foundation/eventsets/sets/llm.py": {
        "imports": [
            "__future__",
            "provide.foundation.eventsets.types"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "EVENT_SET"
        ]
    },
    "src/provide/foundation/tracer/__init__.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.tracer.context",
            "provide.foundation.tracer.spans",
            "opentelemetry",
            "opentelemetry.exporter.otlp.proto.grpc.trace_exporter",
            "opentelemetry.exporter.otlp.proto.http.trace_exporter",
            "opentelemetry.sdk.trace",
            "opentelemetry.sdk.trace.export",
            "opentelemetry",
            "opentelemetry.exporter.otlp.proto.grpc.trace_exporter",
            "opentelemetry.exporter.otlp.proto.http.trace_exporter",
            "opentelemetry.sdk.trace",
            "opentelemetry.sdk.trace.export"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__",
            "_HAS_OTEL",
            "_HAS_OTEL"
        ]
    },
    "src/provide/foundation/tracer/context.py": {
        "imports": [
            "__future__",
            "contextvars",
            "typing",
            "provide.foundation.tracer.spans"
        ],
        "functions": [
            "get_current_span",
            "get_current_trace_id",
            "set_current_span",
            "create_child_span",
            "with_span",
            "get_trace_context",
            "__init__",
            "__enter__",
            "__exit__"
        ],
        "classes": [
            "SpanContext"
        ],
        "variables": [
            "span",
            "current_span",
            "trace_id",
            "parent"
        ]
    },
    "src/provide/foundation/tracer/otel.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.logger.config.telemetry",
            "provide.foundation.logger.setup",
            "opentelemetry",
            "opentelemetry.exporter.otlp.proto.grpc.trace_exporter",
            "opentelemetry.exporter.otlp.proto.http.trace_exporter",
            "opentelemetry.sdk.resources",
            "opentelemetry.sdk.trace",
            "opentelemetry.sdk.trace.export",
            "opentelemetry.sdk.trace.sampling",
            "opentelemetry",
            "opentelemetry.exporter.otlp.proto.grpc.trace_exporter",
            "opentelemetry.exporter.otlp.proto.http.trace_exporter",
            "opentelemetry.sdk.resources",
            "opentelemetry.sdk.trace",
            "opentelemetry.sdk.trace.export",
            "opentelemetry.sdk.trace.sampling"
        ],
        "functions": [
            "_require_otel",
            "setup_opentelemetry_tracing",
            "get_otel_tracer",
            "shutdown_opentelemetry"
        ],
        "classes": [],
        "variables": [
            "slog",
            "_HAS_OTEL",
            "resource_attrs",
            "resource",
            "sampler",
            "tracer_provider",
            "_HAS_OTEL",
            "endpoint",
            "headers",
            "processor",
            "current_provider",
            "provider_type",
            "should_setup",
            "tracer_provider",
            "exporter",
            "exporter"
        ]
    },
    "src/provide/foundation/tracer/spans.py": {
        "imports": [
            "__future__",
            "time",
            "typing",
            "uuid",
            "attrs",
            "provide.foundation.config.defaults",
            "provide.foundation.logger",
            "opentelemetry",
            "opentelemetry.trace",
            "opentelemetry",
            "opentelemetry.trace",
            "provide.foundation.tracer.context",
            "provide.foundation.tracer.context"
        ],
        "functions": [
            "__attrs_post_init__",
            "set_tag",
            "set_error",
            "finish",
            "__enter__",
            "__exit__",
            "duration_ms",
            "to_dict"
        ],
        "classes": [
            "Span"
        ],
        "variables": [
            "log",
            "_HAS_OTEL",
            "otel_trace",
            "Status",
            "StatusCode",
            "_HAS_OTEL",
            "start",
            "error_msg",
            "tracer"
        ]
    },
    "src/provide/foundation/file/permissions.py": {
        "imports": [
            "__future__",
            "pathlib",
            "provide.foundation.logger"
        ],
        "functions": [
            "parse_permissions",
            "format_permissions",
            "set_file_permissions",
            "get_permissions",
            "ensure_secure_permissions"
        ],
        "classes": [],
        "variables": [
            "log",
            "DEFAULT_FILE_PERMS",
            "DEFAULT_DIR_PERMS",
            "DEFAULT_EXECUTABLE_PERMS",
            "__all__",
            "perms_only",
            "cleaned",
            "mode",
            "cleaned",
            "mode",
            "mode",
            "cleaned"
        ]
    },
    "src/provide/foundation/file/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.file.alignment",
            "provide.foundation.file.atomic",
            "provide.foundation.file.directory",
            "provide.foundation.file.disk",
            "provide.foundation.file.formats",
            "provide.foundation.file.lock",
            "provide.foundation.file.operations",
            "provide.foundation.file.permissions",
            "provide.foundation.file.safe",
            "provide.foundation.file.temp",
            "provide.foundation.file.utils"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/file/formats.py": {
        "imports": [
            "__future__",
            "pathlib",
            "typing",
            "provide.foundation.file.atomic",
            "provide.foundation.file.safe",
            "provide.foundation.logger",
            "provide.foundation.serialization",
            "yaml",
            "yaml",
            "tomli_w"
        ],
        "functions": [
            "read_json",
            "write_json",
            "read_yaml",
            "write_yaml",
            "read_toml",
            "write_toml"
        ],
        "classes": [],
        "variables": [
            "log",
            "__all__",
            "content",
            "path",
            "content",
            "path",
            "content",
            "path",
            "content",
            "content",
            "content"
        ]
    },
    "src/provide/foundation/file/temp.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "contextlib",
            "contextlib",
            "pathlib",
            "shutil",
            "tempfile",
            "provide.foundation.config.defaults",
            "provide.foundation.errors.handlers",
            "provide.foundation.file.safe",
            "provide.foundation.logger"
        ],
        "functions": [
            "system_temp_dir",
            "secure_temp_file",
            "temp_file",
            "temp_dir"
        ],
        "classes": [],
        "variables": [
            "log",
            "temp_path",
            "temp_path",
            "dir",
            "temp_path",
            "dir",
            "temp_path"
        ]
    },
    "src/provide/foundation/file/lock.py": {
        "imports": [
            "__future__",
            "os",
            "pathlib",
            "socket",
            "threading",
            "time",
            "psutil",
            "provide.foundation.config.defaults",
            "provide.foundation.errors.resources",
            "provide.foundation.logger",
            "provide.foundation.serialization"
        ],
        "functions": [
            "__init__",
            "acquire",
            "release",
            "_check_stale_lock",
            "__enter__",
            "__exit__"
        ],
        "classes": [
            "FileLock"
        ],
        "variables": [
            "log",
            "__all__",
            "start_time",
            "end_time",
            "max_iterations",
            "iteration",
            "elapsed",
            "lock_pid",
            "lock_start_time",
            "current_time",
            "content",
            "lock_info",
            "proc",
            "proc_start_time",
            "elapsed",
            "fd",
            "elapsed",
            "lock_pid",
            "lock_start_time",
            "lock_info",
            "remaining",
            "sleep_time",
            "content",
            "lock_pid",
            "lock_pid",
            "proc",
            "lock_info",
            "owner_pid",
            "owner_pid",
            "owner_pid"
        ]
    },
    "src/provide/foundation/file/alignment.py": {
        "imports": [
            "__future__",
            "os"
        ],
        "functions": [
            "align_offset",
            "align_to_page",
            "is_aligned",
            "calculate_padding",
            "get_system_page_size",
            "is_power_of_two"
        ],
        "classes": [],
        "variables": [
            "DEFAULT_ALIGNMENT",
            "CACHE_LINE_SIZE",
            "PAGE_SIZE_4K",
            "PAGE_SIZE_16K",
            "__all__",
            "aligned"
        ]
    },
    "src/provide/foundation/file/utils.py": {
        "imports": [
            "__future__",
            "datetime",
            "pathlib",
            "shutil",
            "provide.foundation.logger"
        ],
        "functions": [
            "get_size",
            "get_mtime",
            "touch",
            "find_files",
            "backup_file"
        ],
        "classes": [],
        "variables": [
            "log",
            "__all__",
            "path",
            "path",
            "path",
            "root",
            "path",
            "pattern",
            "matches",
            "files",
            "ts",
            "backup_path",
            "backup_path",
            "counter",
            "backup_path"
        ]
    },
    "src/provide/foundation/file/safe.py": {
        "imports": [
            "__future__",
            "pathlib",
            "shutil",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.foundation"
        ],
        "functions": [
            "safe_read",
            "safe_read_text",
            "safe_delete",
            "safe_move",
            "safe_copy"
        ],
        "classes": [],
        "variables": [
            "_logger",
            "__all__",
            "path",
            "result",
            "path",
            "src",
            "dst",
            "src",
            "dst",
            "data"
        ]
    },
    "src/provide/foundation/file/atomic.py": {
        "imports": [
            "__future__",
            "contextlib",
            "os",
            "pathlib",
            "provide.foundation.logger",
            "tempfile"
        ],
        "functions": [
            "atomic_write",
            "atomic_write_text",
            "atomic_replace"
        ],
        "classes": [],
        "variables": [
            "log",
            "__all__",
            "path",
            "final_mode",
            "data",
            "path",
            "mode",
            "backup_path",
            "final_mode",
            "default_mode",
            "current_umask",
            "final_mode",
            "mode",
            "final_mode"
        ]
    },
    "src/provide/foundation/file/directory.py": {
        "imports": [
            "__future__",
            "pathlib",
            "shutil",
            "provide.foundation.errors.decorators",
            "provide.foundation.logger"
        ],
        "functions": [
            "ensure_dir",
            "ensure_parent_dir",
            "safe_rmtree"
        ],
        "classes": [],
        "variables": [
            "log",
            "__all__",
            "path",
            "file_path",
            "parent",
            "path"
        ]
    },
    "src/provide/foundation/file/disk.py": {
        "imports": [
            "__future__",
            "os",
            "pathlib",
            "provide.foundation.logger"
        ],
        "functions": [
            "get_available_space",
            "check_disk_space",
            "get_disk_usage",
            "format_bytes"
        ],
        "classes": [],
        "variables": [
            "log",
            "__all__",
            "check_path",
            "stat_result",
            "available",
            "check_path",
            "available",
            "required_gb",
            "available_gb",
            "check_path",
            "stat_result",
            "total",
            "free",
            "used",
            "error_msg"
        ]
    },
    "src/provide/foundation/file/quality/analyzer.py": {
        "imports": [
            "__future__",
            "collections",
            "datetime",
            "time",
            "typing",
            "provide.foundation.file.quality.metrics",
            "provide.foundation.file.quality.operation_scenarios",
            "provide.foundation.file.operations"
        ],
        "functions": [
            "__init__",
            "add_scenario",
            "run_analysis",
            "_collect_detection_data",
            "_calculate_metrics",
            "_calculate_accuracy",
            "_calculate_precision",
            "_calculate_recall",
            "_calculate_f1_score",
            "_analyze_confidence_distribution",
            "_analyze_detection_time",
            "_calculate_false_positive_rate",
            "_calculate_false_negative_rate",
            "generate_report"
        ],
        "classes": [
            "QualityAnalyzer"
        ],
        "variables": [
            "HAS_OPERATIONS_MODULE",
            "HAS_OPERATIONS_MODULE",
            "results",
            "detection_results",
            "timing_results",
            "results",
            "correct_detections",
            "total_detections",
            "accuracy",
            "true_positives",
            "false_positives",
            "precision",
            "true_positives",
            "false_negatives",
            "recall",
            "f1",
            "confidences",
            "confidence_by_type",
            "avg_confidence",
            "min_confidence",
            "max_confidence",
            "type_stats",
            "avg_time",
            "min_time",
            "max_time",
            "sorted_times",
            "n",
            "p50",
            "p95",
            "p99",
            "false_positives",
            "total_negative_cases",
            "fpr",
            "false_negatives",
            "total_positive_cases",
            "fnr",
            "report_lines",
            "metrics",
            "start_time",
            "detected_operations",
            "end_time",
            "detection_time",
            "scenario",
            "detected",
            "expected",
            "detected_types",
            "expected_types",
            "detected_counter",
            "expected_counter",
            "scenario",
            "detected",
            "expected",
            "detected_types",
            "expected_types",
            "expected_counter",
            "scenario",
            "detected",
            "expected",
            "detected_types",
            "expected_types",
            "detected_counter",
            "detected",
            "scenario",
            "detected",
            "expected",
            "scenario",
            "detected",
            "expected",
            "latest_results",
            "results",
            "detected_count",
            "confidence",
            "detected_types",
            "expected_types",
            "detected_counter",
            "precision",
            "recall"
        ]
    },
    "src/provide/foundation/file/quality/metrics.py": {
        "imports": [
            "__future__",
            "datetime",
            "enum",
            "typing",
            "attrs"
        ],
        "functions": [],
        "classes": [
            "AnalysisMetric",
            "QualityResult"
        ],
        "variables": [
            "ACCURACY",
            "PRECISION",
            "RECALL",
            "F1_SCORE",
            "CONFIDENCE_DISTRIBUTION",
            "DETECTION_TIME",
            "FALSE_POSITIVE_RATE",
            "FALSE_NEGATIVE_RATE"
        ]
    },
    "src/provide/foundation/file/quality/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.file.quality.analyzer",
            "provide.foundation.file.quality.operation_scenarios"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/file/quality/operation_scenarios.py": {
        "imports": [
            "__future__",
            "datetime",
            "pathlib",
            "typing",
            "attrs",
            "provide.foundation.file.operations.types"
        ],
        "functions": [
            "create_scenarios_from_patterns"
        ],
        "classes": [
            "OperationScenario"
        ],
        "variables": [
            "scenarios",
            "base_time",
            "vscode_events",
            "safe_write_events",
            "batch_events"
        ]
    },
    "src/provide/foundation/file/operations/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.file.operations.detectors",
            "provide.foundation.file.operations.types",
            "provide.foundation.file.operations.utils"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/file/operations/types.py": {
        "imports": [
            "__future__",
            "datetime",
            "enum",
            "pathlib",
            "typing",
            "attrs",
            "provide.foundation.config.defaults"
        ],
        "functions": [
            "timestamp",
            "sequence",
            "size_delta",
            "duration_ms",
            "event_count",
            "get_timeline"
        ],
        "classes": [
            "FileEventMetadata",
            "FileEvent",
            "OperationType",
            "FileOperation",
            "DetectorConfig"
        ],
        "variables": [
            "ATOMIC_SAVE",
            "SAFE_WRITE",
            "BATCH_UPDATE",
            "RENAME_SEQUENCE",
            "BACKUP_CREATE",
            "BUILD_OUTPUT",
            "VCS_OPERATION",
            "SYNC_OPERATION",
            "ARCHIVE_EXTRACT",
            "TEMP_CLEANUP",
            "UNKNOWN"
        ]
    },
    "src/provide/foundation/file/operations/utils.py": {
        "imports": [
            "__future__",
            "pathlib",
            "provide.foundation.file.operations.types",
            "provide.foundation.file.operations.detectors.orchestrator",
            "provide.foundation.file.operations.detectors.helpers",
            "provide.foundation.file.operations.detectors.helpers",
            "provide.foundation.file.operations.detectors.orchestrator"
        ],
        "functions": [
            "detect_atomic_save",
            "is_temp_file",
            "extract_original_path",
            "group_related_events"
        ],
        "classes": [],
        "variables": [
            "detector",
            "operations",
            "base_name",
            "config",
            "detector"
        ]
    },
    "src/provide/foundation/file/operations/detectors/simple.py": {
        "imports": [
            "__future__",
            "pathlib",
            "provide.foundation.file.operations.detectors.helpers",
            "provide.foundation.file.operations.types",
            "provide.foundation.logger"
        ],
        "functions": [
            "detect_same_file_delete_create_pattern",
            "detect_simple_operation",
            "detect_direct_modification"
        ],
        "classes": [
            "SimpleOperationDetector"
        ],
        "variables": [
            "log",
            "path_groups",
            "event",
            "type_mapping",
            "operation_type",
            "is_backup_path",
            "first_event",
            "sorted_events",
            "event_types",
            "is_all_modifies",
            "is_create_then_modifies",
            "path_str",
            "primary_path",
            "metadata",
            "primary_path",
            "metadata",
            "op_type",
            "description",
            "op_type",
            "description",
            "delete_event",
            "create_event",
            "time_diff"
        ]
    },
    "src/provide/foundation/file/operations/detectors/registry.py": {
        "imports": [
            "__future__",
            "provide.foundation.file.operations.detectors.protocol",
            "provide.foundation.hub.registry"
        ],
        "functions": [
            "get_detector_registry",
            "register_detector",
            "get_all_detectors",
            "clear_detector_registry"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "registry",
            "registry",
            "entries",
            "sorted_entries",
            "registry",
            "_detector_registry"
        ]
    },
    "src/provide/foundation/file/operations/detectors/protocol.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.file.operations.types"
        ],
        "functions": [
            "__call__"
        ],
        "classes": [
            "DetectorFunc"
        ],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/file/operations/detectors/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.file.operations.detectors.atomic",
            "provide.foundation.file.operations.detectors.batch",
            "provide.foundation.file.operations.detectors.orchestrator",
            "provide.foundation.file.operations.detectors.protocol",
            "provide.foundation.file.operations.detectors.registry",
            "provide.foundation.file.operations.detectors.simple",
            "provide.foundation.file.operations.detectors.temp"
        ],
        "functions": [
            "_auto_register_builtin_detectors"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "registry",
            "temp_detector",
            "atomic_detector",
            "batch_detector",
            "simple_detector"
        ]
    },
    "src/provide/foundation/file/operations/detectors/orchestrator.py": {
        "imports": [
            "__future__",
            "datetime",
            "pathlib",
            "typing",
            "provide.foundation.file.operations.detectors.auto_flush",
            "provide.foundation.file.operations.detectors.helpers",
            "provide.foundation.file.operations.detectors.registry",
            "provide.foundation.file.operations.types",
            "provide.foundation.logger",
            "attrs"
        ],
        "functions": [
            "__init__",
            "detect",
            "detect_streaming",
            "add_event",
            "flush",
            "_flush_pending",
            "_group_events_by_time",
            "_analyze_event_group",
            "_find_real_file_from_events"
        ],
        "classes": [
            "OperationDetector"
        ],
        "variables": [
            "log",
            "sorted_events",
            "event_groups",
            "operations",
            "now",
            "time_since_last",
            "operations",
            "operation",
            "groups",
            "current_group",
            "group_start_time",
            "detectors",
            "best_operation",
            "best_confidence",
            "HIGH_CONFIDENCE_THRESHOLD",
            "operation",
            "operation",
            "time_diff",
            "base_name",
            "current_group",
            "group_start_time",
            "operation",
            "real_file",
            "base_name",
            "real_path",
            "best_operation",
            "best_confidence",
            "best_operation",
            "real_path"
        ]
    },
    "src/provide/foundation/file/operations/detectors/temp.py": {
        "imports": [
            "__future__",
            "pathlib",
            "provide.foundation.file.operations.detectors.helpers",
            "provide.foundation.file.operations.types",
            "provide.foundation.logger"
        ],
        "functions": [
            "detect_temp_rename_pattern",
            "detect_delete_temp_pattern",
            "detect_temp_modify_pattern",
            "detect_temp_create_delete_pattern"
        ],
        "classes": [
            "TempPatternDetector"
        ],
        "variables": [
            "log",
            "temp_groups",
            "temp_files",
            "real_files",
            "current",
            "next_event",
            "time_diff",
            "delete_event",
            "temp_create",
            "temp_rename",
            "time_span",
            "path_str",
            "temp_path",
            "rename_events",
            "path_str",
            "path_str",
            "temp_path",
            "base_name",
            "rename_event",
            "all_events",
            "time_span",
            "real_path",
            "real_path_str",
            "final_path",
            "real_events",
            "time_span",
            "all_events"
        ]
    },
    "src/provide/foundation/file/operations/detectors/batch.py": {
        "imports": [
            "__future__",
            "collections",
            "provide.foundation.file.operations.detectors.helpers",
            "provide.foundation.file.operations.types",
            "provide.foundation.logger"
        ],
        "functions": [
            "detect_rename_sequence",
            "detect_batch_update",
            "detect_backup_create",
            "_files_are_related",
            "_longest_common_prefix",
            "_determine_batch_operation_type"
        ],
        "classes": [
            "BatchOperationDetector"
        ],
        "variables": [
            "log",
            "move_events",
            "chains",
            "directory_groups",
            "paths",
            "extensions",
            "names",
            "min_len",
            "common_prefix",
            "most_common_type",
            "type_mapping",
            "chain",
            "current_src",
            "current_dest",
            "longest_chain",
            "final_path",
            "time_span",
            "move_event",
            "create_event",
            "common_prefix_len",
            "char",
            "time_diff",
            "current_src",
            "current_dest"
        ]
    },
    "src/provide/foundation/file/operations/detectors/auto_flush.py": {
        "imports": [
            "__future__",
            "asyncio",
            "datetime",
            "threading",
            "typing",
            "provide.foundation.file.operations.detectors.helpers",
            "provide.foundation.file.operations.types",
            "provide.foundation.logger",
            "provide.foundation.file.operations.detectors.types",
            "provide.foundation.file.operations.types"
        ],
        "functions": [
            "__init__",
            "add_event",
            "schedule_flush",
            "_schedule_auto_flush",
            "_auto_flush",
            "_emit_operation_safe",
            "_handle_detected_operation",
            "_handle_no_operation",
            "_emit_individual_events",
            "_create_single_event_operation",
            "pending_events",
            "clear",
            "retry_failed_operations",
            "failed_operations_count",
            "get_failed_operations",
            "clear_failed_operations"
        ],
        "classes": [
            "AutoFlushHandler"
        ],
        "variables": [
            "log",
            "has_real_file",
            "operation_event_ids",
            "remaining_events",
            "emitted_count",
            "hidden_count",
            "is_temp",
            "loop",
            "event_summary",
            "operation",
            "is_temp_source",
            "is_temp_dest",
            "is_temp_source",
            "is_temp_dest",
            "retry_count",
            "remaining",
            "count",
            "operation",
            "single_op",
            "single_op",
            "op_id"
        ]
    },
    "src/provide/foundation/file/operations/detectors/atomic.py": {
        "imports": [
            "__future__",
            "provide.foundation.file.operations.detectors.helpers",
            "provide.foundation.file.operations.types",
            "provide.foundation.logger"
        ],
        "functions": [
            "detect_atomic_save",
            "detect_safe_write"
        ],
        "classes": [
            "AtomicOperationDetector"
        ],
        "variables": [
            "log",
            "backup_events",
            "regular_events",
            "current",
            "next_event",
            "base_name",
            "backup_parent",
            "expected_original",
            "matching_events",
            "target_path",
            "related_events",
            "original_event",
            "all_events"
        ]
    },
    "src/provide/foundation/file/operations/detectors/helpers.py": {
        "imports": [
            "__future__",
            "pathlib",
            "re"
        ],
        "functions": [
            "is_temp_file",
            "is_backup_file",
            "extract_base_name",
            "find_real_file_from_events"
        ],
        "classes": [],
        "variables": [
            "name",
            "temp_patterns",
            "name",
            "backup_patterns",
            "name",
            "base_name",
            "vscode_pattern",
            "vim_dotfile_pattern",
            "match",
            "vim_swap_pattern",
            "match",
            "suffixes_to_remove",
            "prefixes_to_remove",
            "base_name",
            "base_name",
            "base_name",
            "filename",
            "filename",
            "base_name",
            "base_name",
            "base_name",
            "base_name",
            "real_path",
            "real_path"
        ]
    },
    "src/provide/foundation/serialization/toml.py": {
        "imports": [
            "__future__",
            "tomllib",
            "typing",
            "provide.foundation.serialization.cache",
            "provide.foundation.errors",
            "provide.foundation.errors",
            "provide.foundation.errors",
            "tomli_w"
        ],
        "functions": [
            "toml_dumps",
            "toml_loads"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "cache_key",
            "cached",
            "result",
            "cache_key"
        ]
    },
    "src/provide/foundation/serialization/cache.py": {
        "imports": [
            "__future__",
            "hashlib",
            "typing",
            "provide.foundation.utils.caching",
            "provide.foundation.utils.environment",
            "provide.foundation.utils.caching"
        ],
        "functions": [
            "_get_cache_config",
            "get_cache_enabled",
            "get_cache_size",
            "get_serialization_cache",
            "get_cache_key"
        ],
        "classes": [],
        "variables": [
            "CACHE_ENABLED",
            "CACHE_SIZE",
            "serialization_cache",
            "__all__",
            "content_hash",
            "_CACHE_ENABLED",
            "_CACHE_SIZE",
            "_serialization_cache"
        ]
    },
    "src/provide/foundation/serialization/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.serialization.core"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/serialization/yaml.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.serialization.cache",
            "provide.foundation.errors",
            "provide.foundation.errors",
            "provide.foundation.errors",
            "yaml",
            "yaml"
        ],
        "functions": [
            "yaml_dumps",
            "yaml_loads"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "cache_key",
            "cached",
            "result",
            "cache_key"
        ]
    },
    "src/provide/foundation/serialization/env.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.serialization.cache",
            "provide.foundation.errors",
            "provide.foundation.errors",
            "provide.foundation.errors",
            "provide.foundation.errors"
        ],
        "functions": [
            "env_dumps",
            "_parse_env_line",
            "env_loads"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "line",
            "key",
            "value",
            "value",
            "cache_key",
            "cached",
            "cache_key",
            "value_str",
            "parsed",
            "value_str"
        ]
    },
    "src/provide/foundation/serialization/core.py": {
        "imports": [
            "__future__",
            "provide.foundation.serialization.cache",
            "provide.foundation.serialization.env",
            "provide.foundation.serialization.ini",
            "provide.foundation.serialization.json",
            "provide.foundation.serialization.toml",
            "provide.foundation.serialization.yaml"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/serialization/ini.py": {
        "imports": [
            "__future__",
            "configparser",
            "io",
            "typing",
            "provide.foundation.serialization.cache",
            "provide.foundation.errors",
            "provide.foundation.errors",
            "provide.foundation.errors"
        ],
        "functions": [
            "ini_dumps",
            "ini_loads"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "parser",
            "parser",
            "output",
            "cache_key",
            "cached",
            "cache_key"
        ]
    },
    "src/provide/foundation/serialization/json.py": {
        "imports": [
            "__future__",
            "json",
            "typing",
            "provide.foundation.serialization.cache",
            "provide.foundation.errors",
            "provide.foundation.errors"
        ],
        "functions": [
            "json_dumps",
            "json_loads"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "cache_key",
            "cached",
            "result",
            "cache_key"
        ]
    },
    "src/provide/foundation/observability/__init__.py": {
        "imports": [
            "__future__",
            "contextlib",
            "typing",
            "opentelemetry",
            "provide.foundation.utils.stubs",
            "provide.foundation.integrations.openobserve",
            "provide.foundation.integrations.openobserve.commands",
            "provide.foundation.utils.stubs"
        ],
        "functions": [
            "is_openobserve_available"
        ],
        "classes": [],
        "variables": [
            "otel_trace",
            "__all__",
            "_HAS_OTEL",
            "OpenObserveClient",
            "search_logs",
            "stream_logs",
            "_otel_trace_module",
            "_HAS_OTEL",
            "OpenObserveClient",
            "search_logs",
            "stream_logs"
        ]
    },
    "src/provide/foundation/transport/middleware.py": {
        "imports": [
            "__future__",
            "abc",
            "collections.abc",
            "time",
            "attrs",
            "provide.foundation.hub",
            "provide.foundation.logger",
            "provide.foundation.metrics",
            "provide.foundation.resilience.retry",
            "provide.foundation.security",
            "provide.foundation.transport.base",
            "provide.foundation.transport.defaults",
            "provide.foundation.transport.errors"
        ],
        "functions": [
            "register_middleware",
            "get_middleware_by_category",
            "create_default_pipeline",
            "_register_builtin_middleware",
            "_get_status_emoji",
            "add",
            "remove"
        ],
        "classes": [
            "Middleware",
            "LoggingMiddleware",
            "RetryMiddleware",
            "MetricsMiddleware",
            "MiddlewarePipeline"
        ],
        "variables": [
            "log",
            "__all__",
            "_request_counter",
            "_request_duration",
            "_error_counter",
            "registry",
            "registry",
            "middleware",
            "pipeline",
            "uri_str",
            "executor",
            "method",
            "error_type",
            "retry_policy",
            "uri_str",
            "uri_str",
            "status_emoji",
            "uri_str",
            "response",
            "start_time",
            "duration",
            "method",
            "status_class",
            "request",
            "response",
            "error",
            "priority",
            "uri_str",
            "headers",
            "headers",
            "body_str",
            "uri_str",
            "headers",
            "headers"
        ]
    },
    "src/provide/foundation/transport/cache.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "typing",
            "attrs",
            "provide.foundation.logger",
            "provide.foundation.transport.defaults",
            "provide.foundation.transport.errors"
        ],
        "functions": [
            "record_success",
            "record_failure",
            "failure_rate",
            "mark_success",
            "mark_failure",
            "evict",
            "get_health",
            "clear",
            "is_evicted"
        ],
        "classes": [
            "TransportHealth",
            "TransportCache"
        ],
        "variables": [
            "log",
            "__all__",
            "health",
            "transports",
            "transport"
        ]
    },
    "src/provide/foundation/transport/config.py": {
        "imports": [
            "__future__",
            "attrs",
            "provide.foundation.transport",
            "provide.foundation.config.base",
            "provide.foundation.config.converters",
            "provide.foundation.config.env",
            "provide.foundation.config.loader",
            "provide.foundation.config.manager",
            "provide.foundation.logger"
        ],
        "functions": [
            "register_transport_configs"
        ],
        "classes": [
            "TransportConfig",
            "HTTPConfig"
        ],
        "variables": [
            "log",
            "__all__"
        ]
    },
    "src/provide/foundation/transport/registry.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.hub",
            "provide.foundation.hub.components",
            "provide.foundation.logger",
            "provide.foundation.transport.base",
            "provide.foundation.transport.errors",
            "provide.foundation.transport.types"
        ],
        "functions": [
            "register_transport",
            "get_transport_for_scheme",
            "get_transport",
            "list_registered_transports",
            "get_transport_info"
        ],
        "classes": [],
        "variables": [
            "log",
            "__all__",
            "registry",
            "registry",
            "scheme",
            "transport_class",
            "registry",
            "transports",
            "registry",
            "schemes",
            "schemes",
            "schemes"
        ]
    },
    "src/provide/foundation/transport/client.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "typing",
            "attrs",
            "provide.foundation.logger",
            "provide.foundation.transport.base",
            "provide.foundation.transport.cache",
            "provide.foundation.transport.errors",
            "provide.foundation.transport.middleware",
            "provide.foundation.transport.registry",
            "provide.foundation.transport.types"
        ],
        "functions": [
            "get_default_client",
            "reset_transport_cache",
            "_factory"
        ],
        "classes": [
            "UniversalClient"
        ],
        "variables": [
            "log",
            "__all__",
            "client",
            "client",
            "client",
            "client",
            "client",
            "client",
            "client",
            "client",
            "client",
            "request_headers",
            "request",
            "request",
            "request",
            "transport",
            "transports",
            "_default_client",
            "method",
            "transport",
            "response",
            "response",
            "method",
            "e"
        ]
    },
    "src/provide/foundation/transport/errors.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.errors.base",
            "provide.foundation.transport.base"
        ],
        "functions": [
            "__init__",
            "__init__",
            "__init__",
            "__init__"
        ],
        "classes": [
            "TransportError",
            "TransportConnectionError",
            "TransportTimeoutError",
            "HTTPResponseError",
            "TransportConfigurationError",
            "TransportNotFoundError",
            "TransportCacheEvictedError"
        ],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/transport/defaults.py": {
        "imports": [
            "__future__"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "DEFAULT_TRANSPORT_TIMEOUT",
            "DEFAULT_TRANSPORT_MAX_RETRIES",
            "DEFAULT_TRANSPORT_RETRY_BACKOFF_FACTOR",
            "DEFAULT_TRANSPORT_VERIFY_SSL",
            "DEFAULT_HTTP_POOL_CONNECTIONS",
            "DEFAULT_HTTP_POOL_MAXSIZE",
            "DEFAULT_HTTP_FOLLOW_REDIRECTS",
            "DEFAULT_HTTP_USE_HTTP2",
            "DEFAULT_HTTP_MAX_REDIRECTS",
            "DEFAULT_TRANSPORT_LOG_REQUESTS",
            "DEFAULT_TRANSPORT_LOG_RESPONSES",
            "DEFAULT_TRANSPORT_LOG_BODIES",
            "DEFAULT_TRANSPORT_FAILURE_THRESHOLD",
            "__all__"
        ]
    },
    "src/provide/foundation/transport/base.py": {
        "imports": [
            "__future__",
            "abc",
            "collections.abc",
            "typing",
            "attrs",
            "provide.foundation.logger",
            "provide.foundation.serialization",
            "provide.foundation.transport.types",
            "provide.foundation.transport.errors"
        ],
        "functions": [
            "transport_type",
            "base_url",
            "is_success",
            "json",
            "text",
            "raise_for_status",
            "supports",
            "__init__",
            "supports"
        ],
        "classes": [
            "Request",
            "Response",
            "Transport",
            "TransportBase"
        ],
        "variables": [
            "log",
            "__all__",
            "scheme",
            "parts"
        ]
    },
    "src/provide/foundation/transport/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.transport.base",
            "provide.foundation.transport.client",
            "provide.foundation.transport.config",
            "provide.foundation.transport.errors",
            "provide.foundation.transport.middleware",
            "provide.foundation.transport.registry",
            "provide.foundation.transport.types",
            "provide.foundation.transport.http",
            "provide.foundation.utils.stubs"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__",
            "_HAS_HTTPX",
            "_HAS_HTTPX",
            "HTTPTransport"
        ]
    },
    "src/provide/foundation/transport/types.py": {
        "imports": [
            "__future__",
            "enum",
            "typing"
        ],
        "functions": [],
        "classes": [
            "TransportType",
            "HTTPMethod"
        ],
        "variables": [
            "__all__",
            "HTTP",
            "HTTPS",
            "WS",
            "WSS",
            "GRPC",
            "GRAPHQL",
            "AMQP",
            "MQTT",
            "GET",
            "POST",
            "PUT",
            "PATCH",
            "DELETE",
            "HEAD",
            "OPTIONS"
        ]
    },
    "src/provide/foundation/transport/http.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "time",
            "typing",
            "attrs",
            "httpx",
            "provide.foundation.logger",
            "provide.foundation.security",
            "provide.foundation.transport.base",
            "provide.foundation.transport.config",
            "provide.foundation.transport.errors",
            "provide.foundation.transport.types",
            "provide.foundation.transport.registry"
        ],
        "functions": [
            "_register_http_transport",
            "supports",
            "_get_status_emoji"
        ],
        "classes": [
            "HTTPTransport"
        ],
        "variables": [
            "log",
            "_http_transport_registered",
            "__all__",
            "limits",
            "timeout",
            "sanitized_uri",
            "start_time",
            "sanitized_uri",
            "_http_transport_registered",
            "json_data",
            "data",
            "request_kwargs",
            "httpx_response",
            "elapsed_ms",
            "status_emoji",
            "response",
            "stream_kwargs",
            "elapsed_ms",
            "status_emoji",
            "json_data",
            "data",
            "json_data"
        ]
    },
    "src/provide/foundation/logger/constants.py": {
        "imports": [
            "__future__",
            "logging",
            "provide.foundation.logger.trace",
            "provide.foundation.logger.types"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "CRITICAL_LEVEL",
            "ERROR_LEVEL",
            "WARNING_LEVEL",
            "INFO_LEVEL",
            "DEBUG_LEVEL",
            "TRACE_LEVEL",
            "NOTSET_LEVEL",
            "DEFAULT_FALLBACK_LEVEL",
            "DEFAULT_FALLBACK_NUMERIC",
            "VALID_LEVEL_NAMES",
            "__all__"
        ]
    },
    "src/provide/foundation/logger/defaults.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.logger.config.logging",
            "provide.foundation.logger.config.logging"
        ],
        "functions": [
            "default_module_levels",
            "default_rate_limits",
            "default_logging_config"
        ],
        "classes": [],
        "variables": [
            "DEFAULT_LOG_LEVEL",
            "DEFAULT_CONSOLE_FORMATTER",
            "DEFAULT_LOGGER_NAME_EMOJI_ENABLED",
            "DEFAULT_DAS_EMOJI_ENABLED",
            "DEFAULT_OMIT_TIMESTAMP",
            "DEFAULT_FOUNDATION_SETUP_LOG_LEVEL",
            "DEFAULT_FOUNDATION_LOG_OUTPUT",
            "DEFAULT_RATE_LIMIT_ENABLED",
            "DEFAULT_RATE_LIMIT_EMIT_WARNINGS",
            "DEFAULT_RATE_LIMIT_GLOBAL",
            "DEFAULT_RATE_LIMIT_GLOBAL_CAPACITY",
            "DEFAULT_RATE_LIMIT_OVERFLOW_POLICY",
            "DEFAULT_SANITIZATION_ENABLED",
            "DEFAULT_SANITIZATION_MASK_PATTERNS",
            "DEFAULT_SANITIZATION_SANITIZE_DICTS",
            "DEFAULT_FALLBACK_LOG_LEVEL",
            "DEFAULT_FALLBACK_LOG_LEVEL_NUMERIC",
            "__all__"
        ]
    },
    "src/provide/foundation/logger/base.py": {
        "imports": [
            "__future__",
            "provide.foundation.logger.core",
            "provide.foundation.logger.factories"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/logger/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.logger",
            "provide.foundation.logger.base",
            "provide.foundation.logger.config"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/logger/types.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.logger.trace"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "LogLevelStr",
            "ConsoleFormatterStr",
            "__all__"
        ]
    },
    "src/provide/foundation/logger/core.py": {
        "imports": [
            "__future__",
            "contextlib",
            "typing",
            "structlog",
            "provide.foundation.concurrency.locks",
            "provide.foundation.logger.types",
            "provide.foundation.logger.config",
            "provide.foundation.hub.manager",
            "provide.foundation.logger.setup.coordinator",
            "provide.foundation.utils.streams",
            "provide.foundation.logger.setup.coordinator"
        ],
        "functions": [
            "get_global_logger",
            "__init__",
            "setup",
            "_check_structlog_already_disabled",
            "_try_hub_configuration",
            "_should_use_emergency_fallback",
            "_perform_locked_setup",
            "_ensure_configured",
            "_perform_lazy_setup",
            "_setup_emergency_fallback",
            "get_logger",
            "_log_with_level",
            "_format_message_with_args",
            "trace",
            "debug",
            "info",
            "warning",
            "error",
            "exception",
            "critical",
            "bind",
            "unbind",
            "try_unbind",
            "__setattr__",
            "__getattr__",
            "debug",
            "info",
            "warning",
            "error",
            "critical",
            "exception",
            "__setattr__",
            "__call__"
        ],
        "classes": [
            "FoundationLogger",
            "GlobalLoggerProxy"
        ],
        "variables": [
            "logger",
            "hub",
            "logger_instance",
            "effective_name",
            "logger_name",
            "log",
            "formatted_event",
            "formatted_event",
            "formatted_event",
            "formatted_event",
            "formatted_event",
            "formatted_event",
            "formatted_event",
            "log",
            "log",
            "log",
            "current_config",
            "config",
            "logger"
        ]
    },
    "src/provide/foundation/logger/factories.py": {
        "imports": [
            "__future__",
            "threading",
            "typing",
            "structlog",
            "structlog",
            "provide.foundation.hub.manager",
            "structlog"
        ],
        "functions": [
            "get_logger"
        ],
        "classes": [],
        "variables": [
            "_is_initializing",
            "_MAX_RECURSION_DEPTH",
            "depth",
            "hub"
        ]
    },
    "src/provide/foundation/logger/levels.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.logger.constants",
            "provide.foundation.logger.types"
        ],
        "functions": [
            "normalize_level",
            "get_numeric_level",
            "is_valid_level",
            "get_fallback_level",
            "get_fallback_numeric"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "normalized",
            "normalized",
            "fallback"
        ]
    },
    "src/provide/foundation/logger/trace.py": {
        "imports": [
            "__future__",
            "logging",
            "typing",
            "structlog",
            "provide.foundation.streams.console",
            "sys"
        ],
        "functions": [
            "trace",
            "trace_for_print_logger"
        ],
        "classes": [],
        "variables": [
            "formatted_msg",
            "formatted_msg",
            "formatted_msg"
        ]
    },
    "src/provide/foundation/logger/custom_processors.py": {
        "imports": [
            "__future__",
            "logging",
            "typing",
            "structlog",
            "provide.foundation.logger.constants",
            "provide.foundation.logger.levels",
            "provide.foundation.logger.types"
        ],
        "functions": [
            "add_log_level_custom",
            "filter_by_level_custom",
            "_compute_emoji_for_logger_name",
            "add_logger_name_emoji_prefix",
            "get_emoji_cache_stats",
            "clear_emoji_cache",
            "__call__",
            "__init__",
            "__call__"
        ],
        "classes": [
            "StructlogProcessor",
            "_LevelFilter"
        ],
        "variables": [
            "logger_name",
            "event_msg",
            "event_level_str_from_dict",
            "normalized_level",
            "chosen_emoji",
            "chosen_emoji",
            "threshold_num_level"
        ]
    },
    "src/provide/foundation/logger/config/logging.py": {
        "imports": [
            "__future__",
            "pathlib",
            "attrs",
            "provide.foundation.config.base",
            "provide.foundation.config.converters",
            "provide.foundation.config.defaults",
            "provide.foundation.config.env",
            "provide.foundation.logger.defaults",
            "provide.foundation.logger.types"
        ],
        "functions": [],
        "classes": [
            "LoggingConfig"
        ],
        "variables": []
    },
    "src/provide/foundation/logger/config/base.py": {
        "imports": [
            "__future__",
            "os",
            "sys",
            "typing",
            "structlog",
            "provide.foundation.utils.streams"
        ],
        "functions": [
            "get_config_logger"
        ],
        "classes": [],
        "variables": [
            "foundation_output",
            "output_stream",
            "config",
            "output_stream"
        ]
    },
    "src/provide/foundation/logger/config/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.logger.config.logging",
            "provide.foundation.logger.config.telemetry"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/logger/config/telemetry.py": {
        "imports": [
            "__future__",
            "os",
            "attrs",
            "provide.foundation.config.base",
            "provide.foundation.config.converters",
            "provide.foundation.logger.defaults",
            "provide.foundation.telemetry.defaults",
            "provide.foundation.config.env",
            "provide.foundation.logger.config.logging",
            "provide.foundation.integrations.openobserve.config",
            "attrs"
        ],
        "functions": [
            "_get_service_name",
            "from_env",
            "_auto_configure_openobserve_otlp",
            "get_otlp_headers_dict"
        ],
        "classes": [
            "TelemetryConfig"
        ],
        "variables": [
            "config",
            "config",
            "oo_config",
            "otlp_endpoint",
            "otlp_headers"
        ]
    },
    "src/provide/foundation/logger/setup/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.logger.setup.coordinator"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/logger/setup/processors.py": {
        "imports": [
            "__future__",
            "typing",
            "structlog",
            "provide.foundation.logger.config",
            "provide.foundation.logger.processors",
            "provide.foundation.streams.config"
        ],
        "functions": [
            "build_complete_processor_chain",
            "apply_structlog_configuration",
            "configure_structlog_output",
            "handle_globally_disabled_setup"
        ],
        "classes": [],
        "variables": [
            "core_processors",
            "formatter_processors",
            "stream_config",
            "cache_loggers",
            "processors"
        ]
    },
    "src/provide/foundation/logger/setup/coordinator.py": {
        "imports": [
            "__future__",
            "logging",
            "typing",
            "structlog",
            "provide.foundation.logger.config",
            "provide.foundation.logger.core",
            "provide.foundation.logger.setup.processors",
            "provide.foundation.streams",
            "provide.foundation.utils.streams",
            "logging",
            "sys",
            "provide.foundation.logger.processors.otlp",
            "provide.foundation.streams.file",
            "provide.foundation.integrations.openobserve.config"
        ],
        "functions": [
            "get_foundation_log_level",
            "create_foundation_internal_logger",
            "reset_setup_logger_cache",
            "reset_foundation_log_level_cache",
            "reset_coordinator_state",
            "_configure_stdlib_module_logging",
            "get_system_logger",
            "internal_setup"
        ],
        "classes": [],
        "variables": [
            "_CORE_SETUP_LOGGER_NAME",
            "_EXPLICIT_SETUP_DONE",
            "_CACHED_SETUP_LOGGER",
            "_CACHED_SETUP_LOGGER",
            "_FOUNDATION_LOG_LEVEL",
            "slog",
            "current_config",
            "core_setup_logger",
            "level_str",
            "valid_levels",
            "temp_config",
            "level_str",
            "valid_levels",
            "_FOUNDATION_LOG_LEVEL",
            "_CACHED_SETUP_LOGGER",
            "foundation_stream",
            "module_logger",
            "numeric_level",
            "log_level",
            "stream",
            "handler",
            "formatter",
            "foundation_stream",
            "output",
            "temp_config",
            "output",
            "oo_config"
        ]
    },
    "src/provide/foundation/logger/ratelimit/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.logger.ratelimit.limiters",
            "provide.foundation.logger.ratelimit.processor",
            "provide.foundation.logger.ratelimit.queue_limiter"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/logger/ratelimit/queue_limiter.py": {
        "imports": [
            "__future__",
            "collections",
            "sys",
            "threading",
            "time",
            "typing"
        ],
        "functions": [
            "__init__",
            "_estimate_size",
            "_refill_tokens",
            "enqueue",
            "_process_queue",
            "_process_item",
            "get_stats",
            "shutdown",
            "__init__",
            "is_allowed",
            "get_dropped_samples",
            "get_stats"
        ],
        "classes": [
            "QueuedRateLimiter",
            "BufferedRateLimiter"
        ],
        "variables": [
            "now",
            "elapsed",
            "tokens_to_add",
            "now",
            "elapsed",
            "stats",
            "item_size",
            "tokens_to_add",
            "item",
            "old_item"
        ]
    },
    "src/provide/foundation/logger/ratelimit/limiters.py": {
        "imports": [
            "__future__",
            "asyncio",
            "threading",
            "time",
            "typing",
            "provide.foundation.logger.ratelimit.queue_limiter",
            "provide.foundation.logger.ratelimit.queue_limiter"
        ],
        "functions": [
            "__init__",
            "is_allowed",
            "get_stats",
            "__init__",
            "__new__",
            "__init__",
            "configure",
            "is_allowed",
            "get_stats"
        ],
        "classes": [
            "SyncRateLimiter",
            "AsyncRateLimiter",
            "GlobalRateLimiter"
        ],
        "variables": [
            "_instance",
            "_lock",
            "now",
            "elapsed",
            "now",
            "elapsed",
            "tokens_to_add",
            "tokens_to_add"
        ]
    },
    "src/provide/foundation/logger/ratelimit/processor.py": {
        "imports": [
            "__future__",
            "time",
            "typing",
            "structlog",
            "provide.foundation.logger.ratelimit.limiters",
            "provide.foundation.logger"
        ],
        "functions": [
            "create_rate_limiter_processor",
            "__init__",
            "__call__",
            "_emit_summary"
        ],
        "classes": [
            "RateLimiterProcessor"
        ],
        "variables": [
            "processor",
            "use_buffered",
            "logger_name",
            "now",
            "stats",
            "global_stats",
            "total_denied",
            "total_suppressed",
            "summary_logger",
            "total_allowed",
            "total_attempts",
            "denial_rate",
            "now",
            "last_warning"
        ]
    },
    "src/provide/foundation/logger/processors/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.logger.processors.main",
            "provide.foundation.logger.processors.trace"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/logger/processors/main.py": {
        "imports": [
            "__future__",
            "typing",
            "structlog",
            "provide.foundation.logger.config",
            "provide.foundation.logger.constants",
            "provide.foundation.logger.custom_processors",
            "provide.foundation.logger.processors.trace",
            "provide.foundation.serialization",
            "provide.foundation.logger.processors.sanitization",
            "provide.foundation.logger.processors.otlp",
            "provide.foundation.logger.ratelimit",
            "provide.foundation.eventsets.registry",
            "provide.foundation.eventsets.resolver",
            "provide.foundation.logger.setup.coordinator",
            "provide.foundation.logger.setup.coordinator"
        ],
        "functions": [
            "_config_create_service_name_processor",
            "_config_create_timestamp_processors",
            "_config_create_event_enrichment_processors",
            "set_reset_in_progress",
            "reset_event_enrichment_state",
            "_build_core_processors_list",
            "_config_create_json_formatter_processors",
            "_config_create_keyvalue_formatter_processors",
            "_build_formatter_processors_list",
            "processor",
            "pop_logger_name_processor",
            "pop_timestamp_processor",
            "add_event_enrichment_processor"
        ],
        "classes": [],
        "variables": [
            "_event_enrichment_initialized",
            "_reset_in_progress",
            "_reset_in_progress",
            "_event_enrichment_initialized",
            "log_cfg",
            "is_tty",
            "sanitization_processor",
            "otlp_processor",
            "rate_limiter_processor",
            "resolver",
            "setup_logger",
            "setup_logger",
            "_event_enrichment_initialized"
        ]
    },
    "src/provide/foundation/logger/processors/sanitization.py": {
        "imports": [
            "__future__",
            "typing",
            "structlog",
            "provide.foundation.security"
        ],
        "functions": [
            "create_sanitization_processor",
            "sanitization_processor"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "sanitized"
        ]
    },
    "src/provide/foundation/logger/processors/otlp.py": {
        "imports": [
            "__future__",
            "contextlib",
            "typing",
            "opentelemetry.exporter.otlp.proto.http._log_exporter",
            "opentelemetry.sdk._logs",
            "opentelemetry.sdk._logs.export",
            "opentelemetry.sdk.resources",
            "opentelemetry.semconv.resource",
            "datetime",
            "provide.foundation.integrations.openobserve.config",
            "base64",
            "opentelemetry.sdk._logs"
        ],
        "functions": [
            "_convert_timestamp_to_nanos",
            "_build_otlp_headers",
            "create_otlp_processor",
            "flush_otlp_logs",
            "reset_otlp_provider",
            "otlp_processor"
        ],
        "classes": [],
        "variables": [
            "_HAS_OTEL",
            "headers",
            "_HAS_OTEL",
            "LoggerProvider",
            "BatchLogRecordProcessor",
            "OTLPLogExporter",
            "Resource",
            "ResourceAttributes",
            "dt",
            "oo_config",
            "otlp_logger",
            "SEVERITY_MAP",
            "_OTLP_LOGGER_PROVIDER",
            "auth_str",
            "auth_bytes",
            "auth_b64",
            "resource_attrs",
            "resource",
            "logs_endpoint",
            "headers",
            "exporter",
            "_OTLP_LOGGER_PROVIDER",
            "logs_endpoint",
            "message",
            "level",
            "attributes",
            "timestamp",
            "log_record"
        ]
    },
    "src/provide/foundation/logger/processors/trace.py": {
        "imports": [
            "__future__",
            "typing",
            "structlog",
            "opentelemetry",
            "provide.foundation.tracer.context",
            "provide.foundation.tracer.context"
        ],
        "functions": [
            "_inject_otel_trace_context",
            "_inject_foundation_trace_context",
            "inject_trace_context",
            "should_inject_trace_context"
        ],
        "classes": [],
        "variables": [
            "log",
            "_HAS_OTEL",
            "_otel_trace_module",
            "_HAS_OTEL",
            "current_span",
            "foundation_span",
            "current_trace_id",
            "span_context",
            "current_span"
        ]
    },
    "src/provide/foundation/cli/decorators.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "functools",
            "pathlib",
            "typing",
            "provide.foundation.cli.deps",
            "provide.foundation.context",
            "provide.foundation.process",
            "provide.foundation.serialization"
        ],
        "functions": [
            "logging_options",
            "config_options",
            "output_options",
            "flexible_options",
            "standard_options",
            "error_handler",
            "_ensure_cli_context",
            "_update_context_from_kwargs",
            "_remove_cli_options_from_kwargs",
            "pass_context",
            "version_option",
            "wrapper",
            "wrapper",
            "decorator"
        ],
        "classes": [],
        "variables": [
            "F",
            "LOG_LEVELS",
            "f",
            "f",
            "f",
            "f",
            "f",
            "f",
            "f",
            "f",
            "f",
            "f",
            "f",
            "f",
            "f",
            "cli_option_keys",
            "debug",
            "json_output",
            "old_obj",
            "error_data"
        ]
    },
    "src/provide/foundation/cli/errors.py": {
        "imports": [
            "__future__",
            "provide.foundation.errors.base"
        ],
        "functions": [
            "_default_code",
            "__init__",
            "__init__",
            "_default_code"
        ],
        "classes": [
            "CLIError",
            "InvalidCLIHintError",
            "CLIAdapterNotFoundError",
            "CLIBuildError"
        ],
        "variables": [
            "__all__",
            "pkg"
        ]
    },
    "src/provide/foundation/cli/base.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.hub.info",
            "provide.foundation.hub.registry"
        ],
        "functions": [
            "build_command",
            "build_group",
            "ensure_parent_groups"
        ],
        "classes": [
            "CLIAdapter"
        ],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/cli/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.cli.base",
            "provide.foundation.cli.decorators",
            "provide.foundation.cli.deps",
            "provide.foundation.cli.errors",
            "provide.foundation.cli.utils",
            "provide.foundation.cli.click"
        ],
        "functions": [
            "get_cli_adapter"
        ],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/cli/main.py": {
        "imports": [
            "__future__",
            "provide.foundation.cli.deps",
            "provide.foundation.cli.shutdown",
            "provide.foundation.cli.commands.deps",
            "provide.foundation.cli.commands.logs",
            "provide.foundation.integrations.openobserve.commands"
        ],
        "functions": [
            "_require_click",
            "cli",
            "cli"
        ],
        "classes": [],
        "variables": []
    },
    "src/provide/foundation/cli/utils.py": {
        "imports": [
            "__future__",
            "typing",
            "click.testing",
            "provide.foundation",
            "provide.foundation.cli.deps",
            "provide.foundation.console.output",
            "provide.foundation.context",
            "provide.foundation.logger"
        ],
        "functions": [
            "echo_json",
            "echo_error",
            "echo_success",
            "echo_warning",
            "echo_info",
            "setup_cli_logging",
            "create_cli_context",
            "assert_cli_success",
            "assert_cli_error",
            "__init__",
            "invoke",
            "isolated_filesystem"
        ],
        "classes": [
            "CliTestRunner"
        ],
        "variables": [
            "log",
            "console_formatter",
            "logging_config",
            "telemetry_config",
            "hub",
            "ctx"
        ]
    },
    "src/provide/foundation/cli/deps.py": {
        "imports": [
            "__future__",
            "typing",
            "click",
            "provide.foundation.utils.stubs"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__",
            "_HAS_CLICK",
            "_HAS_CLICK"
        ]
    },
    "src/provide/foundation/cli/helpers.py": {
        "imports": [
            "__future__",
            "collections.abc",
            "functools",
            "sys",
            "typing",
            "provide.foundation.cli.deps",
            "provide.foundation.errors",
            "provide.foundation.formatting",
            "provide.foundation.parsers",
            "provide.foundation.serialization"
        ],
        "functions": [
            "requires_click",
            "get_message_from_stdin",
            "_infer_and_parse_value",
            "build_attributes_from_args",
            "parse_filter_string",
            "format_duration",
            "get_client_from_context",
            "wrapper"
        ],
        "classes": [],
        "variables": [
            "P",
            "R",
            "__all__",
            "formatted",
            "result",
            "client",
            "message",
            "json_dict"
        ]
    },
    "src/provide/foundation/cli/shutdown.py": {
        "imports": [
            "__future__",
            "atexit",
            "collections.abc",
            "contextlib",
            "functools",
            "signal",
            "sys",
            "typing",
            "provide.foundation.config.defaults",
            "provide.foundation.console.output",
            "provide.foundation.hub.foundation",
            "provide.foundation.hub.lifecycle",
            "provide.foundation.logger.processors.otlp",
            "provide.foundation.cli.deps"
        ],
        "functions": [
            "_flush_otlp_logs",
            "_cleanup_foundation_resources",
            "_signal_handler",
            "_restore_signal_handlers",
            "register_cleanup_handlers",
            "unregister_cleanup_handlers",
            "with_cleanup",
            "wrapper"
        ],
        "classes": [],
        "variables": [
            "log",
            "_cleanup_executed",
            "_handlers_registered",
            "P",
            "R",
            "__all__",
            "_cleanup_executed",
            "signal_name",
            "_handlers_registered",
            "_cleanup_executed",
            "_original_sigint_handler",
            "_original_sigterm_handler",
            "_handlers_registered"
        ]
    },
    "src/provide/foundation/cli/click/adapter.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.cli.click.builder",
            "provide.foundation.cli.click.commands",
            "provide.foundation.cli.click.hierarchy",
            "provide.foundation.cli.deps",
            "provide.foundation.hub.info",
            "provide.foundation.hub.registry"
        ],
        "functions": [
            "build_command",
            "build_group",
            "ensure_parent_groups"
        ],
        "classes": [
            "ClickAdapter"
        ],
        "variables": [
            "__all__",
            "command_names",
            "command_names"
        ]
    },
    "src/provide/foundation/cli/click/commands.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.cli.click.hierarchy",
            "provide.foundation.cli.click.parameters",
            "provide.foundation.cli.deps",
            "provide.foundation.cli.errors",
            "provide.foundation.hub.categories",
            "provide.foundation.hub.introspection",
            "provide.foundation.hub.registry",
            "provide.foundation.hub.registry",
            "functools"
        ],
        "functions": [
            "build_click_command_from_info",
            "build_click_command",
            "add_command_to_group",
            "wrapper"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "reg",
            "entry",
            "info",
            "click_cmd",
            "parent",
            "params",
            "force_options",
            "decorated_func",
            "cmd",
            "parts",
            "parent_parts",
            "cmd_parts",
            "decorated_func",
            "decorated_func"
        ]
    },
    "src/provide/foundation/cli/click/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.cli.click.adapter",
            "provide.foundation.cli.click.builder",
            "provide.foundation.cli.click.commands",
            "provide.foundation.cli.click.hierarchy"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/cli/click/hierarchy.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation",
            "provide.foundation.cli.deps",
            "provide.foundation.hub.categories",
            "provide.foundation.hub.info",
            "provide.foundation.hub.registry",
            "provide.foundation.hub.info"
        ],
        "functions": [
            "ensure_parent_groups",
            "create_subgroup",
            "validate_command_entry",
            "should_skip_entry",
            "should_skip_command",
            "group_func"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "parts",
            "info",
            "parent",
            "actual_name",
            "subgroup",
            "info",
            "info",
            "info",
            "group_path",
            "registry_key",
            "parent",
            "info"
        ]
    },
    "src/provide/foundation/cli/click/builder.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.cli.click.commands",
            "provide.foundation.cli.click.hierarchy",
            "provide.foundation.cli.deps",
            "provide.foundation.cli.errors",
            "provide.foundation.hub.categories",
            "provide.foundation.hub.registry",
            "provide.foundation.hub.registry"
        ],
        "functions": [
            "create_command_group"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "reg",
            "group",
            "sorted_commands",
            "commands",
            "entry",
            "entry"
        ]
    },
    "src/provide/foundation/cli/click/parameters.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.cli.deps",
            "provide.foundation.hub.introspection"
        ],
        "functions": [
            "separate_arguments_and_options",
            "apply_click_option",
            "apply_click_argument"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "arguments",
            "options",
            "option_name",
            "is_required"
        ]
    },
    "src/provide/foundation/cli/commands/__init__.py": {
        "imports": [
            "__future__"
        ],
        "functions": [],
        "classes": [],
        "variables": []
    },
    "src/provide/foundation/cli/commands/deps.py": {
        "imports": [
            "__future__",
            "provide.foundation.cli.deps",
            "provide.foundation.cli.helpers",
            "provide.foundation.cli.shutdown",
            "provide.foundation.console.output",
            "provide.foundation.process",
            "provide.foundation.utils.deps"
        ],
        "functions": [
            "_deps_command_impl",
            "deps_command"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "available",
            "deps",
            "available_count",
            "total_count",
            "status"
        ]
    },
    "src/provide/foundation/cli/commands/logs/generate.py": {
        "imports": [
            "__future__",
            "time",
            "provide.foundation.cli.commands.logs.generator",
            "provide.foundation.cli.commands.logs.stats",
            "provide.foundation.cli.deps",
            "provide.foundation.cli.helpers",
            "provide.foundation.cli.shutdown",
            "provide.foundation.logger.ratelimit"
        ],
        "functions": [
            "_configure_rate_limiter",
            "generate_logs_command"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "generator",
            "start_time",
            "logs_sent",
            "logs_failed",
            "logs_rate_limited",
            "limiter",
            "total_time"
        ]
    },
    "src/provide/foundation/cli/commands/logs/send.py": {
        "imports": [
            "__future__",
            "sys",
            "typing",
            "provide.foundation.cli.deps",
            "provide.foundation.cli.helpers",
            "provide.foundation.cli.shutdown",
            "provide.foundation.logger",
            "provide.foundation.process",
            "provide.foundation.integrations.openobserve.otlp",
            "provide.foundation.integrations.openobserve"
        ],
        "functions": [
            "_get_message_from_input",
            "_send_log_entry",
            "send_command"
        ],
        "classes": [],
        "variables": [
            "log",
            "result"
        ]
    },
    "src/provide/foundation/cli/commands/logs/constants.py": {
        "imports": [
            "__future__"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "BURROUGHS_PHRASES",
            "SERVICE_NAMES",
            "OPERATIONS",
            "NORMAL_OPERATIONS",
            "NORMAL_OBJECTS",
            "ERROR_CODES",
            "ERROR_TYPES",
            "NON_ERROR_LEVELS",
            "DOMAINS",
            "ACTIONS",
            "STATUSES",
            "MIN_DURATION_MS",
            "MAX_DURATION_MS"
        ]
    },
    "src/provide/foundation/cli/commands/logs/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.cli.deps",
            "provide.foundation.logger",
            "provide.foundation.cli.commands.logs.generate",
            "provide.foundation.cli.commands.logs.query",
            "provide.foundation.cli.commands.logs.send",
            "provide.foundation.cli.commands.logs.tail",
            "provide.foundation.integrations.openobserve"
        ],
        "functions": [
            "logs_group",
            "logs_group"
        ],
        "classes": [],
        "variables": [
            "log",
            "__all__",
            "__all__"
        ]
    },
    "src/provide/foundation/cli/commands/logs/stats.py": {
        "imports": [
            "__future__",
            "provide.foundation.cli.deps"
        ],
        "functions": [
            "print_generation_config",
            "print_stats",
            "print_final_stats",
            "print_progress"
        ],
        "classes": [],
        "variables": [
            "actual_rate",
            "current_rate",
            "status",
            "progress"
        ]
    },
    "src/provide/foundation/cli/commands/logs/tail.py": {
        "imports": [
            "__future__",
            "provide.foundation.cli.deps",
            "provide.foundation.cli.helpers",
            "provide.foundation.cli.shutdown",
            "provide.foundation.logger",
            "provide.foundation.process",
            "re",
            "provide.foundation.integrations.openobserve"
        ],
        "functions": [
            "_parse_filter_string_for_tail",
            "tail_command"
        ],
        "classes": [],
        "variables": [
            "log",
            "filters",
            "key_value_pattern",
            "matches",
            "filters",
            "output"
        ]
    },
    "src/provide/foundation/cli/commands/logs/query.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.cli.deps",
            "provide.foundation.cli.helpers",
            "provide.foundation.cli.shutdown",
            "provide.foundation.logger",
            "provide.foundation.process",
            "re",
            "provide.foundation.integrations.openobserve",
            "provide.foundation.utils.async_helpers",
            "opentelemetry",
            "provide.foundation.tracer.context",
            "provide.foundation.parsers.errors"
        ],
        "functions": [
            "_get_trace_id_if_needed",
            "_build_query_sql",
            "_execute_and_display_query",
            "query_command"
        ],
        "classes": [],
        "variables": [
            "log",
            "conditions",
            "where_clause",
            "result",
            "current_span",
            "found_trace_id",
            "response",
            "trace_id_result",
            "sql",
            "span_context",
            "output",
            "trace_id"
        ]
    },
    "src/provide/foundation/cli/commands/logs/generator.py": {
        "imports": [
            "__future__",
            "random",
            "threading",
            "time",
            "typing",
            "attrs",
            "provide.foundation.cli.commands.logs.constants",
            "provide.foundation.logger",
            "provide.foundation.cli.commands.logs.stats",
            "provide.foundation.cli.commands.logs.stats",
            "provide.foundation.errors"
        ],
        "functions": [
            "generate_trace_id",
            "generate_span_id",
            "_generate_message",
            "generate_log_entry",
            "send_log_entry",
            "generate_continuous",
            "generate_fixed_count"
        ],
        "classes": [
            "LogGenerator"
        ],
        "variables": [
            "operation",
            "obj",
            "message",
            "is_error",
            "trace_id",
            "entry",
            "logs_sent",
            "logs_failed",
            "start_time",
            "last_stats_time",
            "last_stats_sent",
            "index",
            "logs_sent",
            "logs_failed",
            "logs_rate_limited",
            "trace_id",
            "span_id",
            "service_logger",
            "level",
            "message",
            "current_time",
            "entry",
            "elapsed",
            "expected_count",
            "entry",
            "next_time",
            "sleep_time"
        ]
    },
    "src/provide/foundation/testmode/orchestration.py": {
        "imports": [
            "__future__",
            "typing",
            "os",
            "opentelemetry.trace",
            "opentelemetry.trace",
            "opentelemetry.metrics",
            "opentelemetry.metrics._internal",
            "opentelemetry.metrics",
            "provide.foundation.testmode.internal",
            "os",
            "sys",
            "provide.foundation.logger.processors.main",
            "provide.foundation.hub.event_handlers",
            "provide.foundation.logger.processors.main",
            "provide.foundation.logger.processors.main",
            "provide.foundation.hub.event_handlers",
            "provide.foundation.streams.core",
            "provide.foundation.testmode.internal",
            "provide.foundation.transport.http",
            "provide.foundation.logger.core",
            "provide.foundation.streams.core"
        ],
        "functions": [
            "_reset_otel_once_flag",
            "_reset_tracer_provider",
            "_reset_meter_provider",
            "_reset_opentelemetry_providers",
            "_reset_foundation_environment_variables",
            "reset_foundation_state",
            "reset_foundation_for_testing"
        ],
        "classes": [],
        "variables": [
            "_reset_in_progress",
            "_reset_for_testing_in_progress",
            "env_var_defaults",
            "env_vars_to_reset_conditionally",
            "_reset_in_progress",
            "_reset_for_testing_in_progress",
            "_reset_in_progress",
            "preserve_stream",
            "_reset_for_testing_in_progress",
            "current_stream",
            "preserve_stream"
        ]
    },
    "src/provide/foundation/testmode/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.testmode.detection",
            "provide.foundation.testmode.internal",
            "provide.foundation.testmode.orchestration"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/testmode/internal.py": {
        "imports": [
            "__future__",
            "structlog",
            "gc",
            "asyncio",
            "provide.foundation.logger.core",
            "provide.foundation.logger.core",
            "provide.foundation.streams.file",
            "sys",
            "provide.foundation.eventsets.registry",
            "provide.foundation.logger.setup.coordinator",
            "provide.foundation.logger.setup.coordinator",
            "provide.foundation.hub.manager",
            "provide.foundation.hub.initialization",
            "provide.foundation.hub.manager",
            "provide.foundation.resilience.circuit_async",
            "provide.foundation.resilience.circuit_sync",
            "asyncio",
            "provide.foundation.resilience.decorators",
            "provide.foundation.hub.manager",
            "provide.foundation.hub.manager",
            "provide.foundation._version",
            "provide.foundation.hub.manager",
            "provide.foundation.hub.components",
            "provide.foundation.hub.components",
            "provide.foundation.hub.registry"
        ],
        "functions": [
            "reset_event_loops",
            "reset_time_machine_state",
            "reset_structlog_state",
            "reset_logger_state",
            "reset_hub_state",
            "reset_streams_state",
            "reset_transport_registration_flags",
            "reset_eventsets_state",
            "reset_coordinator_state",
            "reset_profiling_state",
            "reset_global_coordinator",
            "_reset_direct_circuit_breaker_instances",
            "reset_circuit_breaker_state",
            "reset_state_managers",
            "reset_configuration_state",
            "reset_version_cache"
        ],
        "classes": [],
        "variables": [
            "_eventsets_reset_in_progress",
            "_hub_reset_in_progress",
            "_hub_reset_in_progress",
            "_eventsets_reset_in_progress",
            "_hub_reset_in_progress",
            "_eventsets_reset_in_progress",
            "hub",
            "profiler",
            "registry",
            "decorator_tracked_ids",
            "instances_found",
            "hub",
            "hub",
            "loop",
            "http_module",
            "logger_state_manager",
            "config_manager",
            "breaker"
        ]
    },
    "src/provide/foundation/testmode/detection.py": {
        "imports": [
            "__future__",
            "inspect",
            "os",
            "sys",
            "provide.foundation.streams.config",
            "provide.foundation.streams.config"
        ],
        "functions": [
            "is_in_test_mode",
            "is_in_click_testing",
            "should_allow_stream_redirect",
            "should_use_shared_registries"
        ],
        "classes": [],
        "variables": [
            "config",
            "config",
            "module",
            "filename",
            "locals_self",
            "filename",
            "runner"
        ]
    },
    "src/provide/foundation/formatting/numbers.py": {
        "imports": [
            "__future__"
        ],
        "functions": [
            "format_size",
            "_format_duration_components",
            "_format_duration_short",
            "_format_duration_long",
            "format_duration",
            "format_number",
            "format_percentage"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "negative",
            "size_bytes",
            "units",
            "unit_index",
            "parts",
            "parts",
            "days",
            "hours",
            "minutes",
            "secs",
            "percentage",
            "formatted",
            "formatted",
            "formatted",
            "formatted"
        ]
    },
    "src/provide/foundation/formatting/tables.py": {
        "imports": [
            "__future__",
            "typing"
        ],
        "functions": [
            "_calculate_column_widths",
            "_align_cell",
            "_format_table_header",
            "_format_table_row",
            "format_table"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "widths",
            "header_parts",
            "separator_parts",
            "row_parts",
            "str_headers",
            "str_rows",
            "widths",
            "lines",
            "align",
            "alignment",
            "align"
        ]
    },
    "src/provide/foundation/formatting/text.py": {
        "imports": [
            "__future__",
            "re",
            "textwrap"
        ],
        "functions": [
            "truncate",
            "pluralize",
            "indent",
            "wrap_text",
            "strip_ansi"
        ],
        "classes": [],
        "variables": [
            "ANSI_PATTERN",
            "__all__",
            "truncate_at",
            "word",
            "indent_str",
            "lines",
            "result",
            "wrapper",
            "space_pos",
            "plural",
            "truncate_at"
        ]
    },
    "src/provide/foundation/formatting/__init__.py": {
        "imports": [
            "__future__",
            "provide.foundation.formatting.case",
            "provide.foundation.formatting.grouping",
            "provide.foundation.formatting.numbers",
            "provide.foundation.formatting.tables",
            "provide.foundation.formatting.text"
        ],
        "functions": [],
        "classes": [],
        "variables": [
            "__all__"
        ]
    },
    "src/provide/foundation/formatting/grouping.py": {
        "imports": [
            "__future__"
        ],
        "functions": [
            "format_grouped"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "formatted_parts"
        ]
    },
    "src/provide/foundation/formatting/case.py": {
        "imports": [
            "__future__",
            "re",
            "re",
            "re"
        ],
        "functions": [
            "to_snake_case",
            "to_kebab_case",
            "to_camel_case"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "text",
            "text",
            "text",
            "text",
            "parts",
            "result"
        ]
    },
    "src/provide/foundation/metrics/simple.py": {
        "imports": [
            "__future__",
            "collections",
            "typing",
            "provide.foundation.logger"
        ],
        "functions": [
            "__init__",
            "inc",
            "value",
            "__init__",
            "set",
            "inc",
            "dec",
            "value",
            "__init__",
            "observe",
            "count",
            "sum",
            "avg"
        ],
        "classes": [
            "SimpleCounter",
            "SimpleGauge",
            "SimpleHistogram"
        ],
        "variables": [
            "log",
            "labels_key",
            "labels_key",
            "labels_key",
            "labels_key"
        ]
    },
    "src/provide/foundation/metrics/__init__.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.metrics.simple",
            "opentelemetry",
            "opentelemetry.exporter.otlp.proto.grpc.metric_exporter",
            "opentelemetry.exporter.otlp.proto.http.metric_exporter",
            "opentelemetry.sdk.metrics",
            "opentelemetry.sdk.metrics.export"
        ],
        "functions": [
            "counter",
            "gauge",
            "histogram",
            "_set_meter"
        ],
        "classes": [],
        "variables": [
            "__all__",
            "_meter",
            "_HAS_OTEL_METRICS",
            "_meter",
            "_HAS_OTEL_METRICS",
            "otel_counter",
            "otel_gauge",
            "otel_histogram"
        ]
    },
    "src/provide/foundation/metrics/otel.py": {
        "imports": [
            "__future__",
            "typing",
            "provide.foundation.logger.config.telemetry",
            "provide.foundation.logger.setup",
            "opentelemetry",
            "opentelemetry.exporter.otlp.proto.grpc.metric_exporter",
            "opentelemetry.exporter.otlp.proto.http.metric_exporter",
            "opentelemetry.sdk.metrics",
            "opentelemetry.sdk.metrics.export",
            "opentelemetry.sdk.resources",
            "provide.foundation.metrics",
            "provide.foundation.metrics"
        ],
        "functions": [
            "_require_otel_metrics",
            "setup_opentelemetry_metrics",
            "shutdown_opentelemetry_metrics"
        ],
        "classes": [],
        "variables": [
            "slog",
            "_HAS_OTEL_METRICS",
            "resource_attrs",
            "resource",
            "readers",
            "meter_provider",
            "_HAS_OTEL_METRICS",
            "endpoint",
            "headers",
            "reader",
            "current_provider",
            "provider_type",
            "should_setup",
            "meter_provider",
            "exporter",
            "exporter",
            "meter",
            "meter"
        ]
    }
}