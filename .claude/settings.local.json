{
  "permissions": {
    "allow": [
      "Bash(PYTHONPATH=src .venv/bin/ruff format /Users/tim/code/gh/provide-io/provide-testkit/src/provide/testkit/streams.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes /Users/tim/code/gh/provide-io/provide-testkit/src/provide/testkit/streams.py)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/integration/test_integration_coverage_100.py::test_log_file_redirection -xvs --tb=short)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/test_config_sync_simple.py::TestSyncModuleCoverage::test_load_config_from_env_parameters -xvs)",
      "Bash(PYTHONPATH=src python:*)",
      "Bash(PYTHONPATH=src grep -n -A 50 \"async def from_env_async\" /Users/tim/code/gh/provide-io/provide-foundation/src/provide/foundation/config/env.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format src/provide/foundation/config/env.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes src/provide/foundation/config/env.py)",
      "Bash(PYTHONPATH=src .venv/bin/mypy src/provide/foundation/config/env.py)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/test_config_sync_simple.py::TestSyncModuleCoverage::test_load_config_from_env_parameters tests/integration/test_integration_coverage_100.py::test_log_file_redirection -v)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format src/provide/foundation/streams/core.py src/provide/foundation/streams/file.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes src/provide/foundation/streams/core.py src/provide/foundation/streams/file.py)",
      "Bash(PYTHONPATH=src .venv/bin/mypy src/provide/foundation/streams/core.py src/provide/foundation/streams/file.py)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/integration/test_integration_coverage_100.py::test_log_file_redirection -v)",
      "Bash(PYTHONPATH=src grep -n \"is_in_click_testing\" src/provide/foundation/streams/file.py)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/integration/test_integration_coverage_100.py::test_log_file_redirection -v -s)",
      "Bash(PYTHONPATH=src grep -r \"configure_file_logging\" src/provide/foundation/ --include=\"*.py\")",
      "Bash(PYTHONPATH=src grep -n -A 10 -B 5 \"configure_file_logging\" src/provide/foundation/logger/setup/coordinator.py)",
      "Bash(PYTHONPATH=src grep -n -A 15 \"def configure_structlog_output\" src/provide/foundation/logger/setup/)",
      "Bash(PYTHONPATH=src grep -r -n -A 15 \"def configure_structlog_output\" src/provide/foundation/logger/setup/)",
      "Bash(PYTHONPATH=src grep -r -n -A 10 \"def apply_structlog_configuration\" src/provide/foundation/logger/setup/)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format src/provide/foundation/streams/file.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes src/provide/foundation/streams/file.py)",
      "Bash(PYTHONPATH=src .venv/bin/mypy src/provide/foundation/streams/file.py)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/streams/ --tb=short -q)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/test_config_env.py::TestRuntimeConfigClass::test_from_env_with_prefix -xvs)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/test_config_env.py::TestRuntimeConfigClass -v --tb=short)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/ --tb=short -q --maxfail=5)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/test_config_sync_simple.py::TestSyncModuleCoverage::test_load_config_from_env_parameters -v)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/test_config_env.py::TestRuntimeConfigClass -v)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format tests/config/test_config_sync_simple.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes tests/config/test_config_sync_simple.py)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/test_config_env.py tests/config/test_config_sync_simple.py::TestSyncModuleCoverage::test_load_config_from_env_parameters --tb=short -q)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/integration/test_integration_core.py::test_configuration_from_environment -xvs)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/integration/test_integration_core.py::test_explicit_configuration_override tests/integration/test_integration_core.py::test_foundation_testbed_integration tests/integration/test_integration_coverage_100.py::test_log_level_case_insensitivity tests/integration/test_integration_coverage_100.py::test_no_color_env_var --tb=short -q)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/integration/test_integration_coverage_100.py::test_shutdown_and_reinit tests/integration/test_integration_coverage_100.py::test_json_formatter_from_env tests/logger/test_logger_production_compliance.py::TestProductionReadinessScenarios::test_high_throughput_scenario --tb=short -q)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/logger/test_logger_production_compliance.py::TestProductionReadinessScenarios::test_high_throughput_scenario tests/integration/test_integration_core.py::test_configuration_from_environment tests/integration/test_integration_core.py::test_explicit_configuration_override tests/integration/test_integration_core.py::test_foundation_testbed_integration tests/integration/test_integration_coverage_100.py::test_log_level_case_insensitivity tests/integration/test_integration_coverage_100.py::test_shutdown_and_reinit tests/integration/test_integration_coverage_100.py::test_json_formatter_from_env tests/integration/test_integration_coverage_100.py::test_no_color_env_var -v)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/integration/test_integration_core.py::test_foundation_testbed_integration -xvs)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/logger/test_logger_production_compliance.py::TestProductionReadinessScenarios::test_high_throughput_scenario tests/integration/test_integration_core.py::test_configuration_from_environment tests/integration/test_integration_core.py::test_explicit_configuration_override tests/integration/test_integration_core.py::test_foundation_testbed_integration tests/integration/test_integration_coverage_100.py::test_log_level_case_insensitivity tests/integration/test_integration_coverage_100.py::test_shutdown_and_reinit tests/integration/test_integration_coverage_100.py::test_json_formatter_from_env tests/integration/test_integration_coverage_100.py::test_no_color_env_var --tb=short -q)",
      "Read(//private/tmp/**)",
      "Bash(env)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/integration/test_integration_core.py::test_basic_initialization_and_logging -xvs)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format tests/integration/test_integration_core.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes tests/integration/test_integration_core.py)",
      "Bash(PYTHONPATH=src .venv/bin/mypy tests/integration/test_integration_core.py)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/test_config_env.py -v)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/test_config_loader.py -v)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check tests/config/test_config_loader.py)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/ --tb=short -q)",
      "Bash(PYTHONPATH=src .venv/bin/python:*)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/test_config_manager_coverage.py -v --tb=short)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/test_config_manager_coverage.py -v)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/config/ -v --tb=short)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format src/provide/foundation/config/ tests/config/)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/Users/tim/code/gh/provide-io"
    ]
  }
}