{
  "permissions": {
    "allow": [
      "Bash(FOUNDATION_LOG_LEVEL=INFO PYTHONPATH=src python examples/configuration/03_config_management.py)",
      "Bash(PYTHONPATH=src python examples/integration/01_celery_integration.py)",
      "Bash(PYTHONPATH=src python examples/production/02_error_handling.py)",
      "Bash(PYTHONPATH=src python:*)",
      "Bash(awk:*)",
      "Bash(PROVIDE_LOG_LEVEL=INFO PYTHONPATH=src python examples/telemetry/04_das_pattern.py)",
      "Bash(PYTHONPATH=src timeout 3 python examples/tracing/02_distributed_tracing.py)",
      "Bash(PYTHONPATH=src timeout 5 python examples/integration/01a_basic_task_queue.py)",
      "Bash(PYTHONPATH=src timeout 3 python examples/integration/01a_basic_task_queue.py)",
      "Bash(PYTHONPATH=src timeout 2 python examples/telemetry/03_named_loggers.py)",
      "Bash(/dev/null)",
      "Bash(PYTHONPATH=src timeout 2 python examples/async/01_async_usage.py)",
      "Bash(PYTHONPATH=src timeout 2 python examples/integration/01a_basic_task_queue.py)",
      "Bash(PYTHONPATH=src timeout 10 python examples/integration/01_celery_integration.py --demo)",
      "Bash(pip install:*)",
      "Bash(PYTHONPATH=src timeout 15 python examples/integration/01_celery_integration.py --demo)",
      "Bash(timeout:*)",
      "Bash(PYTHONPATH=/Users/tim/code/gh/provide-io/flavorpack/workenv/wrkenv_darwin_arm64/lib/python3.11/site-packages:/Users/tim/code/gh/provide-io/provide-foundation/src python -c \"import celery; print(''Celery version:'', celery.__version__)\")",
      "Bash(PYTHONPATH=/Users/tim/code/gh/provide-io/flavorpack/workenv/wrkenv_darwin_arm64/lib/python3.11/site-packages:/Users/tim/code/gh/provide-io/provide-foundation/src timeout 15 python examples/integration/01_celery_integration.py --demo)",
      "Bash(mkdocs build:*)",
      "Bash(while read file)",
      "Bash(then echo \"Missing: docs/$file\")",
      "Bash(__NEW_LINE__ fi)",
      "Bash(__NEW_LINE__ done)",
      "WebSearch",
      "Bash(xargs ls:*)",
      "Bash(PYTHONPATH=src pytest tests/config/test_converters.py::TestFoundationLogOutputParsing -v)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/Users/tim/code/gh/provide-io"
    ]
  }
}