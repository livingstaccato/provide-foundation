{
  "permissions": {
    "allow": [
      "Bash(PYTHONPATH=src pytest tests/logger/test_asyncio_suppression.py tests/config/test_defaults.py -v -q)",
      "Bash(PYTHONPATH=src pytest tests/conversion/test_inference_concurrency_safety.py::TestInferenceConcurrencySafety::test_concurrent_inference_is_isolated -xvs)",
      "Bash(PYTHONPATH=src pytest tests/validation/test_enterprise_recursion.py::TestAdvancedRecursionDetection::test_handles_legitimate_deep_nesting -xvs)",
      "Bash(PYTHONPATH=src pytest -x --tb=short)",
      "Bash(PYTHONPATH=src pytest tests/conversion/test_inference_cache_context.py::TestInferenceCacheContext::test_nested_context_reuses_existing_cache -xvs)",
      "Bash(PYTHONPATH=src pytest tests/conversion/test_inference_concurrency_safety.py::TestInferenceConcurrencySafety::test_concurrent_inference_is_isolated tests/validation/test_enterprise_recursion.py::TestAdvancedRecursionDetection::test_handles_legitimate_deep_nesting -v)",
      "Bash(PYTHONPATH=src pytest --tb=no -q)",
      "Bash(PYTHONPATH=src mypy src/ --show-error-codes --no-error-summary)",
      "Bash(PYTHONPATH=src mypy src/)",
      "Bash(PYTHONPATH=src pytest --run-benchmarks -v)",
      "Bash(PYTHONPATH=src pytest tests/logger/test_asyncio_suppression.py -v -q)",
      "Bash(PYTHONPATH=src pytest tests/utils/test_formatting.py -v)",
      "Bash(PYTHONPATH=src pytest tests/utils/test_utils_coverage.py -v)",
      "Bash(PYTHONPATH=src pytest tests/utils/test_formatting.py tests/utils/test_utils_coverage.py --tb=no -q)",
      "Bash(PYTHONPATH=src python -c \"from provide.foundation.utils.text_utils import format_table; print(''Text utils import works'')\")",
      "Bash(PYTHONPATH=src pytest tests/utils/test_formatting.py::TestSizeFormatting::test_format_size_bytes -v)",
      "Bash(PYTHONPATH=src pytest -xvs tests/conversion/test_inference_concurrency_safety.py::TestInferenceConcurrencySafety::test_concurrent_inference_is_isolated)",
      "Bash(PYTHONPATH=src python:*)",
      "Bash(PYTHONPATH=src pytest tests/logger/ -v -q --tb=short)",
      "Bash(PYTHONPATH=src pytest tests/logger/test_asyncio_suppression.py::TestAsyncioDebugSuppression::test_asyncio_module_hierarchy_filtering -v)",
      "Bash(PYTHONPATH=src pytest tests/hub/test_hub_init_coverage.py::TestHubModuleBehavior::test_module_docstring_present -v -s)",
      "Bash(PYTHONPATH=src pytest tests/hub/test_hub_init_coverage.py::TestHubModuleBehavior::test_module_docstring_present -v)",
      "Bash(PYTHONPATH=src pytest tests/hub/ tests/logger/ -q --tb=no)",
      "Bash(PYTHONPATH=src mypy src/provide/foundation/logger/ --show-error-codes --no-error-summary)",
      "Bash(PYTHONPATH=src grep -n \"otel_trace\" src/provide/foundation/logger/processors/trace.py)",
      "Bash(PYTHONPATH=src mypy src/provide/foundation/hub/foundation.py src/provide/foundation/observability/__init__.py src/provide/foundation/cli/main.py --show-error-codes --no-error-summary)",
      "Bash(PYTHONPATH=src mypy --version)",
      "Bash(PYTHONPATH=src mypy src/provide/foundation/hub/foundation.py src/provide/foundation/observability/__init__.py src/provide/foundation/cli/ --show-error-codes --no-error-summary)",
      "Bash(PYTHONPATH=src pytest --co -q)",
      "Bash(PYTHONPATH=src pytest tests/logger/processors/test_trace_coverage.py::TestTraceProcessorWithOtel::test_inject_trace_context_with_otel_span -xvs)",
      "Bash(PYTHONPATH=src pytest -x --tb=short -q)",
      "Bash(PYTHONPATH=src pytest tests/logger/processors/test_trace_coverage.py::TestTraceProcessorImports::test_otel_import_handling -xvs)",
      "Bash(PYTHONPATH=src pytest tests/test_docs_generator.py::TestAPIDocGenerator::test_should_skip_small_init_files -xvs)",
      "Bash(PYTHONPATH=src pytest tests/test_docs_generator.py::TestAPIDocGenerator::test_should_skip_private_modules -xvs)",
      "Bash(PYTHONPATH=src pytest tests/test_docs_generator.py::TestAPIDocGenerator::test_should_skip_skip_patterns -xvs)",
      "Bash(PYTHONPATH=src pytest tests/test_docs_generator.py --collect-only)",
      "Bash(PYTHONPATH=src pytest tests/test_docs_generator.py -v)",
      "Bash(PYTHONPATH=src pytest tests/test_docs_generator.py::TestAPIDocGenerator::test_generate_full_workflow -xvs)",
      "Bash(PYTHONPATH=src pytest tests/test_docs_generator.py::TestAPIDocGeneratorIntegration::test_real_file_processing -xvs)",
      "Bash(PYTHONPATH=src ty)",
      "Bash(PYTHONPATH=src pytest tests/test_docs_generator.py -v -q)",
      "Bash(PYTHONPATH=src pytest tests/test_docs_generator.py::TestAPIDocGenerator::test_init_default_values -v -q)",
      "Bash(while read dir)",
      "WebSearch",
      "Bash(xargs dirname:*)",
      "Bash(PYTHONPATH=src mypy src/pyvider/rpcplugin/client/ --show-error-codes --no-error-summary)",
      "Bash(PYTHONPATH=src mypy src/pyvider/rpcplugin/client/core.py --show-error-codes --no-error-summary)",
      "Bash(PYTHONPATH=src rg \"self: ClientProtocol\" src/pyvider/rpcplugin/client/handshake.py)",
      "Bash(PYTHONPATH=src rg \"self: ClientProtocol\" src/pyvider/rpcplugin/client/process.py)",
      "Bash(PYTHONPATH=src rg \"def.*address.*:.*str[^|]\" src/pyvider/rpcplugin/client/)",
      "Bash(PYTHONPATH=src mypy src/pyvider/rpcplugin/client/handshake.py --show-error-codes --no-error-summary)",
      "Bash(echo \"Exit code: $?\")",
      "Bash(PYTHONPATH=src pytest tests/handshake/test_handshake_process_io.py::test_read_handshake_response_timeout -xvs)",
      "Bash(PYTHONPATH=src pytest tests/handshake/test_handshake_process_io.py::test_read_handshake_response_timeout tests/handshake/test_handshake_process_io.py::test_read_handshake_response_timeout_stderr_read_error -xvs)",
      "Bash(PYTHONPATH=src pytest tests/handshake/test_handshake_process_io.py -x)",
      "Bash(PYTHONPATH=src pytest tests/handshake/test_handshake_process_io.py::test_read_handshake_response_timeout tests/handshake/test_handshake_process_io.py::test_read_handshake_response_timeout_stderr_read_error -v)",
      "Bash(PYTHONPATH=src pytest tests/ -x --tb=short -q)",
      "Bash(PYTHONPATH=src pytest tests/handshake/test_handshake_process_io.py -v)",
      "Bash(PYTHONPATH=src pytest tests/ --tb=short -q)",
      "Bash(PYTHONPATH=src pytest tests/handshake/test_handshake_process_io.py::test_read_handshake_response_timeout tests/handshake/test_handshake_process_io.py::test_read_handshake_stdout_becomes_none -v)",
      "Bash(PYTHONPATH=src pytest tests/handshake/test_handshake_process_io.py --tb=short -q)",
      "Bash(PYTHONPATH=src pytest tests/ --tb=short -q --maxfail=3)",
      "Bash(PYTHONPATH=src pytest tests/client/test_client_retry_logic.py::test_connect_handshake_total_timeout_exceeded -xvs)",
      "Bash(PYTHONPATH=src pytest tests/client/test_client_integration.py::test_client_integration -xvs)",
      "Bash(PYTHONPATH=src pytest tests/client/test_client_integration.py -k test_client_integration -xvs)",
      "Bash(PYTHONPATH=src pytest tests/client/test_client_retry_logic.py::test_connect_handshake_total_timeout_exceeded tests/client/test_client_integration.py::test_client_integration -xvs)",
      "Bash(PYTHONPATH=src pytest tests/ --tb=short -q --maxfail=10)",
      "Bash(PYTHONPATH=src pytest tests/core/test_types.py::test_is_valid_handler_true -xvs)",
      "Bash(PYTHONPATH=src pytest tests/core/test_types.py -v)",
      "Bash(PYTHONPATH=src pytest tests/transport/unix/test_transport_unix.py::test_check_socket_in_use_stat_oserror -xvs)",
      "Bash(PYTHONPATH=src pytest tests/transport/unix/test_transport_unix_connect.py::test_unix_connect_stat_fails -xvs)",
      "Bash(PYTHONPATH=src pytest tests/transport/unix/ --tb=short -q)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/Users/tim/code/gh/provide-io"
    ]
  }
}