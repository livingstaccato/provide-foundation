{
  "permissions": {
    "allow": [
      "Bash(PYTHONPATH=src .venv/bin/ruff format src/provide/foundation/hub/initialization.py src/provide/foundation/hub/foundation.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes src/provide/foundation/hub/initialization.py src/provide/foundation/hub/foundation.py)",
      "Bash(PYTHONPATH=src .venv/bin/mypy src/provide/foundation/hub/initialization.py src/provide/foundation/hub/foundation.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format src/provide/foundation/testmode/internal.py src/provide/foundation/testmode/__init__.py src/provide/foundation/hub/initialization.py src/provide/foundation/hub/foundation.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes src/provide/foundation/testmode/internal.py src/provide/foundation/testmode/__init__.py src/provide/foundation/hub/initialization.py src/provide/foundation/hub/foundation.py)",
      "Bash(PYTHONPATH=src .venv/bin/mypy src/provide/foundation/testmode/internal.py src/provide/foundation/testmode/__init__.py src/provide/foundation/hub/initialization.py src/provide/foundation/hub/foundation.py)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/hub/ -x --tb=short -q)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/hub/test_hub_initialization.py::TestHubInitialization::test_hub_idempotent_initialization -xvs)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/cli/ -x --tb=short -q)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format src/provide/foundation/hub/protocols.py src/provide/foundation/hub/registry.py src/provide/foundation/hub/manager.py src/provide/foundation/hub/__init__.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes src/provide/foundation/hub/protocols.py src/provide/foundation/hub/registry.py src/provide/foundation/hub/manager.py src/provide/foundation/hub/__init__.py)",
      "Bash(PYTHONPATH=src .venv/bin/mypy src/provide/foundation/hub/protocols.py src/provide/foundation/hub/registry.py src/provide/foundation/hub/manager.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format src/provide/foundation/resilience/bulkhead.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes src/provide/foundation/resilience/bulkhead.py)",
      "Bash(PYTHONPATH=src .venv/bin/mypy src/provide/foundation/resilience/bulkhead.py)",
      "Bash(PYTHONPATH=src .venv/bin/python:*)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/hub/ -x --tb=short -q --maxfail=3)",
      "Bash(PYTHONPATH=src .venv/bin/pytest --tb=short -q --maxfail=5)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/integration/ -x --tb=short -q)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/logger/ -x --tb=short -q --maxfail=3)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format examples/architecture_improvements.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes examples/architecture_improvements.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format src/provide/foundation/logger/setup/coordinator.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes src/provide/foundation/logger/setup/coordinator.py)",
      "Bash(PYTHONPATH=src .venv/bin/mypy src/provide/foundation/logger/setup/coordinator.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format src/provide/foundation/testmode/internal.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes src/provide/foundation/testmode/internal.py)",
      "Bash(PYTHONPATH=src .venv/bin/mypy src/provide/foundation/testmode/internal.py)",
      "Bash(PYTHONPATH=src .venv/bin/pytest tests/logger/test_logger_production_compliance.py::TestProductionReadinessScenarios::test_graceful_shutdown_scenario -xvs)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format src/provide/foundation/hub/manager.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes src/provide/foundation/hub/manager.py)",
      "Bash(PYTHONPATH=src .venv/bin/mypy src/provide/foundation/hub/manager.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff format src/provide/foundation/hub/components.py)",
      "Bash(PYTHONPATH=src .venv/bin/ruff check --fix --unsafe-fixes src/provide/foundation/hub/components.py)",
      "Bash(PYTHONPATH=src .venv/bin/mypy src/provide/foundation/hub/components.py)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/Users/tim/code/gh/provide-io"
    ]
  }
}